{"ast":null,"code":"// src/pages/PatientTemplatesPage.js\nimport React,{useState,useEffect}from'react';import'../styles/routineTemplates.css';import'../styles/patientTemplates.css';import{FaCheckCircle,FaRegCircle}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const token=localStorage.getItem('token');if(!token)window.location='/login';// Decode patientId from JWT\nlet patientId;try{const payload=JSON.parse(atob(token.split('.')[1]));patientId=payload.user.id;}catch{console.error('Token inválido');window.location='/login';}const headers={'Content-Type':'application/json','x-auth-token':token};useEffect(()=>{(async()=>{try{const res=await fetch(`/api/routines/instances/${patientId}`,{headers});if(res.status===401)throw new Error('Sesión expirada');if(!res.ok){const txt=await res.text();throw new Error(`Error ${res.status}: ${txt}`);}const data=await res.json();setInstances(data);// each has { _id, template: {...}, completedActivities: [] }\n}catch(err){console.error(err);setError(err.message);}finally{setLoading(false);}})();},[patientId]);const toggleActivity=async(instanceId,idx,currently)=>{try{const res=await fetch(`/api/routines/instances/${instanceId}/activities/${idx}`,{method:'PATCH',headers,body:JSON.stringify({completed:!currently})});if(!res.ok)throw new Error(`Error ${res.status}`);const{completedActivities}=await res.json();setInstances(instances.map(inst=>inst._id===instanceId?{...inst,completedActivities}:inst));}catch(err){console.error(err);alert('No se pudo actualizar la actividad');}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"pt-templates-container\",children:\"Cargando\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"pt-templates-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pt-templates-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),instances.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"pt-empty\",children:\"No tienes plantillas asignadas.\"}):instances.map(inst=>{const tpl=inst.template;const total=tpl.activities.length;const done=inst.completedActivities.length;return/*#__PURE__*/_jsxs(\"div\",{className:\"pt-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pt-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:tpl.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-progress\",children:[done,\" / \",total,\" completadas\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"pt-desc\",children:tpl.description}),/*#__PURE__*/_jsx(\"ul\",{className:\"pt-activities\",children:tpl.activities.map((act,i)=>{const completed=inst.completedActivities.includes(i);return/*#__PURE__*/_jsxs(\"li\",{className:\"pt-activity\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pt-toggle\",onClick:()=>toggleActivity(inst._id,i,completed),children:completed?/*#__PURE__*/_jsx(FaCheckCircle,{}):/*#__PURE__*/_jsx(FaRegCircle,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-activity-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:act.name}),/*#__PURE__*/_jsx(\"p\",{children:act.desc})]}),/*#__PURE__*/_jsx(\"span\",{className:`pt-challenge ${act.challenge.toLowerCase()}`,children:act.challenge}),/*#__PURE__*/_jsxs(\"span\",{className:\"pt-minutes\",children:[act.minutes,\" min\"]})]},i);})})]},inst._id);})]})});}","map":{"version":3,"names":["React","useState","useEffect","FaCheckCircle","FaRegCircle","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","instances","setInstances","loading","setLoading","error","setError","token","localStorage","getItem","window","location","patientId","payload","JSON","parse","atob","split","user","id","console","headers","res","fetch","status","Error","ok","txt","text","data","json","err","message","toggleActivity","instanceId","idx","currently","method","body","stringify","completed","completedActivities","map","inst","_id","alert","className","children","length","tpl","template","total","activities","done","name","description","act","i","includes","onClick","desc","challenge","toLowerCase","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/pages/PatientTemplatesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/routineTemplates.css';\r\nimport '../styles/patientTemplates.css';\r\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n\r\n  const token = localStorage.getItem('token');\r\n  if (!token) window.location = '/login';\r\n\r\n  // Decode patientId from JWT\r\n  let patientId;\r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    patientId = payload.user.id;\r\n  } catch {\r\n    console.error('Token inválido');\r\n    window.location = '/login';\r\n  }\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': token\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `/api/routines/instances/${patientId}`,\r\n          { headers }\r\n        );\r\n        if (res.status === 401) throw new Error('Sesión expirada');\r\n        if (!res.ok) {\r\n          const txt = await res.text();\r\n          throw new Error(`Error ${res.status}: ${txt}`);\r\n        }\r\n        const data = await res.json();\r\n        setInstances(data); // each has { _id, template: {...}, completedActivities: [] }\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [patientId]);\r\n\r\n  const toggleActivity = async (instanceId, idx, currently) => {\r\n    try {\r\n      const res = await fetch(\r\n        `/api/routines/instances/${instanceId}/activities/${idx}`,\r\n        {\r\n          method: 'PATCH',\r\n          headers,\r\n          body: JSON.stringify({ completed: !currently })\r\n        }\r\n      );\r\n      if (!res.ok) throw new Error(`Error ${res.status}`);\r\n      const { completedActivities } = await res.json();\r\n      setInstances(instances.map(inst =>\r\n        inst._id === instanceId\r\n          ? { ...inst, completedActivities }\r\n          : inst\r\n      ));\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('No se pudo actualizar la actividad');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"pt-templates-container\">Cargando…</div>;\r\n  if (error)   return <div className=\"pt-templates-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"patient-templates-page\">\r\n      <div className=\"pt-templates-container\">\r\n        <h1>Mis Plantillas Asignadas</h1>\r\n        {instances.length === 0 ? (\r\n          <p className=\"pt-empty\">No tienes plantillas asignadas.</p>\r\n        ) : (\r\n          instances.map(inst => {\r\n            const tpl = inst.template;\r\n            const total = tpl.activities.length;\r\n            const done  = inst.completedActivities.length;\r\n            return (\r\n              <div key={inst._id} className=\"pt-card\">\r\n                <div className=\"pt-header\">\r\n                  <h2>{tpl.name}</h2>\r\n                  <div className=\"pt-progress\">\r\n                    {done} / {total} completadas\r\n                  </div>\r\n                </div>\r\n                <p className=\"pt-desc\">{tpl.description}</p>\r\n                <ul className=\"pt-activities\">\r\n                  {tpl.activities.map((act, i) => {\r\n                    const completed = inst.completedActivities.includes(i);\r\n                    return (\r\n                      <li key={i} className=\"pt-activity\">\r\n                        <button\r\n                          className=\"pt-toggle\"\r\n                          onClick={() =>\r\n                            toggleActivity(inst._id, i, completed)\r\n                          }\r\n                        >\r\n                          {completed\r\n                            ? <FaCheckCircle />\r\n                            : <FaRegCircle />}\r\n                        </button>\r\n                        <div className=\"pt-activity-info\">\r\n                          <strong>{act.name}</strong>\r\n                          <p>{act.desc}</p>\r\n                        </div>\r\n                        <span className={`pt-challenge ${act.challenge.toLowerCase()}`}>\r\n                          {act.challenge}\r\n                        </span>\r\n                        <span className=\"pt-minutes\">{act.minutes} min</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}