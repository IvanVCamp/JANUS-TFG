{"ast":null,"code":"// services/chatService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst chatService = {\n  // Obtener chats\n  getChats: async () => {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/chats`, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  },\n  // Iniciar chat con un usuario\n  startChat: async userId => {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/chats`, {\n      userId\n    }, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  },\n  // Obtener mensajes de un chat\n  getMessages: async chatId => {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/chats/${chatId}/messages`, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  },\n  // Enviar mensaje (texto + archivo opcional)\n  sendMessage: async (chatId, formData) => {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/chats/${chatId}/messages`, formData, {\n      headers: {\n        'x-auth-token': token,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Buscar usuarios\n  searchUsers: async query => {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/users/search`, {\n      params: {\n        q: query\n      },\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  }\n};\nexport default chatService;","map":{"version":3,"names":["axios","API_URL","chatService","getChats","token","localStorage","getItem","response","get","headers","data","startChat","userId","post","getMessages","chatId","sendMessage","formData","searchUsers","query","params","q"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/services/chatService.js"],"sourcesContent":["// services/chatService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst chatService = {\r\n  // Obtener chats\r\n  getChats: async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${API_URL}/chats`, {\r\n      headers: {\r\n        'x-auth-token': token,\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Iniciar chat con un usuario\r\n  startChat: async (userId) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post(\r\n      `${API_URL}/chats`,\r\n      { userId },\r\n      {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener mensajes de un chat\r\n  getMessages: async (chatId) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${API_URL}/chats/${chatId}/messages`, {\r\n      headers: {\r\n        'x-auth-token': token,\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Enviar mensaje (texto + archivo opcional)\r\n  sendMessage: async (chatId, formData) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post(`${API_URL}/chats/${chatId}/messages`, formData, {\r\n      headers: {\r\n        'x-auth-token': token,\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Buscar usuarios\r\n  searchUsers: async (query) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(`${API_URL}/users/search`, {\r\n      params: { q: query },\r\n      headers: {\r\n        'x-auth-token': token,\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default chatService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,WAAW,GAAG;EAClB;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,QAAQ,EAAE;MACnDQ,OAAO,EAAE;QACP,cAAc,EAAEL;MAClB;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAC,SAAS,EAAE,MAAOC,MAAM,IAAK;IAC3B,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAC/B,GAAGZ,OAAO,QAAQ,EAClB;MAAEW;IAAO,CAAC,EACV;MACEH,OAAO,EAAE;QACP,cAAc,EAAEL;MAClB;IACF,CACF,CAAC;IACD,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAI,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC7B,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,UAAUc,MAAM,WAAW,EAAE;MACtEN,OAAO,EAAE;QACP,cAAc,EAAEL;MAClB;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAM,WAAW,EAAE,MAAAA,CAAOD,MAAM,EAAEE,QAAQ,KAAK;IACvC,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,UAAUc,MAAM,WAAW,EAAEE,QAAQ,EAAE;MACjFR,OAAO,EAAE;QACP,cAAc,EAAEL,KAAK;QACrB,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAQ,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,eAAe,EAAE;MAC1DmB,MAAM,EAAE;QAAEC,CAAC,EAAEF;MAAM,CAAC;MACpBV,OAAO,EAAE;QACP,cAAc,EAAEL;MAClB;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}