{"ast":null,"code":"// PatientTemplatesPage.js: muestra plantillas asignadas al paciente\n// Usa fetchInstances y updateInstanceStatus de routineTemplateService citeturn2file2\n// Estilos desde patientTemplates.css citeturn2file4\nimport React,{useState,useEffect}from'react';import jwt_decode from'jwt-decode';import{fetchInstances,updateInstanceStatus}from'../services/routineTemplateService';import'./styles/patientTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const[instances,setInstances]=useState([]);const[filtered,setFiltered]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[search,setSearch]=useState('');const[statusFilter,setStatusFilter]=useState('all');const[sortOrder,setSortOrder]=useState('desc');const[expanded,setExpanded]=useState({});const token=localStorage.getItem('token');let patientId=null;try{patientId=jwt_decode(token).id;}catch(e){console.error('Token inválido',e);}// Carga inicial de instancias\nuseEffect(()=>{if(!token||!patientId)return;fetchInstances(patientId).then(_ref=>{let{data}=_ref;const insts=data.map(inst=>({...inst,progress:inst.completedActivities.length/inst.template.activities.length*100}));setInstances(insts);}).catch(err=>setError(err.message)).finally(()=>setLoading(false));},[patientId,token]);// Filtrado, búsqueda y ordenación\nuseEffect(()=>{let result=[...instances];if(search){result=result.filter(i=>i.template.name.toLowerCase().includes(search.toLowerCase()));}if(statusFilter!=='all'){result=result.filter(i=>{const done=i.completedActivities.length;const total=i.template.activities.length;if(statusFilter==='pending')return done===0;if(statusFilter==='in-progress')return done>0&&done<total;if(statusFilter==='completed')return done===total;});}result.sort((a,b)=>{const dateA=new Date(a.assignedOn);const dateB=new Date(b.assignedOn);return sortOrder==='asc'?dateA-dateB:dateB-dateA;});setFiltered(result);},[instances,search,statusFilter,sortOrder]);const toggleActivity=(instanceId,activityId)=>{const inst=instances.find(i=>i._id===instanceId);const isDone=inst.completedActivities.includes(activityId);const updatedList=isDone?inst.completedActivities.filter(id=>id!==activityId):[...inst.completedActivities,activityId];// Actualización optimista\nsetInstances(prev=>prev.map(i=>i._id===instanceId?{...i,completedActivities:updatedList,progress:updatedList.length/i.template.activities.length*100}:i));updateInstanceStatus(instanceId,{completedActivities:updatedList}).catch(err=>console.error(err));};const completeAll=instanceId=>{const inst=instances.find(i=>i._id===instanceId);const allIds=inst.template.activities.map(a=>a._id);setInstances(prev=>prev.map(i=>i._id===instanceId?{...i,completedActivities:allIds,progress:100}:i));updateInstanceStatus(instanceId,{completedActivities:allIds}).catch(err=>console.error(err));};return/*#__PURE__*/_jsx(\"div\",{className:\"patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pt-templates-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pt-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Mis Plantillas Asignadas\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-controls\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Buscar plantilla...\",value:search,onChange:e=>setSearch(e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{value:statusFilter,onChange:e=>setStatusFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"Todas\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pendientes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in-progress\",children:\"En Progreso\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completadas\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setSortOrder(prev=>prev==='asc'?'desc':'asc'),children:[\"Fecha \",sortOrder==='asc'?'↑':'↓']})]})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"pt-empty\",children:\"Cargando plantillas...\"}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"pt-empty\",children:[\"Error: \",error]}):filtered.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"pt-empty\",children:\"No hay plantillas que coincidan\"}):filtered.map(inst=>/*#__PURE__*/_jsxs(\"div\",{className:\"pt-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pt-header\",onClick:()=>setExpanded(prev=>({...prev,[inst._id]:!prev[inst._id]})),style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(\"h3\",{children:inst.template.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"pt-progress\",children:[Math.round(inst.progress),\"%\"]}),/*#__PURE__*/_jsx(\"span\",{children:expanded[inst._id]?'▲':'▼'})]}),/*#__PURE__*/_jsx(\"p\",{className:\"pt-desc\",children:inst.template.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-meta\",children:[\"Asignada: \",new Date(inst.assignedOn).toLocaleDateString()]}),expanded[inst._id]&&/*#__PURE__*/_jsx(\"ul\",{className:\"pt-activities\",children:inst.template.activities.map(act=>/*#__PURE__*/_jsxs(\"li\",{className:\"pt-activity\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pt-toggle\",onClick:()=>toggleActivity(inst._id,act._id),children:inst.completedActivities.includes(act._id)?'✅':'⬜️'}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-activity-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:act.name}),/*#__PURE__*/_jsx(\"p\",{children:act.desc})]}),/*#__PURE__*/_jsx(\"span\",{className:`pt-challenge ${act.challenge.toLowerCase()}`,children:act.challenge}),/*#__PURE__*/_jsxs(\"span\",{className:\"pt-minutes\",children:[act.minutes,\" min\"]})]},act._id))}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-card-footer\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-new\",onClick:()=>completeAll(inst._id),children:\"Marcar Todo Completado\"})})]},inst._id))]})});}","map":{"version":3,"names":["React","useState","useEffect","jwt_decode","fetchInstances","updateInstanceStatus","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","instances","setInstances","filtered","setFiltered","loading","setLoading","error","setError","search","setSearch","statusFilter","setStatusFilter","sortOrder","setSortOrder","expanded","setExpanded","token","localStorage","getItem","patientId","id","e","console","then","_ref","data","insts","map","inst","progress","completedActivities","length","template","activities","catch","err","message","finally","result","filter","i","name","toLowerCase","includes","done","total","sort","a","b","dateA","Date","assignedOn","dateB","toggleActivity","instanceId","activityId","find","_id","isDone","updatedList","prev","completeAll","allIds","className","children","type","placeholder","value","onChange","target","onClick","style","cursor","Math","round","description","toLocaleDateString","act","desc","challenge","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// PatientTemplatesPage.js: muestra plantillas asignadas al paciente\r\n// Usa fetchInstances y updateInstanceStatus de routineTemplateService citeturn2file2\r\n// Estilos desde patientTemplates.css citeturn2file4\r\nimport React, { useState, useEffect } from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { fetchInstances, updateInstanceStatus } from '../services/routineTemplateService';\r\nimport './styles/patientTemplates.css';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [search, setSearch] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  const [sortOrder, setSortOrder] = useState('desc');\r\n  const [expanded, setExpanded] = useState({});\r\n\r\n  const token = localStorage.getItem('token');\r\n  let patientId = null;\r\n  try { patientId = jwt_decode(token).id; } catch (e) { console.error('Token inválido', e); }\r\n\r\n  // Carga inicial de instancias\r\n  useEffect(() => {\r\n    if (!token || !patientId) return;\r\n    fetchInstances(patientId)\r\n      .then(({ data }) => {\r\n        const insts = data.map(inst => ({\r\n          ...inst,\r\n          progress: inst.completedActivities.length / inst.template.activities.length * 100\r\n        }));\r\n        setInstances(insts);\r\n      })\r\n      .catch(err => setError(err.message))\r\n      .finally(() => setLoading(false));\r\n  }, [patientId, token]);\r\n\r\n  // Filtrado, búsqueda y ordenación\r\n  useEffect(() => {\r\n    let result = [...instances];\r\n    if (search) {\r\n      result = result.filter(i =>\r\n        i.template.name.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    if (statusFilter !== 'all') {\r\n      result = result.filter(i => {\r\n        const done = i.completedActivities.length;\r\n        const total = i.template.activities.length;\r\n        if (statusFilter === 'pending') return done === 0;\r\n        if (statusFilter === 'in-progress') return done > 0 && done < total;\r\n        if (statusFilter === 'completed') return done === total;\r\n      });\r\n    }\r\n    result.sort((a, b) => {\r\n      const dateA = new Date(a.assignedOn);\r\n      const dateB = new Date(b.assignedOn);\r\n      return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;\r\n    });\r\n    setFiltered(result);\r\n  }, [instances, search, statusFilter, sortOrder]);\r\n\r\n  const toggleActivity = (instanceId, activityId) => {\r\n    const inst = instances.find(i => i._id === instanceId);\r\n    const isDone = inst.completedActivities.includes(activityId);\r\n    const updatedList = isDone\r\n      ? inst.completedActivities.filter(id => id !== activityId)\r\n      : [...inst.completedActivities, activityId];\r\n    // Actualización optimista\r\n    setInstances(prev =>\r\n      prev.map(i =>\r\n        i._id === instanceId\r\n          ? { ...i, completedActivities: updatedList, progress: updatedList.length / i.template.activities.length * 100 }\r\n          : i\r\n      )\r\n    );\r\n    updateInstanceStatus(instanceId, { completedActivities: updatedList })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const completeAll = instanceId => {\r\n    const inst = instances.find(i => i._id === instanceId);\r\n    const allIds = inst.template.activities.map(a => a._id);\r\n    setInstances(prev =>\r\n      prev.map(i =>\r\n        i._id === instanceId\r\n          ? { ...i, completedActivities: allIds, progress: 100 }\r\n          : i\r\n      )\r\n    );\r\n    updateInstanceStatus(instanceId, { completedActivities: allIds })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-templates-page\">\r\n      <div className=\"pt-templates-container\">\r\n        <div className=\"pt-header\">\r\n          <h2>Mis Plantillas Asignadas</h2>\r\n          <div className=\"pt-controls\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Buscar plantilla...\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n            />\r\n            <select value={statusFilter} onChange={e => setStatusFilter(e.target.value)}>\r\n              <option value=\"all\">Todas</option>\r\n              <option value=\"pending\">Pendientes</option>\r\n              <option value=\"in-progress\">En Progreso</option>\r\n              <option value=\"completed\">Completadas</option>\r\n            </select>\r\n            <button onClick={() => setSortOrder(prev => (prev === 'asc' ? 'desc' : 'asc'))}>\r\n              Fecha {sortOrder === 'asc' ? '↑' : '↓'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"pt-empty\">Cargando plantillas...</div>\r\n        ) : error ? (\r\n          <div className=\"pt-empty\">Error: {error}</div>\r\n        ) : filtered.length === 0 ? (\r\n          <div className=\"pt-empty\">No hay plantillas que coincidan</div>\r\n        ) : (\r\n          filtered.map(inst => (\r\n            <div className=\"pt-card\" key={inst._id}>\r\n              <div\r\n                className=\"pt-header\"\r\n                onClick={() => setExpanded(prev => ({ ...prev, [inst._id]: !prev[inst._id] }))}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <h3>{inst.template.name}</h3>\r\n                <span className=\"pt-progress\">{Math.round(inst.progress)}%</span>\r\n                <span>{expanded[inst._id] ? '▲' : '▼'}</span>\r\n              </div>\r\n              <p className=\"pt-desc\">{inst.template.description}</p>\r\n              <div className=\"pt-meta\">\r\n                Asignada: {new Date(inst.assignedOn).toLocaleDateString()}\r\n              </div>\r\n              {expanded[inst._id] && (\r\n                <ul className=\"pt-activities\">\r\n                  {inst.template.activities.map(act => (\r\n                    <li className=\"pt-activity\" key={act._id}>\r\n                      <button\r\n                        className=\"pt-toggle\"\r\n                        onClick={() => toggleActivity(inst._id, act._id)}\r\n                      >\r\n                        {inst.completedActivities.includes(act._id) ? '✅' : '⬜️'}\r\n                      </button>\r\n                      <div className=\"pt-activity-info\">\r\n                        <strong>{act.name}</strong>\r\n                        <p>{act.desc}</p>\r\n                      </div>\r\n                      <span className={`pt-challenge ${act.challenge.toLowerCase()}`}>{act.challenge}</span>\r\n                      <span className=\"pt-minutes\">{act.minutes} min</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n              <div className=\"pt-card-footer\">\r\n                <button className=\"btn-new\" onClick={() => completeAll(inst._id)}>\r\n                  Marcar Todo Completado\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}