{"ast":null,"code":"// src/pages/PatientTemplatesPage.jsx\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'../styles/routineTemplates.css';import{FaCheckCircle,FaRegCircle}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const navigate=useNavigate();const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Leer y decodificar el token para extraer el patientId\nconst token=localStorage.getItem('token');let patientId=null;try{const payload=JSON.parse(atob(token.split('.')[1]));patientId=payload.user.id;}catch(e){// token invÃ¡lido â†’ forzar login\nnavigate('/login');}useEffect(()=>{if(!token||!patientId){return navigate('/login');}const headers={'Content-Type':'application/json','x-auth-token':token};fetch(`/api/routines/instances/${patientId}`,{headers}).then(async res=>{if(res.status===401){alert('SesiÃ³n expirada');return navigate('/login');}if(!res.ok){const txt=await res.text();throw new Error(`Error ${res.status}: ${txt}`);}return res.json();}).then(data=>{// data = array de RoutineInstance con populate('template')\nsetInstances(data);}).catch(err=>{console.error(err);setError(err.message);}).finally(()=>setLoading(false));},[navigate,patientId,token]);const toggleDone=async(instId,activityIdx,done)=>{try{await fetch(`/api/routines/instances/${instId}/activities/${activityIdx}`,{method:'POST',headers:{'Content-Type':'application/json','x-auth-token':token},body:JSON.stringify({completed:done})});setInstances(ins=>ins.map(i=>i._id===instId?{...i,template:{...i.template,activities:i.template.activities.map((a,idx)=>idx===activityIdx?{...a,completed:done}:a)}}:i));}catch(err){console.error(err);alert('No se pudo actualizar el estado');}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tpl-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"})}),instances.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"\\uD83D\\uDCC2 No tienes plantillas asignadas.\"}):instances.map(inst=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:inst.template.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:inst.template.description}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:inst.template.activities.map((act,idx)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"activity-toggle\",onClick:()=>toggleDone(inst._id,idx,!act.completed),children:act.completed?/*#__PURE__*/_jsx(FaCheckCircle,{}):/*#__PURE__*/_jsx(FaRegCircle,{})}),/*#__PURE__*/_jsxs(\"span\",{className:act.completed?'done':'',children:[act.name,\" (\",act.minutes,\" min)\"]})]},idx))})]},inst._id))]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaCheckCircle","FaRegCircle","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","navigate","instances","setInstances","loading","setLoading","error","setError","token","localStorage","getItem","patientId","payload","JSON","parse","atob","split","user","id","e","headers","fetch","then","res","status","alert","ok","txt","text","Error","json","data","catch","err","console","message","finally","toggleDone","instId","activityIdx","done","method","body","stringify","completed","ins","map","i","_id","template","activities","a","idx","className","children","length","inst","name","description","act","onClick","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/pages/PatientTemplatesPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/routineTemplates.css';\r\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const navigate = useNavigate();\r\n  const [instances, setInstances] = useState([]);\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n\r\n  // Leer y decodificar el token para extraer el patientId\r\n  const token = localStorage.getItem('token');\r\n  let patientId = null;\r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    patientId = payload.user.id;\r\n  } catch (e) {\r\n    // token invÃ¡lido â†’ forzar login\r\n    navigate('/login');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token || !patientId) {\r\n      return navigate('/login');\r\n    }\r\n    const headers = {\r\n      'Content-Type':  'application/json',\r\n      'x-auth-token':  token\r\n    };\r\n    fetch(`/api/routines/instances/${patientId}`, { headers })\r\n      .then(async res => {\r\n        if (res.status === 401) {\r\n          alert('SesiÃ³n expirada');\r\n          return navigate('/login');\r\n        }\r\n        if (!res.ok) {\r\n          const txt = await res.text();\r\n          throw new Error(`Error ${res.status}: ${txt}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        // data = array de RoutineInstance con populate('template')\r\n        setInstances(data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        setError(err.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [navigate, patientId, token]);\r\n\r\n  const toggleDone = async (instId, activityIdx, done) => {\r\n    try {\r\n      await fetch(`/api/routines/instances/${instId}/activities/${activityIdx}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type':'application/json',\r\n          'x-auth-token': token\r\n        },\r\n        body: JSON.stringify({ completed: done })\r\n      });\r\n      setInstances(ins =>\r\n        ins.map(i =>\r\n          i._id === instId\r\n            ? {\r\n                ...i,\r\n                template: {\r\n                  ...i.template,\r\n                  activities: i.template.activities.map((a, idx) =>\r\n                    idx === activityIdx ? { ...a, completed: done } : a\r\n                  )\r\n                }\r\n              }\r\n            : i\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('No se pudo actualizar el estado');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargandoâ€¦</div>;\r\n  if (error)   return <div className=\"tpl-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"routine-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas Asignadas</h1>\r\n        </div>\r\n\r\n        {instances.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            ðŸ“‚ No tienes plantillas asignadas.\r\n          </div>\r\n        ) : (\r\n          instances.map(inst => (\r\n            <div key={inst._id} className=\"tpl-card\">\r\n              <h2>{inst.template.name}</h2>\r\n              <p className=\"tpl-desc\">{inst.template.description}</p>\r\n              <ul className=\"tpl-activities-list\">\r\n                {inst.template.activities.map((act, idx) => (\r\n                  <li key={idx}>\r\n                    <button\r\n                      className=\"activity-toggle\"\r\n                      onClick={() => toggleDone(inst._id, idx, !act.completed)}\r\n                    >\r\n                      {act.completed ? <FaCheckCircle/> : <FaRegCircle/>}\r\n                    </button>\r\n                    <span className={act.completed ? 'done' : ''}>\r\n                      {act.name} ({act.minutes} min)\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,gCAAgC,CACvC,OAASC,aAAa,CAAEC,WAAW,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5D,cAAe,SAAS,CAAAC,oBAAoBA,CAAA,CAAG,CAC7C,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAOd,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAWhB,QAAQ,CAAC,IAAI,CAAC,CAEhD;AACA,KAAM,CAAAiB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAAAC,SAAS,CAAG,IAAI,CACpB,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrDL,SAAS,CAAGC,OAAO,CAACK,IAAI,CAACC,EAAE,CAC7B,CAAE,MAAOC,CAAC,CAAE,CACV;AACAlB,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAEAT,SAAS,CAAC,IAAM,CACd,GAAI,CAACgB,KAAK,EAAI,CAACG,SAAS,CAAE,CACxB,MAAO,CAAAV,QAAQ,CAAC,QAAQ,CAAC,CAC3B,CACA,KAAM,CAAAmB,OAAO,CAAG,CACd,cAAc,CAAG,kBAAkB,CACnC,cAAc,CAAGZ,KACnB,CAAC,CACDa,KAAK,CAAC,2BAA2BV,SAAS,EAAE,CAAE,CAAES,OAAQ,CAAC,CAAC,CACvDE,IAAI,CAAC,KAAM,CAAAC,GAAG,EAAI,CACjB,GAAIA,GAAG,CAACC,MAAM,GAAK,GAAG,CAAE,CACtBC,KAAK,CAAC,iBAAiB,CAAC,CACxB,MAAO,CAAAxB,QAAQ,CAAC,QAAQ,CAAC,CAC3B,CACA,GAAI,CAACsB,GAAG,CAACG,EAAE,CAAE,CACX,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CAC5B,KAAM,IAAI,CAAAC,KAAK,CAAC,SAASN,GAAG,CAACC,MAAM,KAAKG,GAAG,EAAE,CAAC,CAChD,CACA,MAAO,CAAAJ,GAAG,CAACO,IAAI,CAAC,CAAC,CACnB,CAAC,CAAC,CACDR,IAAI,CAACS,IAAI,EAAI,CACZ;AACA5B,YAAY,CAAC4B,IAAI,CAAC,CACpB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,EAAI,CACZC,OAAO,CAAC5B,KAAK,CAAC2B,GAAG,CAAC,CAClB1B,QAAQ,CAAC0B,GAAG,CAACE,OAAO,CAAC,CACvB,CAAC,CAAC,CACDC,OAAO,CAAC,IAAM/B,UAAU,CAAC,KAAK,CAAC,CAAC,CACrC,CAAC,CAAE,CAACJ,QAAQ,CAAEU,SAAS,CAAEH,KAAK,CAAC,CAAC,CAEhC,KAAM,CAAA6B,UAAU,CAAG,KAAAA,CAAOC,MAAM,CAAEC,WAAW,CAAEC,IAAI,GAAK,CACtD,GAAI,CACF,KAAM,CAAAnB,KAAK,CAAC,2BAA2BiB,MAAM,eAAeC,WAAW,EAAE,CAAE,CACzEE,MAAM,CAAE,MAAM,CACdrB,OAAO,CAAE,CACP,cAAc,CAAC,kBAAkB,CACjC,cAAc,CAAEZ,KAClB,CAAC,CACDkC,IAAI,CAAE7B,IAAI,CAAC8B,SAAS,CAAC,CAAEC,SAAS,CAAEJ,IAAK,CAAC,CAC1C,CAAC,CAAC,CACFrC,YAAY,CAAC0C,GAAG,EACdA,GAAG,CAACC,GAAG,CAACC,CAAC,EACPA,CAAC,CAACC,GAAG,GAAKV,MAAM,CACZ,CACE,GAAGS,CAAC,CACJE,QAAQ,CAAE,CACR,GAAGF,CAAC,CAACE,QAAQ,CACbC,UAAU,CAAEH,CAAC,CAACE,QAAQ,CAACC,UAAU,CAACJ,GAAG,CAAC,CAACK,CAAC,CAAEC,GAAG,GAC3CA,GAAG,GAAKb,WAAW,CAAG,CAAE,GAAGY,CAAC,CAAEP,SAAS,CAAEJ,IAAK,CAAC,CAAGW,CACpD,CACF,CACF,CAAC,CACDJ,CACN,CACF,CAAC,CACH,CAAE,MAAOd,GAAG,CAAE,CACZC,OAAO,CAAC5B,KAAK,CAAC2B,GAAG,CAAC,CAClBR,KAAK,CAAC,iCAAiC,CAAC,CAC1C,CACF,CAAC,CAED,GAAIrB,OAAO,CAAE,mBAAOP,IAAA,QAAKwD,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,gBAAS,CAAK,CAAC,CAClE,GAAIhD,KAAK,CAAI,mBAAOP,KAAA,QAAKsD,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SAAO,CAAChD,KAAK,EAAM,CAAC,CAEvE,mBACET,IAAA,QAAKwD,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cACrCvD,KAAA,QAAKsD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BzD,IAAA,QAAKwD,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBzD,IAAA,OAAAyD,QAAA,CAAI,0BAAwB,CAAI,CAAC,CAC9B,CAAC,CAELpD,SAAS,CAACqD,MAAM,GAAK,CAAC,cACrB1D,IAAA,QAAKwD,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,8CAE7B,CAAK,CAAC,CAENpD,SAAS,CAAC4C,GAAG,CAACU,IAAI,eAChBzD,KAAA,QAAoBsD,SAAS,CAAC,UAAU,CAAAC,QAAA,eACtCzD,IAAA,OAAAyD,QAAA,CAAKE,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAAK,CAAC,cAC7B5D,IAAA,MAAGwD,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEE,IAAI,CAACP,QAAQ,CAACS,WAAW,CAAI,CAAC,cACvD7D,IAAA,OAAIwD,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAChCE,IAAI,CAACP,QAAQ,CAACC,UAAU,CAACJ,GAAG,CAAC,CAACa,GAAG,CAAEP,GAAG,gBACrCrD,KAAA,OAAAuD,QAAA,eACEzD,IAAA,WACEwD,SAAS,CAAC,iBAAiB,CAC3BO,OAAO,CAAEA,CAAA,GAAMvB,UAAU,CAACmB,IAAI,CAACR,GAAG,CAAEI,GAAG,CAAE,CAACO,GAAG,CAACf,SAAS,CAAE,CAAAU,QAAA,CAExDK,GAAG,CAACf,SAAS,cAAG/C,IAAA,CAACH,aAAa,GAAC,CAAC,cAAGG,IAAA,CAACF,WAAW,GAAC,CAAC,CAC5C,CAAC,cACTI,KAAA,SAAMsD,SAAS,CAAEM,GAAG,CAACf,SAAS,CAAG,MAAM,CAAG,EAAG,CAAAU,QAAA,EAC1CK,GAAG,CAACF,IAAI,CAAC,IAAE,CAACE,GAAG,CAACE,OAAO,CAAC,OAC3B,EAAM,CAAC,GATAT,GAUL,CACL,CAAC,CACA,CAAC,GAjBGI,IAAI,CAACR,GAkBV,CACN,CACF,EACE,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}