{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{PieChart,Pie,Cell,Tooltip as PieTooltip,Legend as PieLegend,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip as BarTooltip,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar,ResponsiveContainer}from'recharts';import'../styles/therapistRoutines.css';// Mapeo de actividad a categoría\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const categoryMap={futbol:'Ocio',dibujos:'Ocio',comics:'Ocio',tarea:'Obligaciones',videojuegos:'Ocio',helado:'Ocio',parque:'Ocio',banio:'Autocuidado',dormir:'Autocuidado',musica:'Ocio',bailar:'Ocio',amigos:'Ocio',bicicleta:'Ocio',dibujar:'Ocio',mascotas:'Ocio',experimentos:'Obligaciones',cantar:'Ocio',lego:'Ocio',nadar:'Autocuidado',computadora:'Ocio'};// Mapeo de categoría a grupo (3 grandes grupos)\nconst groupMap={Autocuidado:'Autocuidado',Obligaciones:'Obligaciones',Ocio:'Ocio'};// Colores para gráficos\nconst COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'];function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selectedTs,setSelectedTs]=useState(null);const[metrics,setMetrics]=useState(null);// 1) Cargar todos los resultados de la Máquina del Tiempo\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(resp=>{const data=resp.data;setResults(data);// filtro inicial: últimos 7 días\nconst now=new Date();const weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// 2) Aplicar filtro por fecha\nuseEffect(()=>{if(!from||!to)return;const fD=new Date(from),tD=new Date(to);tD.setHours(23,59,59,999);setFiltered(results.filter(r=>{const d=new Date(r.createdAt);return d>=fD&&d<=tD;}));},[results,from,to]);// 3) Seleccionar primer timestamp tras filtrar\nuseEffect(()=>{if(filtered.length){setSelectedTs(filtered[0].createdAt);}else{setSelectedTs(null);setMetrics(null);}},[filtered]);// 4) Cuando cambia el día seleccionado, recalcular métricas\nuseEffect(()=>{if(!selectedTs)return;const res=filtered.find(r=>r.createdAt===selectedTs);if(!res)return;setMetrics(computeMetrics(res));},[selectedTs,filtered]);// Función que computa todas las métricas de un solo resultado\nfunction computeMetrics(result){const slots=result.timeSlots||[];// aplanamos todas las actividades\nconst activities=slots.flatMap(slot=>(slot.activities||[]).map(a=>({...a,slot:slot.slot})));const totalMin=activities.reduce((sum,a)=>sum+a.duration,0)||1;// 1. Distribución % por categoría\nconst catSum={};activities.forEach(a=>{const cat=categoryMap[a.activityId]||'Otros';catSum[cat]=(catSum[cat]||0)+a.duration;});const distribution=Object.entries(catSum).map(_ref=>{let[name,val]=_ref;return{name,value:+(val/totalMin*100).toFixed(1)};});// 2. Horas absolutas por categoría\nconst hours=Object.entries(catSum).map(_ref2=>{let[name,val]=_ref2;return{name,hours:+(val/60).toFixed(2)};});// 3. Diversidad de actividades\nconst diversity=new Set(activities.map(a=>a.activityId)).size;// 4. Consistencia (slots cubiertos/24)\nconst usedSlots=slots.filter(s=>(s.activities||[]).length>0).length;const consistency=+(usedSlots/24*100).toFixed(1);// 5. Transiciones (cambios de actividad)\nconst transitions=Math.max(0,activities.length-1);// 6. Distribución por franja horaria\nconst periods={Mañana:[6,11],Tarde:[12,17],Noche:[18,23]};const pd={Mañana:0,Tarde:0,Noche:0};activities.forEach(a=>{const h=parseInt(a.slot.split(':')[0],10);for(let p in periods){const[lo,hi]=periods[p];if(h>=lo&&h<=hi)pd[p]+=a.duration;}});const timeOfDay=Object.entries(pd).map(_ref3=>{let[name,val]=_ref3;return{name,hours:+(val/60).toFixed(2)};});// 7. Balance por grupo\nconst grp={Autocuidado:0,Obligaciones:0,Ocio:0};activities.forEach(a=>{const cat=categoryMap[a.activityId]||'Ocio';const g=groupMap[cat]||'Ocio';grp[g]+=a.duration;});const groupBalance=Object.entries(grp).map(_ref4=>{let[subject,val]=_ref4;return{subject,value:+(val/totalMin*100).toFixed(1)};});// 8. Índice global de equilibrio (simetría de distribución)\nconst N=distribution.length;const uniform=100/N;const idx=1-distribution.reduce((acc,c)=>acc+Math.abs(c.value-uniform),0)/200;const balanceIndex=+idx.toFixed(2);return{distribution,hours,diversity,consistency,transitions,timeOfDay,groupBalance,balanceIndex};}return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Seleccionar d\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selectedTs||'',onChange:e=>setSelectedTs(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Transiciones: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.transitions})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"\\xCDndice Equilibrio: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.balanceIndex})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((entry,i)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[i%COLORS.length]},i))}),/*#__PURE__*/_jsx(PieTooltip,{}),/*#__PURE__*/_jsx(PieLegend,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.hours,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(BarTooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:COLORS[0]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Balance Autocuidado/Obligaciones/Ocio\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(RadarChart,{data:metrics.groupBalance,cx:\"50%\",cy:\"50%\",outerRadius:80,children:[/*#__PURE__*/_jsx(PolarGrid,{}),/*#__PURE__*/_jsx(PolarAngleAxis,{dataKey:\"subject\"}),/*#__PURE__*/_jsx(PolarRadiusAxis,{angle:30,domain:[0,100]}),/*#__PURE__*/_jsx(Radar,{dataKey:\"value\",stroke:COLORS[1],fill:COLORS[1],fillOpacity:0.6})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n Horaria (hh)\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.timeOfDay,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(BarTooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:COLORS[2]})]})})]})]})]})]});}export default PatientRoutines;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","PieChart","Pie","Cell","Tooltip","PieTooltip","Legend","PieLegend","BarChart","Bar","XAxis","YAxis","CartesianGrid","BarTooltip","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","groupMap","Autocuidado","Obligaciones","Ocio","COLORS","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selectedTs","setSelectedTs","metrics","setMetrics","token","localStorage","getItem","get","headers","then","resp","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","fD","tD","setHours","filter","r","d","createdAt","length","res","find","computeMetrics","result","slots","timeSlots","activities","flatMap","slot","map","a","totalMin","reduce","sum","duration","catSum","forEach","cat","activityId","distribution","Object","entries","_ref","name","val","value","toFixed","hours","_ref2","diversity","Set","size","usedSlots","s","consistency","transitions","Math","max","periods","Mañana","Tarde","Noche","pd","h","parseInt","split","p","lo","hi","timeOfDay","_ref3","grp","g","groupBalance","_ref4","subject","N","uniform","idx","acc","c","abs","balanceIndex","className","children","type","onChange","e","target","toLocaleDateString","width","height","dataKey","nameKey","cx","cy","outerRadius","label","entry","i","fill","margin","top","right","left","bottom","strokeDasharray","angle","domain","stroke","fillOpacity"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip as PieTooltip, Legend as PieLegend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as BarTooltip,\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Mapeo de actividad a categoría\r\nconst categoryMap = {\r\n  futbol: 'Ocio', dibujos: 'Ocio', comics: 'Ocio',\r\n  tarea: 'Obligaciones', videojuegos: 'Ocio', helado: 'Ocio',\r\n  parque: 'Ocio', banio: 'Autocuidado', dormir: 'Autocuidado',\r\n  musica: 'Ocio', bailar: 'Ocio', amigos: 'Ocio',\r\n  bicicleta: 'Ocio', dibujar: 'Ocio', mascotas: 'Ocio',\r\n  experimentos: 'Obligaciones', cantar: 'Ocio', lego: 'Ocio',\r\n  nadar: 'Autocuidado', computadora: 'Ocio'\r\n};\r\n// Mapeo de categoría a grupo (3 grandes grupos)\r\nconst groupMap = {\r\n  Autocuidado: 'Autocuidado',\r\n  Obligaciones: 'Obligaciones',\r\n  Ocio: 'Ocio'\r\n};\r\n// Colores para gráficos\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#0088FE'];\r\n\r\nfunction PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selectedTs, setSelectedTs] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n\r\n  // 1) Cargar todos los resultados de la Máquina del Tiempo\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    }).then(resp => {\r\n      const data = resp.data;\r\n      setResults(data);\r\n      // filtro inicial: últimos 7 días\r\n      const now = new Date();\r\n      const weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    }).catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // 2) Aplicar filtro por fecha\r\n  useEffect(() => {\r\n    if (!from || !to) return;\r\n    const fD = new Date(from), tD = new Date(to);\r\n    tD.setHours(23,59,59,999);\r\n    setFiltered(results.filter(r => {\r\n      const d = new Date(r.createdAt);\r\n      return d >= fD && d <= tD;\r\n    }));\r\n  }, [results, from, to]);\r\n\r\n  // 3) Seleccionar primer timestamp tras filtrar\r\n  useEffect(() => {\r\n    if (filtered.length) {\r\n      setSelectedTs(filtered[0].createdAt);\r\n    } else {\r\n      setSelectedTs(null);\r\n      setMetrics(null);\r\n    }\r\n  }, [filtered]);\r\n\r\n  // 4) Cuando cambia el día seleccionado, recalcular métricas\r\n  useEffect(() => {\r\n    if (!selectedTs) return;\r\n    const res = filtered.find(r => r.createdAt === selectedTs);\r\n    if (!res) return;\r\n    setMetrics(computeMetrics(res));\r\n  }, [selectedTs, filtered]);\r\n\r\n  // Función que computa todas las métricas de un solo resultado\r\n  function computeMetrics(result) {\r\n    const slots = result.timeSlots || [];\r\n    // aplanamos todas las actividades\r\n    const activities = slots.flatMap(slot =>\r\n      (slot.activities || []).map(a => ({ ...a, slot: slot.slot }))\r\n    );\r\n    const totalMin = activities.reduce((sum, a) => sum + a.duration, 0) || 1;\r\n\r\n    // 1. Distribución % por categoría\r\n    const catSum = {};\r\n    activities.forEach(a => {\r\n      const cat = categoryMap[a.activityId] || 'Otros';\r\n      catSum[cat] = (catSum[cat] || 0) + a.duration;\r\n    });\r\n    const distribution = Object.entries(catSum).map(([name, val]) => ({\r\n      name,\r\n      value: +((val / totalMin) * 100).toFixed(1)\r\n    }));\r\n\r\n    // 2. Horas absolutas por categoría\r\n    const hours = Object.entries(catSum).map(([name,val])=>({\r\n      name, hours: +(val/60).toFixed(2)\r\n    }));\r\n\r\n    // 3. Diversidad de actividades\r\n    const diversity = new Set(activities.map(a=>a.activityId)).size;\r\n\r\n    // 4. Consistencia (slots cubiertos/24)\r\n    const usedSlots = slots.filter(s => (s.activities || []).length > 0).length;\r\n    const consistency = +((usedSlots / 24) * 100).toFixed(1);\r\n\r\n    // 5. Transiciones (cambios de actividad)\r\n    const transitions = Math.max(0, activities.length - 1);\r\n\r\n    // 6. Distribución por franja horaria\r\n    const periods = { Mañana:[6,11], Tarde:[12,17], Noche:[18,23] };\r\n    const pd = { Mañana:0, Tarde:0, Noche:0 };\r\n    activities.forEach(a => {\r\n      const h = parseInt(a.slot.split(':')[0], 10);\r\n      for (let p in periods) {\r\n        const [lo, hi] = periods[p];\r\n        if (h >= lo && h <= hi) pd[p] += a.duration;\r\n      }\r\n    });\r\n    const timeOfDay = Object.entries(pd).map(([name,val])=>({\r\n      name, hours: +(val/60).toFixed(2)\r\n    }));\r\n\r\n    // 7. Balance por grupo\r\n    const grp = { Autocuidado:0, Obligaciones:0, Ocio:0 };\r\n    activities.forEach(a=>{\r\n      const cat = categoryMap[a.activityId] || 'Ocio';\r\n      const g = groupMap[cat] || 'Ocio';\r\n      grp[g] += a.duration;\r\n    });\r\n    const groupBalance = Object.entries(grp).map(([subject,val])=>({\r\n      subject, value: +((val/totalMin)*100).toFixed(1)\r\n    }));\r\n\r\n    // 8. Índice global de equilibrio (simetría de distribución)\r\n    const N = distribution.length;\r\n    const uniform = 100 / N;\r\n    const idx = 1 - (distribution.reduce((acc,c)=>acc + Math.abs(c.value - uniform),0) / 200);\r\n    const balanceIndex = +idx.toFixed(2);\r\n\r\n    return {\r\n      distribution,\r\n      hours,\r\n      diversity,\r\n      consistency,\r\n      transitions,\r\n      timeOfDay,\r\n      groupBalance,\r\n      balanceIndex\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <label>Desde:\r\n          <input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} />\r\n        </label>\r\n        <label>Hasta:\r\n          <input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} />\r\n        </label>\r\n        <label>Seleccionar día:\r\n          <select\r\n            value={selectedTs||''}\r\n            onChange={e=>setSelectedTs(e.target.value)}\r\n          >\r\n            {filtered.map(r => {\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {metrics && (\r\n        <>\r\n          <div className=\"metrics-grid\">\r\n            <div className=\"metric-card\">Diversidad: <strong>{metrics.diversity}</strong></div>\r\n            <div className=\"metric-card\">Consistencia: <strong>{metrics.consistency}%</strong></div>\r\n            <div className=\"metric-card\">Transiciones: <strong>{metrics.transitions}</strong></div>\r\n            <div className=\"metric-card\">Índice Equilibrio: <strong>{metrics.balanceIndex}</strong></div>\r\n          </div>\r\n\r\n          <div className=\"charts-grid\">\r\n            <div className=\"chart-block\">\r\n              <h3>Distribución % por Categoría</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={metrics.distribution}\r\n                    dataKey=\"value\"\r\n                    nameKey=\"name\"\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={80}\r\n                    label\r\n                  >\r\n                    {metrics.distribution.map((entry,i)=>\r\n                      <Cell key={i} fill={COLORS[i%COLORS.length]}/>\r\n                    )}\r\n                  </Pie>\r\n                  <PieTooltip />\r\n                  <PieLegend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block\">\r\n              <h3>Horas por Categoría</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart data={metrics.hours} margin={{ top:20, right:30, left:0, bottom:0 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                  <XAxis dataKey=\"name\"/>\r\n                  <YAxis/>\r\n                  <BarTooltip/>\r\n                  <Bar dataKey=\"hours\" fill={COLORS[0]}/>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block\">\r\n              <h3>Balance Autocuidado/Obligaciones/Ocio</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <RadarChart data={metrics.groupBalance} cx=\"50%\" cy=\"50%\" outerRadius={80}>\r\n                  <PolarGrid/>\r\n                  <PolarAngleAxis dataKey=\"subject\"/>\r\n                  <PolarRadiusAxis angle={30} domain={[0,100]}/>\r\n                  <Radar\r\n                    dataKey=\"value\"\r\n                    stroke={COLORS[1]}\r\n                    fill={COLORS[1]}\r\n                    fillOpacity={0.6}\r\n                  />\r\n                </RadarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block full-width\">\r\n              <h3>Distribución Horaria (hh)</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart data={metrics.timeOfDay} margin={{ top:20, right:30, left:0, bottom:0 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                  <XAxis dataKey=\"name\"/>\r\n                  <YAxis/>\r\n                  <BarTooltip/>\r\n                  <Bar dataKey=\"hours\" fill={COLORS[2]}/>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRoutines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}