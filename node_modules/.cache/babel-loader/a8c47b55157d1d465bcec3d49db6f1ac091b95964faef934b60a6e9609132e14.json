{"ast":null,"code":"// src/components/PatientTemplates.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import authService from'../services/authService';import'../styles/routineTemplates.css';import'./patientTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplates(){const[instances,setInstances]=useState([]);const[filterTag,setFilterTag]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchInstances=async()=>{const token=localStorage.getItem('token');const user=authService.getCurrentUser();if(!token||!user){setError('No estás autenticado. Por favor, inicia sesión.');setLoading(false);return;}try{// 1) traemos solo las instancias de este paciente\nconst res=await axios.get(`/api/routines/instances/${user.id}`,{headers:{'x-auth-token':token}});// 2) aseguramos que siempre sea un array\nconst data=Array.isArray(res.data)?res.data:[];setInstances(data);}catch(err){var _err$response,_err$response$data;console.error('Error al cargar instancias:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||'Error al cargar plantillas');}finally{setLoading(false);}};fetchInstances();},[]);const toggleActivity=async(instanceId,activityIdx)=>{const token=localStorage.getItem('token');// 1) determinamos si ya está completada\nconst inst=instances.find(i=>i._id===instanceId);if(!inst)return;const wasCompleted=inst.completedActivities.includes(activityIdx);try{// 2) llamamos al POST /:instanceId/activities/:activityIdx\nawait axios.post(`/api/routines/instances/${instanceId}/activities/${activityIdx}`,{completed:!wasCompleted},{headers:{'x-auth-token':token}});// 3) actualizamos el estado local\nsetInstances(prev=>prev.map(i=>i._id!==instanceId?i:{...i,completedActivities:wasCompleted?i.completedActivities.filter(idx=>idx!==activityIdx):[...i.completedActivities,activityIdx]}));}catch(err){console.error('Error cambiando estado de actividad:',err);setError('No se pudo actualizar la actividad');}};if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando tus plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:error});// 4) filtrado por etiqueta sobre inst.template.tags\nconst filtered=instances.filter(inst=>{var _inst$template$tags;return filterTag?(_inst$template$tags=inst.template.tags)===null||_inst$template$tags===void 0?void 0:_inst$template$tags.includes(filterTag):true;});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filtrar por etiqueta\",value:filterTag,onChange:e=>setFilterTag(e.target.value),className:\"small-input tag-filter\"})]}),filtered.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No se encontraron plantillas con esa etiqueta.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:filtered.map(inst=>{var _inst$template$tags2;return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"tpl-title\",children:inst.template.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:inst.template.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[\"Asignado el: \",new Date(inst.createdAt).toLocaleDateString(),/*#__PURE__*/_jsx(\"br\",{}),\"Duraci\\xF3n: \",inst.template.duration,\" min | Tags:\",' ',(_inst$template$tags2=inst.template.tags)===null||_inst$template$tags2===void 0?void 0:_inst$template$tags2.join(', ')]}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:inst.template.activities.map((act,idx)=>{const completed=inst.completedActivities.includes(idx);return/*#__PURE__*/_jsxs(\"li\",{className:\"activity-item\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:completed,onChange:()=>toggleActivity(inst._id,idx)}),/*#__PURE__*/_jsxs(\"span\",{className:completed?'completed':'',children:[act.name,\" \\u2013 Nivel \",act.challenge,\" \\u2013 \",act.minutes,\" min\"]})]}),act.desc&&/*#__PURE__*/_jsx(\"p\",{className:\"activity-desc\",children:act.desc})]},idx);})})]},inst._id);})})]})});}","map":{"version":3,"names":["React","useState","useEffect","axios","authService","jsx","_jsx","jsxs","_jsxs","PatientTemplates","instances","setInstances","filterTag","setFilterTag","loading","setLoading","error","setError","fetchInstances","token","localStorage","getItem","user","getCurrentUser","res","get","id","headers","data","Array","isArray","err","_err$response","_err$response$data","console","response","msg","toggleActivity","instanceId","activityIdx","inst","find","i","_id","wasCompleted","completedActivities","includes","post","completed","prev","map","filter","idx","children","className","filtered","_inst$template$tags","template","tags","type","placeholder","value","onChange","e","target","length","_inst$template$tags2","name","description","Date","createdAt","toLocaleDateString","duration","join","activities","act","checked","challenge","minutes","desc"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/components/PatientTemplates.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport authService from '../services/authService'; \r\nimport '../styles/routineTemplates.css';\r\nimport './patientTemplates.css';\r\n\r\nexport default function PatientTemplates() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [filterTag, setFilterTag] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInstances = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const user  = authService.getCurrentUser();\r\n      if (!token || !user) {\r\n        setError('No estás autenticado. Por favor, inicia sesión.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // 1) traemos solo las instancias de este paciente\r\n        const res = await axios.get(\r\n          `/api/routines/instances/${user.id}`,\r\n          { headers: { 'x-auth-token': token } }\r\n        );\r\n        // 2) aseguramos que siempre sea un array\r\n        const data = Array.isArray(res.data) ? res.data : [];\r\n        setInstances(data);\r\n      } catch (err) {\r\n        console.error('Error al cargar instancias:', err);\r\n        setError(err.response?.data?.msg || 'Error al cargar plantillas');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInstances();\r\n  }, []);\r\n\r\n  const toggleActivity = async (instanceId, activityIdx) => {\r\n    const token = localStorage.getItem('token');\r\n    // 1) determinamos si ya está completada\r\n    const inst = instances.find(i => i._id === instanceId);\r\n    if (!inst) return;\r\n    const wasCompleted = inst.completedActivities.includes(activityIdx);\r\n\r\n    try {\r\n      // 2) llamamos al POST /:instanceId/activities/:activityIdx\r\n      await axios.post(\r\n        `/api/routines/instances/${instanceId}/activities/${activityIdx}`,\r\n        { completed: !wasCompleted },\r\n        { headers: { 'x-auth-token': token } }\r\n      );\r\n\r\n      // 3) actualizamos el estado local\r\n      setInstances(prev =>\r\n        prev.map(i =>\r\n          i._id !== instanceId\r\n            ? i\r\n            : {\r\n                ...i,\r\n                completedActivities: wasCompleted\r\n                  ? i.completedActivities.filter(idx => idx !== activityIdx)\r\n                  : [...i.completedActivities, activityIdx]\r\n              }\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Error cambiando estado de actividad:', err);\r\n      setError('No se pudo actualizar la actividad');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Cargando tus plantillas…</p>;\r\n  if (error)   return <p className=\"error-msg\">{error}</p>;\r\n\r\n  // 4) filtrado por etiqueta sobre inst.template.tags\r\n  const filtered = instances.filter(inst =>\r\n    filterTag\r\n      ? inst.template.tags?.includes(filterTag)\r\n      : true\r\n  );\r\n\r\n  return (\r\n    <div className=\"routine-templates-page patient-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas Asignadas</h1>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Filtrar por etiqueta\"\r\n            value={filterTag}\r\n            onChange={e => setFilterTag(e.target.value)}\r\n            className=\"small-input tag-filter\"\r\n          />\r\n        </div>\r\n\r\n        {filtered.length === 0 ? (\r\n          <p>No se encontraron plantillas con esa etiqueta.</p>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {filtered.map(inst => (\r\n              <div key={inst._id} className=\"tpl-card\">\r\n                <h2 className=\"tpl-title\">{inst.template.name}</h2>\r\n                <p className=\"tpl-desc\">{inst.template.description}</p>\r\n                <div className=\"tpl-meta\">\r\n                  Asignado el: {new Date(inst.createdAt).toLocaleDateString()}<br/>\r\n                  Duración: {inst.template.duration} min | Tags:{' '}\r\n                  {inst.template.tags?.join(', ')}\r\n                </div>\r\n\r\n                <ul className=\"tpl-activities-list\">\r\n                  {inst.template.activities.map((act, idx) => {\r\n                    const completed = inst.completedActivities.includes(idx);\r\n                    return (\r\n                      <li key={idx} className=\"activity-item\">\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={completed}\r\n                            onChange={() => toggleActivity(inst._id, idx)}\r\n                          />\r\n                          <span className={completed ? 'completed' : ''}>\r\n                            {act.name} – Nivel {act.challenge} – {act.minutes} min\r\n                          </span>\r\n                        </label>\r\n                        {act.desc && (\r\n                          <p className=\"activity-desc\">{act.desc}</p>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}