{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\MiPlaneta.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/miPlaneta.css';\n\n// Elementos disponibles (se pueden usar URLs externas para imágenes)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableElements = [{\n  id: 'estadio',\n  title: 'Estadio',\n  image: 'https://via.placeholder.com/80?text=Estadio',\n  defaultSize: 2\n}, {\n  id: 'parque',\n  title: 'Parque',\n  image: 'https://via.placeholder.com/80?text=Parque',\n  defaultSize: 2\n}, {\n  id: 'colegio',\n  title: 'Colegio',\n  image: 'https://via.placeholder.com/80?text=Colegio',\n  defaultSize: 2\n}, {\n  id: 'biblioteca',\n  title: 'Biblioteca',\n  image: 'https://via.placeholder.com/80?text=Biblioteca',\n  defaultSize: 2\n}, {\n  id: 'hospital',\n  title: 'Hospital',\n  image: 'https://via.placeholder.com/80?text=Hospital',\n  defaultSize: 2\n}, {\n  id: 'cine',\n  title: 'Cine',\n  image: 'https://via.placeholder.com/80?text=Cine',\n  defaultSize: 2\n}, {\n  id: 'parqueInfantil',\n  title: 'Parque Infantil',\n  image: 'https://via.placeholder.com/80?text=Parque+Infantil',\n  defaultSize: 2\n}];\nconst generatePlanetCells = () => {\n  // Para simplificar, generamos 20 celdas para colocar elementos\n  const cells = [];\n  for (let i = 0; i < 20; i++) {\n    cells.push({\n      id: `cell-${i}`,\n      elements: []\n    });\n  }\n  return cells;\n};\nfunction MiPlaneta() {\n  _s();\n  const navigate = useNavigate();\n  const [zoom, setZoom] = useState(1);\n  const [planetCells, setPlanetCells] = useState(generatePlanetCells());\n  const [panelElements] = useState(availableElements);\n  const [selectedSize, setSelectedSize] = useState({}); // { instanceId: sizeLevel }\n\n  // Verifica que exista token; si no, redirige al login\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) navigate('/');\n  }, [navigate]);\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 0.2, 2));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 0.2, 0.5));\n\n  // onDragEnd: los elementos se arrastran desde el panel a una celda del planeta,\n  // o se mueven entre celdas.\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n\n    // Si se mueve desde el panel (droppableId \"panel\"), se crea una nueva instancia.\n    if (source.droppableId === 'panel' && destination.droppableId.startsWith('cell-')) {\n      const originalId = draggableId.replace('panel-', '');\n      const element = panelElements.find(el => el.id === originalId);\n      if (!element) return;\n      const newInstance = {\n        ...element,\n        instanceId: `${element.id}-${Date.now()}`,\n        // ID único\n        size: element.defaultSize // 1: pequeño, 2: mediano, 3: grande\n      };\n      const newCells = [...planetCells];\n      const cellIndex = newCells.findIndex(cell => cell.id === destination.droppableId);\n      if (cellIndex === -1) return;\n      newCells[cellIndex].elements.splice(destination.index, 0, newInstance);\n      setPlanetCells(newCells);\n      return;\n    }\n\n    // Movimiento entre celdas\n    if (source.droppableId.startsWith('cell-') && destination.droppableId.startsWith('cell-')) {\n      const newCells = [...planetCells];\n      const sourceIndex = newCells.findIndex(cell => cell.id === source.droppableId);\n      const destIndex = newCells.findIndex(cell => cell.id === destination.droppableId);\n      if (sourceIndex === -1 || destIndex === -1) return;\n      const [moved] = newCells[sourceIndex].elements.splice(source.index, 1);\n      newCells[destIndex].elements.splice(destination.index, 0, moved);\n      setPlanetCells(newCells);\n      return;\n    }\n  };\n\n  // Cambiar tamaño para una instancia: 1 (pequeño), 2 (mediano), 3 (grande)\n  const handleSizeChange = (instanceId, newSize) => {\n    const newCells = planetCells.map(cell => ({\n      ...cell,\n      elements: cell.elements.map(el => el.instanceId === instanceId ? {\n        ...el,\n        size: newSize\n      } : el)\n    }));\n    setPlanetCells(newCells);\n  };\n  const handleSavePlanet = async () => {\n    const token = localStorage.getItem('token');\n    // Preparamos un payload con la distribución del planeta.\n    const payload = {\n      cells: planetCells.filter(cell => cell.elements.length > 0).map(cell => ({\n        cellId: cell.id,\n        elements: cell.elements.map(el => ({\n          elementId: el.id,\n          title: el.title,\n          image: el.image,\n          size: el.size\n        }))\n      }))\n    };\n    try {\n      await axios.post('http://localhost:5000/api/planet', payload, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      alert('¡Tu planeta ha sido guardado!');\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(err);\n      alert('Error al guardar tu planeta.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mi-planeta-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mp-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mp-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => navigate('/dashboard'),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mi Planeta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Este es TU PLANETA, ll\\xE9nalo con las cosas que m\\xE1s te gustan hacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cada opci\\xF3n tiene tres tama\\xF1os diferentes. Elige el tama\\xF1o que mejor represente cu\\xE1nto te gusta:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" m\\xE1s grande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \" si te encanta,\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" mediano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), \" si te gusta, y\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" peque\\xF1o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \" si te gusta menos.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomOut,\n        children: \"\\u2212 Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleZoomIn,\n        children: \"+ Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"mp-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Elementos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"panel\",\n          isDropDisabled: true,\n          renderClone: (provided, snapshot, rubric) => {\n            const el = panelElements[rubric.source.index];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mp-panel-item\",\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: el.image,\n                alt: el.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: el.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this);\n          },\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"mp-panel-list\",\n            children: [panelElements.map((el, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `panel-${el.id}`,\n              index: index,\n              children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mp-panel-item\",\n                ref: providedDraggable.innerRef,\n                ...providedDraggable.draggableProps,\n                ...providedDraggable.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: el.image,\n                  alt: el.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: el.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 23\n              }, this)\n            }, `panel-${el.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mp-planet\",\n        style: {\n          transform: `scale(${zoom})`\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"planet\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mp-planet-inner\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: planetCells.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: cell.id,\n              children: prov => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mp-cell\",\n                ref: prov.innerRef,\n                ...prov.droppableProps,\n                children: [cell.elements.map((el, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: el.instanceId,\n                  index: index,\n                  children: provDrag => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mp-element\",\n                    ref: provDrag.innerRef,\n                    ...provDrag.draggableProps,\n                    ...provDrag.dragHandleProps,\n                    style: {\n                      ...provDrag.draggableProps.style,\n                      width: el.size === 3 ? '100px' : el.size === 2 ? '70px' : '40px',\n                      height: el.size === 3 ? '100px' : el.size === 2 ? '70px' : '40px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: el.image,\n                      alt: el.title,\n                      style: {\n                        width: '100%',\n                        height: '100%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mp-element-controls\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleSizeChange(el.instanceId, 3),\n                        children: \"G\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleSizeChange(el.instanceId, 2),\n                        children: \"M\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleSizeChange(el.instanceId, 1),\n                        children: \"P\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 31\n                  }, this)\n                }, el.instanceId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 27\n                }, this)), prov.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: handleSavePlanet,\n        children: \"Guardar mi planeta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mp-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2025 \\xA9 Iv\\xE1n Vela Campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(MiPlaneta, \"7Qgtkgs6SySTCamr0APgukdzsno=\", false, function () {\n  return [useNavigate];\n});\n_c = MiPlaneta;\nexport default MiPlaneta;\nvar _c;\n$RefreshReg$(_c, \"MiPlaneta\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","axios","useNavigate","jsxDEV","_jsxDEV","availableElements","id","title","image","defaultSize","generatePlanetCells","cells","i","push","elements","MiPlaneta","_s","navigate","zoom","setZoom","planetCells","setPlanetCells","panelElements","selectedSize","setSelectedSize","token","localStorage","getItem","handleZoomIn","prev","Math","min","handleZoomOut","max","onDragEnd","result","source","destination","draggableId","droppableId","startsWith","originalId","replace","element","find","el","newInstance","instanceId","Date","now","size","newCells","cellIndex","findIndex","cell","splice","index","sourceIndex","destIndex","moved","handleSizeChange","newSize","map","handleSavePlanet","payload","filter","length","cellId","elementId","post","headers","alert","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isDropDisabled","renderClone","provided","snapshot","rubric","ref","innerRef","draggableProps","dragHandleProps","src","alt","droppableProps","providedDraggable","placeholder","style","transform","prov","provDrag","width","height","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/MiPlaneta.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/miPlaneta.css';\r\n\r\n// Elementos disponibles (se pueden usar URLs externas para imágenes)\r\nconst availableElements = [\r\n  { id: 'estadio', title: 'Estadio', image: 'https://via.placeholder.com/80?text=Estadio', defaultSize: 2 },\r\n  { id: 'parque', title: 'Parque', image: 'https://via.placeholder.com/80?text=Parque', defaultSize: 2 },\r\n  { id: 'colegio', title: 'Colegio', image: 'https://via.placeholder.com/80?text=Colegio', defaultSize: 2 },\r\n  { id: 'biblioteca', title: 'Biblioteca', image: 'https://via.placeholder.com/80?text=Biblioteca', defaultSize: 2 },\r\n  { id: 'hospital', title: 'Hospital', image: 'https://via.placeholder.com/80?text=Hospital', defaultSize: 2 },\r\n  { id: 'cine', title: 'Cine', image: 'https://via.placeholder.com/80?text=Cine', defaultSize: 2 },\r\n  { id: 'parqueInfantil', title: 'Parque Infantil', image: 'https://via.placeholder.com/80?text=Parque+Infantil', defaultSize: 2 }\r\n];\r\n\r\nconst generatePlanetCells = () => {\r\n  // Para simplificar, generamos 20 celdas para colocar elementos\r\n  const cells = [];\r\n  for (let i = 0; i < 20; i++) {\r\n    cells.push({ id: `cell-${i}`, elements: [] });\r\n  }\r\n  return cells;\r\n};\r\n\r\nfunction MiPlaneta() {\r\n  const navigate = useNavigate();\r\n  const [zoom, setZoom] = useState(1);\r\n  const [planetCells, setPlanetCells] = useState(generatePlanetCells());\r\n  const [panelElements] = useState(availableElements);\r\n  const [selectedSize, setSelectedSize] = useState({}); // { instanceId: sizeLevel }\r\n  \r\n  // Verifica que exista token; si no, redirige al login\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) navigate('/');\r\n  }, [navigate]);\r\n\r\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 0.2, 2));\r\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 0.2, 0.5));\r\n\r\n  // onDragEnd: los elementos se arrastran desde el panel a una celda del planeta,\r\n  // o se mueven entre celdas.\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination) return;\r\n    \r\n    // Si se mueve desde el panel (droppableId \"panel\"), se crea una nueva instancia.\r\n    if (source.droppableId === 'panel' && destination.droppableId.startsWith('cell-')) {\r\n      const originalId = draggableId.replace('panel-', '');\r\n      const element = panelElements.find(el => el.id === originalId);\r\n      if (!element) return;\r\n      const newInstance = {\r\n        ...element,\r\n        instanceId: `${element.id}-${Date.now()}`, // ID único\r\n        size: element.defaultSize // 1: pequeño, 2: mediano, 3: grande\r\n      };\r\n      const newCells = [...planetCells];\r\n      const cellIndex = newCells.findIndex(cell => cell.id === destination.droppableId);\r\n      if (cellIndex === -1) return;\r\n      newCells[cellIndex].elements.splice(destination.index, 0, newInstance);\r\n      setPlanetCells(newCells);\r\n      return;\r\n    }\r\n    \r\n    // Movimiento entre celdas\r\n    if (source.droppableId.startsWith('cell-') && destination.droppableId.startsWith('cell-')) {\r\n      const newCells = [...planetCells];\r\n      const sourceIndex = newCells.findIndex(cell => cell.id === source.droppableId);\r\n      const destIndex = newCells.findIndex(cell => cell.id === destination.droppableId);\r\n      if (sourceIndex === -1 || destIndex === -1) return;\r\n      const [moved] = newCells[sourceIndex].elements.splice(source.index, 1);\r\n      newCells[destIndex].elements.splice(destination.index, 0, moved);\r\n      setPlanetCells(newCells);\r\n      return;\r\n    }\r\n  };\r\n\r\n  // Cambiar tamaño para una instancia: 1 (pequeño), 2 (mediano), 3 (grande)\r\n  const handleSizeChange = (instanceId, newSize) => {\r\n    const newCells = planetCells.map(cell => ({\r\n      ...cell,\r\n      elements: cell.elements.map(el => el.instanceId === instanceId ? { ...el, size: newSize } : el)\r\n    }));\r\n    setPlanetCells(newCells);\r\n  };\r\n\r\n  const handleSavePlanet = async () => {\r\n    const token = localStorage.getItem('token');\r\n    // Preparamos un payload con la distribución del planeta.\r\n    const payload = {\r\n      cells: planetCells\r\n        .filter(cell => cell.elements.length > 0)\r\n        .map(cell => ({\r\n          cellId: cell.id,\r\n          elements: cell.elements.map(el => ({\r\n            elementId: el.id,\r\n            title: el.title,\r\n            image: el.image,\r\n            size: el.size\r\n          }))\r\n        }))\r\n    };\r\n    try {\r\n      await axios.post('http://localhost:5000/api/planet', payload, {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      alert('¡Tu planeta ha sido guardado!');\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error al guardar tu planeta.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mi-planeta-container\">\r\n      <header className=\"mp-header\">\r\n        <div className=\"mp-header-left\">\r\n          <button className=\"back-btn\" onClick={() => navigate('/dashboard')}>←</button>\r\n          <h1>Mi Planeta</h1>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"mp-instructions\">\r\n        <p>Este es TU PLANETA, llénalo con las cosas que más te gustan hacer</p>\r\n        <p>\r\n          Cada opción tiene tres tamaños diferentes. Elige el tamaño que mejor represente cuánto te gusta: \r\n          <strong> más grande</strong> si te encanta, \r\n          <strong> mediano</strong> si te gusta, y \r\n          <strong> pequeño</strong> si te gusta menos.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mp-controls\">\r\n        <button onClick={handleZoomOut}>− Zoom</button>\r\n        <button onClick={handleZoomIn}>+ Zoom</button>\r\n      </div>\r\n\r\n      <div className=\"mp-content\">\r\n        {/* Panel de elementos disponibles */}\r\n        <aside className=\"mp-panel\">\r\n          <h2>Elementos</h2>\r\n          <Droppable droppableId=\"panel\" isDropDisabled={true} renderClone={(provided, snapshot, rubric) => {\r\n            const el = panelElements[rubric.source.index];\r\n            return (\r\n              <div className=\"mp-panel-item\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                <img src={el.image} alt={el.title} />\r\n                <span>{el.title}</span>\r\n              </div>\r\n            );\r\n          }}>\r\n            {(provided) => (\r\n              <div ref={provided.innerRef} {...provided.droppableProps} className=\"mp-panel-list\">\r\n                {panelElements.map((el, index) => (\r\n                  <Draggable key={`panel-${el.id}`} draggableId={`panel-${el.id}`} index={index}>\r\n                    {(providedDraggable) => (\r\n                      <div className=\"mp-panel-item\"\r\n                        ref={providedDraggable.innerRef}\r\n                        {...providedDraggable.draggableProps}\r\n                        {...providedDraggable.dragHandleProps}\r\n                      >\r\n                        <img src={el.image} alt={el.title} />\r\n                        <span>{el.title}</span>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </aside>\r\n\r\n        {/* Área del planeta */}\r\n        <section className=\"mp-planet\" style={{ transform: `scale(${zoom})` }}>\r\n          <Droppable droppableId=\"planet\">\r\n            {(provided) => (\r\n              <div className=\"mp-planet-inner\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                {planetCells.map((cell, cellIndex) => (\r\n                  <Droppable key={cell.id} droppableId={cell.id}>\r\n                    {(prov) => (\r\n                      <div className=\"mp-cell\" ref={prov.innerRef} {...prov.droppableProps}>\r\n                        {cell.elements.map((el, index) => (\r\n                          <Draggable key={el.instanceId} draggableId={el.instanceId} index={index}>\r\n                            {(provDrag) => (\r\n                              <div className=\"mp-element\" \r\n                                   ref={provDrag.innerRef}\r\n                                   {...provDrag.draggableProps}\r\n                                   {...provDrag.dragHandleProps}\r\n                                   style={{\r\n                                     ...provDrag.draggableProps.style,\r\n                                     width: el.size === 3 ? '100px' : el.size === 2 ? '70px' : '40px',\r\n                                     height: el.size === 3 ? '100px' : el.size === 2 ? '70px' : '40px'\r\n                                   }}>\r\n                                <img src={el.image} alt={el.title} style={{ width: '100%', height: '100%' }} />\r\n                                <div className=\"mp-element-controls\">\r\n                                  <button onClick={() => handleSizeChange(el.instanceId, 3)}>G</button>\r\n                                  <button onClick={() => handleSizeChange(el.instanceId, 2)}>M</button>\r\n                                  <button onClick={() => handleSizeChange(el.instanceId, 1)}>P</button>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {prov.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </section>\r\n      </div>\r\n\r\n      <div className=\"mp-actions\">\r\n        <button className=\"save-btn\" onClick={handleSavePlanet}>Guardar mi planeta</button>\r\n      </div>\r\n\r\n      <footer className=\"mp-footer\">\r\n        <p>2025 © Iván Vela Campos</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MiPlaneta;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}