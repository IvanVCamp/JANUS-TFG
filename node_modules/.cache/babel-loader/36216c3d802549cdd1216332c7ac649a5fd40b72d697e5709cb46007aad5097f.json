{"ast":null,"code":"import axios from 'axios';\n\n// Ajusta la URL base según tu backend\nconst API_URL = 'http://localhost:5000/api';\nconst chatService = {\n  // Obtiene la lista de chats iniciados\n  getChats: async () => {\n    const response = await axios.get(`${API_URL}/chats`);\n    return response.data; // Debe ser un array de chats\n  },\n  // Inicia un nuevo chat con un usuario (p.ej. userId)\n  startChat: async userId => {\n    const response = await axios.post(`${API_URL}/chats`, {\n      userId\n    });\n    return response.data; // Devuelve el chat recién creado\n  },\n  // Obtiene los mensajes de un chat\n  getMessages: async chatId => {\n    const response = await axios.get(`${API_URL}/chats/${chatId}/messages`);\n    return response.data; // Array de mensajes\n  },\n  // Envía un mensaje (texto + archivo opcional)\n  sendMessage: async (chatId, formData) => {\n    // formData debería incluir { text, file, etc. }\n    const response = await axios.post(`${API_URL}/chats/${chatId}/messages`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data; // Mensaje creado\n  },\n  // Buscar usuarios por nombre o email para iniciar conversación\n  searchUsers: async query => {\n    const response = await axios.get(`${API_URL}/users/search`, {\n      params: {\n        q: query\n      }\n    });\n    return response.data; // Array de usuarios encontrados\n  }\n};\nexport default chatService;","map":{"version":3,"names":["axios","API_URL","chatService","getChats","response","get","data","startChat","userId","post","getMessages","chatId","sendMessage","formData","headers","searchUsers","query","params","q"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/services/chatService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Ajusta la URL base según tu backend\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst chatService = {\r\n  // Obtiene la lista de chats iniciados\r\n  getChats: async () => {\r\n    const response = await axios.get(`${API_URL}/chats`);\r\n    return response.data; // Debe ser un array de chats\r\n  },\r\n\r\n  // Inicia un nuevo chat con un usuario (p.ej. userId)\r\n  startChat: async (userId) => {\r\n    const response = await axios.post(`${API_URL}/chats`, { userId });\r\n    return response.data; // Devuelve el chat recién creado\r\n  },\r\n\r\n  // Obtiene los mensajes de un chat\r\n  getMessages: async (chatId) => {\r\n    const response = await axios.get(`${API_URL}/chats/${chatId}/messages`);\r\n    return response.data; // Array de mensajes\r\n  },\r\n\r\n  // Envía un mensaje (texto + archivo opcional)\r\n  sendMessage: async (chatId, formData) => {\r\n    // formData debería incluir { text, file, etc. }\r\n    const response = await axios.post(`${API_URL}/chats/${chatId}/messages`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    return response.data; // Mensaje creado\r\n  },\r\n\r\n  // Buscar usuarios por nombre o email para iniciar conversación\r\n  searchUsers: async (query) => {\r\n    const response = await axios.get(`${API_URL}/users/search`, {\r\n      params: { q: query }\r\n    });\r\n    return response.data; // Array de usuarios encontrados\r\n  }\r\n};\r\n\r\nexport default chatService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,WAAW,GAAG;EAClB;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,QAAQ,CAAC;IACpD,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAC,SAAS,EAAE,MAAOC,MAAM,IAAK;IAC3B,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,QAAQ,EAAE;MAAEO;IAAO,CAAC,CAAC;IACjE,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAI,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC7B,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,UAAUU,MAAM,WAAW,CAAC;IACvE,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAM,WAAW,EAAE,MAAAA,CAAOD,MAAM,EAAEE,QAAQ,KAAK;IACvC;IACA,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,UAAUU,MAAM,WAAW,EAAEE,QAAQ,EAAE;MACjFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED;EACAS,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,eAAe,EAAE;MAC1DgB,MAAM,EAAE;QAAEC,CAAC,EAAEF;MAAM;IACrB,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB;AACF,CAAC;AAED,eAAeJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}