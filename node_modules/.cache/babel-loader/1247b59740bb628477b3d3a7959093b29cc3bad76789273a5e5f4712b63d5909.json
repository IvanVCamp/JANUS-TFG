{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\PlanetSnapshot.js\",\n  _s = $RefreshSig$();\n// components/PlanetSnapshot.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../styles/planetSnapshot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlanetSnapshot() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const patientId = params.get('patientId');\n  const [planetSnapshot, setPlanetSnapshot] = useState(null);\n  useEffect(() => {\n    const fetchPlanetSnapshot = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5000/api/planet-map?patientId=${patientId}`, {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        setPlanetSnapshot(response.data);\n      } catch (error) {\n        console.error('Error al obtener el snapshot del planeta:', error);\n      }\n    };\n    fetchPlanetSnapshot();\n  }, [patientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planet-snapshot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ps-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (planetSnapshot === null || planetSnapshot === void 0 ? void 0 : planetSnapshot.planetName) || 'Mi Planeta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ps-content\",\n      children: planetSnapshot ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [planetSnapshot.planetSlogan && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ps-slogan\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: planetSnapshot.planetSlogan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ps-planet\",\n          style: {\n            position: 'relative',\n            width: '100%',\n            height: '400px',\n            border: '1px solid #ccc'\n          },\n          children: planetSnapshot.elements && planetSnapshot.elements.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ps-planet-element\",\n            style: {\n              position: 'absolute',\n              left: el.x,\n              top: el.y,\n              width: `${el.size * 40}px`,\n              height: `${el.size * 40}px`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: el.image,\n              alt: el.title,\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, el.elementId + '-' + el.x + '-' + el.y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay snapshot disponible para este paciente.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(PlanetSnapshot, \"aBi9Q7fOS9h17F7wpJ1K4Z4buSA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PlanetSnapshot;\nexport default PlanetSnapshot;\nvar _c;\n$RefreshReg$(_c, \"PlanetSnapshot\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","PlanetSnapshot","_s","navigate","location","params","URLSearchParams","search","patientId","get","planetSnapshot","setPlanetSnapshot","fetchPlanetSnapshot","token","localStorage","getItem","response","headers","data","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","planetName","planetSlogan","style","position","width","height","border","elements","map","el","left","x","top","y","size","src","image","alt","title","elementId","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PlanetSnapshot.js"],"sourcesContent":["// components/PlanetSnapshot.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport '../styles/planetSnapshot.css';\r\n\r\nfunction PlanetSnapshot() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const patientId = params.get('patientId');\r\n  const [planetSnapshot, setPlanetSnapshot] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPlanetSnapshot = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5000/api/planet-map?patientId=${patientId}`, {\r\n          headers: { 'x-auth-token': token }\r\n        });\r\n        setPlanetSnapshot(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener el snapshot del planeta:', error);\r\n      }\r\n    };\r\n    fetchPlanetSnapshot();\r\n  }, [patientId]);\r\n\r\n  return (\r\n    <div className=\"planet-snapshot-container\">\r\n      <header className=\"ps-header\">\r\n        <button className=\"back-btn\" onClick={() => navigate(-1)}>‚Üê</button>\r\n        <h1>{planetSnapshot?.planetName || 'Mi Planeta'}</h1>\r\n      </header>\r\n      <div className=\"ps-content\">\r\n        {planetSnapshot ? (\r\n          <>\r\n            {planetSnapshot.planetSlogan && (\r\n              <p className=\"ps-slogan\"><em>{planetSnapshot.planetSlogan}</em></p>\r\n            )}\r\n            <div className=\"ps-planet\" style={{ position: 'relative', width: '100%', height: '400px', border: '1px solid #ccc' }}>\r\n              {planetSnapshot.elements && planetSnapshot.elements.map((el) => (\r\n                <div\r\n                  key={el.elementId + '-' + el.x + '-' + el.y}\r\n                  className=\"ps-planet-element\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    left: el.x,\r\n                    top: el.y,\r\n                    width: `${el.size * 40}px`,\r\n                    height: `${el.size * 40}px`\r\n                  }}\r\n                >\r\n                  <img src={el.image} alt={el.title} style={{ width: '100%', height: '100%' }} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>No hay snapshot disponible para este paciente.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanetSnapshot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}