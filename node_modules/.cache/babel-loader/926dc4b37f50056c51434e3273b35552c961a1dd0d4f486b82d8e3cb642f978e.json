{"ast":null,"code":"import React,{useEffect,useState}from'react';import authService from'../services/authService';import'./patientTemplates.css';import'../styles/routineTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PatientTemplates(){const[templates,setTemplates]=useState([]);const[filterTag,setFilterTag]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchAssigned=async()=>{// 1) Recuperamos el usuario de forma segura\nconst user=authService.getCurrentUser();if(!user){setError('No estás autenticado. Por favor, inicia sesión.');setLoading(false);return;}// 2) Hacemos fetch de las plantillas asignadas\ntry{const res=await fetch(`/api/routineInstances?patientId=${user.id}`);if(!res.ok)throw new Error(`Error ${res.status}: ${res.statusText}`);const data=await res.json();setTemplates(data);}catch(err){setError(err.message);}finally{setLoading(false);}};fetchAssigned();},[]);const toggleCompleted=async(instId,actId)=>{try{await fetch(`/api/routineInstances/${instId}/activities/${actId}/toggle`,{method:'PATCH'});setTemplates(ts=>ts.map(t=>t.id!==instId?t:{...t,activities:t.activities.map(a=>a.id!==actId?a:{...a,completed:!a.completed})}));}catch(e){console.error(e);alert('No se pudo cambiar el estado.');}};const handleDurationChange=(instId,actId,val)=>{setTemplates(ts=>ts.map(t=>t.id!==instId?t:{...t,activities:t.activities.map(a=>a.id!==actId?a:{...a,duration:val})}));};const saveChanges=async instId=>{const tpl=templates.find(t=>t.id===instId);try{const res=await fetch(`/api/routineInstances/${instId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({activities:tpl.activities})});if(!res.ok)throw new Error('Error guardando');alert('Cambios guardados 👍');}catch(err){console.error(err);alert('Error guardando cambios');}};const filtered=templates.filter(t=>{var _t$tags;return filterTag?(_t$tags=t.tags)===null||_t$tags===void 0?void 0:_t$tags.includes(filterTag):true;});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filtrar por etiqueta\",value:filterTag,onChange:e=>setFilterTag(e.target.value),className:\"small-input tag-filter\"})]}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Cargando plantillas\\u2026\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:error}),!loading&&!error&&/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-grid\",children:[filtered.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No se encontraron plantillas con esa etiqueta.\"}),filtered.map(tpl=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:tpl.title}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:tpl.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"tpl-meta\",children:[\"Asignado el: \",new Date(tpl.assignedAt).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"challenge-indicator\",\"data-level\":tpl.challengeLevel,children:[\"Nivel \",tpl.challengeLevel]}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:tpl.activities.map(act=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:`activity-item ${act.completed?'status-completed':''}`,children:[/*#__PURE__*/_jsx(\"span\",{className:\"drag-handle\",children:\"\\u2261\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:act.title}),/*#__PURE__*/_jsx(\"p\",{children:act.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:act.duration,onChange:e=>handleDurationChange(tpl.id,act.id,e.target.value),className:\"small-input\"}),/*#__PURE__*/_jsxs(\"select\",{value:act.category,onChange:e=>{/* opcional: editar categoría */},className:\"small-select\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"Ejercicio\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Meditaci\\xF3n\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Lectura\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Otro\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"activity-toggle\",onClick:()=>toggleCompleted(tpl.id,act.id),children:act.completed?'✔️':'◻️'})]})},act.id))}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-save\",onClick:()=>saveChanges(tpl.id),children:\"Guardar Cambios\"})]},tpl.id))]})]})});}export default PatientTemplates;","map":{"version":3,"names":["React","useEffect","useState","authService","jsx","_jsx","jsxs","_jsxs","PatientTemplates","templates","setTemplates","filterTag","setFilterTag","loading","setLoading","error","setError","fetchAssigned","user","getCurrentUser","res","fetch","id","ok","Error","status","statusText","data","json","err","message","toggleCompleted","instId","actId","method","ts","map","t","activities","a","completed","e","console","alert","handleDurationChange","val","duration","saveChanges","tpl","find","headers","body","JSON","stringify","filtered","filter","_t$tags","tags","includes","className","children","type","placeholder","value","onChange","target","length","title","description","Date","assignedAt","toLocaleDateString","challengeLevel","act","category","onClick"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport authService from '../services/authService';\r\nimport './patientTemplates.css';\r\nimport '../styles/routineTemplates.css';\r\n\r\nfunction PatientTemplates() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [filterTag, setFilterTag] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAssigned = async () => {\r\n      // 1) Recuperamos el usuario de forma segura\r\n      const user = authService.getCurrentUser();\r\n      if (!user) {\r\n        setError('No estás autenticado. Por favor, inicia sesión.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // 2) Hacemos fetch de las plantillas asignadas\r\n      try {\r\n        const res = await fetch(`/api/routineInstances?patientId=${user.id}`);\r\n        if (!res.ok) throw new Error(`Error ${res.status}: ${res.statusText}`);\r\n        const data = await res.json();\r\n        setTemplates(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAssigned();\r\n  }, []);\r\n\r\n  const toggleCompleted = async (instId, actId) => {\r\n    try {\r\n      await fetch(`/api/routineInstances/${instId}/activities/${actId}/toggle`, {\r\n        method: 'PATCH'\r\n      });\r\n      setTemplates(ts =>\r\n        ts.map(t =>\r\n          t.id !== instId\r\n            ? t\r\n            : {\r\n                ...t,\r\n                activities: t.activities.map(a =>\r\n                  a.id !== actId ? a : { ...a, completed: !a.completed }\r\n                )\r\n              }\r\n        )\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert('No se pudo cambiar el estado.');\r\n    }\r\n  };\r\n\r\n  const handleDurationChange = (instId, actId, val) => {\r\n    setTemplates(ts =>\r\n      ts.map(t =>\r\n        t.id !== instId\r\n          ? t\r\n          : {\r\n              ...t,\r\n              activities: t.activities.map(a =>\r\n                a.id !== actId ? a : { ...a, duration: val }\r\n              )\r\n            }\r\n      )\r\n    );\r\n  };\r\n\r\n  const saveChanges = async instId => {\r\n    const tpl = templates.find(t => t.id === instId);\r\n    try {\r\n      const res = await fetch(`/api/routineInstances/${instId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ activities: tpl.activities })\r\n      });\r\n      if (!res.ok) throw new Error('Error guardando');\r\n      alert('Cambios guardados 👍');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error guardando cambios');\r\n    }\r\n  };\r\n\r\n  const filtered = templates.filter(t =>\r\n    filterTag ? t.tags?.includes(filterTag) : true\r\n  );\r\n\r\n  return (\r\n    <div className=\"routine-templates-page patient-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas Asignadas</h1>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Filtrar por etiqueta\"\r\n            value={filterTag}\r\n            onChange={e => setFilterTag(e.target.value)}\r\n            className=\"small-input tag-filter\"\r\n          />\r\n        </div>\r\n\r\n        {loading && <p>Cargando plantillas…</p>}\r\n        {error && <p className=\"error-msg\">{error}</p>}\r\n\r\n        {!loading && !error && (\r\n          <div className=\"tpl-grid\">\r\n            {filtered.length === 0 && (\r\n              <p>No se encontraron plantillas con esa etiqueta.</p>\r\n            )}\r\n            {filtered.map(tpl => (\r\n              <div key={tpl.id} className=\"tpl-card\">\r\n                <h2>{tpl.title}</h2>\r\n                <p className=\"tpl-desc\">{tpl.description}</p>\r\n                <p className=\"tpl-meta\">\r\n                  Asignado el: {new Date(tpl.assignedAt).toLocaleDateString()}\r\n                </p>\r\n                <div className=\"challenge-indicator\" data-level={tpl.challengeLevel}>\r\n                  Nivel {tpl.challengeLevel}\r\n                </div>\r\n\r\n                <ul className=\"tpl-activities-list\">\r\n                  {tpl.activities.map(act => (\r\n                    <li key={act.id}>\r\n                      <div\r\n                        className={`activity-item ${\r\n                          act.completed ? 'status-completed' : ''\r\n                        }`}\r\n                      >\r\n                        <span className=\"drag-handle\">≡</span>\r\n                        <div className=\"activity-content\">\r\n                          <h3>{act.title}</h3>\r\n                          <p>{act.description}</p>\r\n                          <div className=\"form-grid\">\r\n                            <input\r\n                              type=\"text\"\r\n                              value={act.duration}\r\n                              onChange={e =>\r\n                                handleDurationChange(tpl.id, act.id, e.target.value)\r\n                              }\r\n                              className=\"small-input\"\r\n                            />\r\n                            <select\r\n                              value={act.category}\r\n                              onChange={e => {\r\n                                /* opcional: editar categoría */\r\n                              }}\r\n                              className=\"small-select\"\r\n                            >\r\n                              <option>Ejercicio</option>\r\n                              <option>Meditación</option>\r\n                              <option>Lectura</option>\r\n                              <option>Otro</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          className=\"activity-toggle\"\r\n                          onClick={() => toggleCompleted(tpl.id, act.id)}\r\n                        >\r\n                          {act.completed ? '✔️' : '◻️'}\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n\r\n                <button className=\"btn-save\" onClick={() => saveChanges(tpl.id)}>\r\n                  Guardar Cambios\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientTemplates;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}