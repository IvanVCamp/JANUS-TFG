{"ast":null,"code":"// src/pages/PatientTemplatesPage.js\nimport React,{useState,useEffect}from'react';import'../styles/routineTemplates.css';import{FaChevronDown,FaChevronUp}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const[templates,setTemplates]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[expanded,setExpanded]=useState(null);const[completed,setCompleted]=useState({});// { [templateId]: Set of completed activity indices }\nconst token=localStorage.getItem('token');const headers={'Content-Type':'application/json','x-auth-token':token};useEffect(()=>{if(!token){setError('Debes iniciar sesiÃ³n');setLoading(false);return;}(async()=>{try{const res=await fetch('/api/routines/templates',{headers});if(res.status===401)throw new Error('SesiÃ³n expirada');if(!res.ok)throw new Error(`Error ${res.status}`);const data=await res.json();if(!Array.isArray(data))throw new Error('Formato invÃ¡lido');setTemplates(data);// inicializar completados\nconst init={};data.forEach(tpl=>{init[tpl._id]=new Set(tpl.completedActivities||[]);});setCompleted(init);}catch(err){setError(err.message);}finally{setLoading(false);}})();},[token]);const toggleExpand=id=>setExpanded(prev=>prev===id?null:id);const handleCheckbox=(tplId,idx)=>{setCompleted(prev=>{const setCopy=new Set(prev[tplId]);if(setCopy.has(idx))setCopy.delete(idx);else setCopy.add(idx);return{...prev,[tplId]:setCopy};});};const handleSave=async tpl=>{try{const idxs=Array.from(completed[tpl._id]);const res=await fetch(`/api/routines/templates/${tpl._id}`,{method:'PUT',headers,body:JSON.stringify({completedIndexes:idxs})});if(res.status===401)throw new Error('SesiÃ³n expirada');if(!res.ok){const txt=await res.text();throw new Error(`Error ${res.status}: ${txt}`);}alert('Progreso guardado');}catch(err){alert(err.message);}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tpl-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"})}),templates.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"\\uD83D\\uDE14 No tienes plantillas asignadas\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:templates.map(tpl=>{var _completed$tpl$_id;const doneCount=((_completed$tpl$_id=completed[tpl._id])===null||_completed$tpl$_id===void 0?void 0:_completed$tpl$_id.size)||0;const total=tpl.activities.length;const percent=total?Math.round(doneCount/total*100):0;return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{children:tpl.name}),/*#__PURE__*/_jsx(\"button\",{className:\"icon-edit\",onClick:()=>toggleExpand(tpl._id),style:{background:'none',border:'none',cursor:'pointer'},children:expanded===tpl._id?/*#__PURE__*/_jsx(FaChevronUp,{}):/*#__PURE__*/_jsx(FaChevronDown,{})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tpl-desc\",children:tpl.description}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress\",style:{width:`${percent}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[doneCount,\" / \",total,\" completadas\"]}),expanded===tpl._id&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"ul\",{style:{listStyle:'none',padding:0},children:tpl.activities.map((act,idx)=>{var _completed$tpl$_id2;return/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'0.75rem',display:'flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:((_completed$tpl$_id2=completed[tpl._id])===null||_completed$tpl$_id2===void 0?void 0:_completed$tpl$_id2.has(idx))||false,onChange:()=>handleCheckbox(tpl._id,idx)}),/*#__PURE__*/_jsx(\"span\",{className:\"tpl-desc\",children:act.name}),/*#__PURE__*/_jsx(\"span\",{className:\"challenge-indicator\",\"data-level\":act.challenge,children:act.challenge}),/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:'auto',fontSize:'0.85rem',color:'#777'},children:[act.minutes,\" min\"]})]},idx);})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-save\",onClick:()=>handleSave(tpl),children:\"\\uD83D\\uDCBE Guardar Progreso\"})]})]},tpl._id);})})]})});}","map":{"version":3,"names":["React","useState","useEffect","FaChevronDown","FaChevronUp","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","templates","setTemplates","loading","setLoading","error","setError","expanded","setExpanded","completed","setCompleted","token","localStorage","getItem","headers","res","fetch","status","Error","ok","data","json","Array","isArray","init","forEach","tpl","_id","Set","completedActivities","err","message","toggleExpand","id","prev","handleCheckbox","tplId","idx","setCopy","has","delete","add","handleSave","idxs","from","method","body","JSON","stringify","completedIndexes","txt","text","alert","className","children","length","map","_completed$tpl$_id","doneCount","size","total","activities","percent","Math","round","style","display","justifyContent","alignItems","name","onClick","background","border","cursor","description","width","marginTop","listStyle","padding","act","_completed$tpl$_id2","marginBottom","gap","type","checked","onChange","challenge","marginLeft","fontSize","color","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/pages/PatientTemplatesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/routineTemplates.css';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n  const [expanded, setExpanded]   = useState(null);\r\n  const [completed, setCompleted] = useState({}); // { [templateId]: Set of completed activity indices }\r\n\r\n  const token = localStorage.getItem('token');\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': token\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setError('Debes iniciar sesiÃ³n');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    (async () => {\r\n      try {\r\n        const res = await fetch('/api/routines/templates', { headers });\r\n        if (res.status === 401) throw new Error('SesiÃ³n expirada');\r\n        if (!res.ok) throw new Error(`Error ${res.status}`);\r\n        const data = await res.json();\r\n        if (!Array.isArray(data)) throw new Error('Formato invÃ¡lido');\r\n        setTemplates(data);\r\n        // inicializar completados\r\n        const init = {};\r\n        data.forEach(tpl => {\r\n          init[tpl._id] = new Set(tpl.completedActivities || []);\r\n        });\r\n        setCompleted(init);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [token]);\r\n\r\n  const toggleExpand = id =>\r\n    setExpanded(prev => (prev === id ? null : id));\r\n\r\n  const handleCheckbox = (tplId, idx) => {\r\n    setCompleted(prev => {\r\n      const setCopy = new Set(prev[tplId]);\r\n      if (setCopy.has(idx)) setCopy.delete(idx);\r\n      else setCopy.add(idx);\r\n      return { ...prev, [tplId]: setCopy };\r\n    });\r\n  };\r\n\r\n  const handleSave = async tpl => {\r\n    try {\r\n      const idxs = Array.from(completed[tpl._id]);\r\n      const res = await fetch(`/api/routines/templates/${tpl._id}`, {\r\n        method: 'PUT',\r\n        headers,\r\n        body: JSON.stringify({ completedIndexes: idxs })\r\n      });\r\n      if (res.status === 401) throw new Error('SesiÃ³n expirada');\r\n      if (!res.ok) {\r\n        const txt = await res.text();\r\n        throw new Error(`Error ${res.status}: ${txt}`);\r\n      }\r\n      alert('Progreso guardado');\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargandoâ€¦</div>;\r\n  if (error)   return <div className=\"tpl-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"patient-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas Asignadas</h1>\r\n        </div>\r\n\r\n        {templates.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            ðŸ˜” No tienes plantillas asignadas\r\n          </div>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {templates.map(tpl => {\r\n              const doneCount = completed[tpl._id]?.size || 0;\r\n              const total = tpl.activities.length;\r\n              const percent = total ? Math.round((doneCount / total) * 100) : 0;\r\n              return (\r\n                <div key={tpl._id} className=\"tpl-card\">\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <h2>{tpl.name}</h2>\r\n                    <button\r\n                      className=\"icon-edit\"\r\n                      onClick={() => toggleExpand(tpl._id)}\r\n                      style={{ background: 'none', border: 'none', cursor: 'pointer' }}\r\n                    >\r\n                      {expanded === tpl._id ? <FaChevronUp /> : <FaChevronDown />}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"tpl-desc\">{tpl.description}</div>\r\n                  <div className=\"progress-bar\">\r\n                    <div className=\"progress\" style={{ width: `${percent}%` }} />\r\n                  </div>\r\n                  <div className=\"tpl-meta\">{doneCount} / {total} completadas</div>\r\n\r\n                  {expanded === tpl._id && (\r\n                    <div style={{ marginTop: '1rem' }}>\r\n                      <ul style={{ listStyle: 'none', padding: 0 }}>\r\n                        {tpl.activities.map((act, idx) => (\r\n                          <li key={idx} style={{ marginBottom: '0.75rem', display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={completed[tpl._id]?.has(idx) || false}\r\n                              onChange={() => handleCheckbox(tpl._id, idx)}\r\n                            />\r\n                            <span className=\"tpl-desc\">{act.name}</span>\r\n                            <span className=\"challenge-indicator\" data-level={act.challenge}>\r\n                              {act.challenge}\r\n                            </span>\r\n                            <span style={{ marginLeft: 'auto', fontSize: '0.85rem', color: '#777' }}>\r\n                              {act.minutes} min\r\n                            </span>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                      <button className=\"btn-save\" onClick={() => handleSave(tpl)}>\r\n                        ðŸ’¾ Guardar Progreso\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}