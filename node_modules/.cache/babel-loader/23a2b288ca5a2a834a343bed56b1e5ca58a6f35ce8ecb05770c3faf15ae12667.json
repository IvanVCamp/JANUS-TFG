{"ast":null,"code":"// src/components/PatientRoutines.js\nimport React,{useState,useEffect,useMemo}from'react';import axios from'axios';import{useParams,useNavigate}from'react-router-dom';import{Pie,Bar,Line}from'react-chartjs-2';import'chart.js/auto';import'../styles/therapistRoutines.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const activityCategoryMap={futbol:'Juegos',dibujos:'Ocio',comics:'Ocio',tarea:'Estudio',videojuegos:'Juegos',helado:'Ocio',parque:'Juegos',banio:'Aseo personal',dormir:'Sueño',musica:'Ocio',bailar:'Ocio',amigos:'Juegos',bicicleta:'Juegos',dibujar:'Ocio',mascotas:'Juegos',experimentos:'Estudio',cantar:'Ocio',lego:'Juegos',nadar:'Juegos',computadora:'Juegos'};const categoryList=['Juegos','Estudio','Ocio','Aseo personal','Sueño'];const categoryColors={Juegos:'#4CAF50',Estudio:'#FFC107',Ocio:'#2196F3','Aseo personal':'#FF5722',Sueño:'#9C27B0'};function PatientRoutines(){const{patientId}=useParams();const navigate=useNavigate();const[results,setResults]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[searchQuery,setSearchQuery]=useState('');useEffect(()=>{const fetchResults=async()=>{const token=localStorage.getItem('token');try{const res=await axios.get(`https://localhost:8080/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}});// convert createdAt to Date\nconst data=res.data.map(r=>({...r,createdAt:new Date(r.createdAt)}));setResults(data);// inicializar filtro: últimos 7 días\nconst today=new Date();const past7=new Date(today);past7.setDate(today.getDate()-6);setFrom(past7.toISOString().slice(0,10));setTo(today.toISOString().slice(0,10));}catch(err){console.error('Error cargando resultados:',err);}};fetchResults();},[patientId]);// resultados filtrados por rango de fechas\nconst filtered=useMemo(()=>{if(!from||!to)return results;const start=new Date(from);const end=new Date(to);end.setHours(23,59,59,999);return results.filter(r=>r.createdAt>=start&&r.createdAt<=end);},[results,from,to]);// cálculo de todas las métricas\nconst{distributionData,distributionLabels,distributionColors,avgDurationData,avgDurationLabels,kpis,weeklyTrend,weeklyLabels,trendDatasets,heatmapCounts,tableRows}=useMemo(()=>{const categoryDur={};const activityDur={};const activityCnt={};const dailyCatDur={};const heatmap=Array(7).fill(0).map(()=>Array(24).fill(0));const rows=[];const varietySet=new Set();filtered.forEach(entry=>{const dateStr=entry.createdAt.toISOString().slice(0,10);if(!dailyCatDur[dateStr])dailyCatDur[dateStr]={};entry.timeSlots.forEach(slot=>{const hour=parseInt(slot.slot.split(':')[0],10);// heatmap: row 0=Mon...6=Sun\nconst dow=entry.createdAt.getDay();// 0=Sun..6=Sat\nconst row=(dow+6)%7;if(slot.activities.length>0){heatmap[row][hour]++;}slot.activities.forEach(act=>{const id=act.activityId;const title=act.title;const dur=act.duration;const cat=activityCategoryMap[id]||'Otro';varietySet.add(id);// categorías\ncategoryDur[cat]=(categoryDur[cat]||0)+dur;// actividades\nactivityDur[title]=(activityDur[title]||0)+dur;activityCnt[title]=(activityCnt[title]||0)+1;// diaria por categoría\ndailyCatDur[dateStr][cat]=(dailyCatDur[dateStr][cat]||0)+dur;// fila de tabla\nrows.push({date:dateStr,hour:slot.slot,activity:title,category:cat,duration:dur});});});});// distribución pastel\nconst totalDur=Object.values(categoryDur).reduce((a,b)=>a+b,0);const distData=categoryList.map(c=>categoryDur[c]||0);const distLabels=categoryList;const distColors=categoryList.map(c=>categoryColors[c]);// promedio duración top 10 actividades\nconst avgArr=Object.keys(activityDur).map(act=>({act,avg:activityDur[act]/activityCnt[act]}));avgArr.sort((a,b)=>b.avg-a.avg);const top10=avgArr.slice(0,10);const avgLabels=top10.map(o=>o.act);const avgData=top10.map(o=>Number(o.avg.toFixed(1)));// KPIs\nconst variety=varietySet.size;const passive=(categoryDur['Sueño']||0)+(categoryDur['Aseo personal']||0);const active=totalDur-passive;// Índice de equilibrio (entropía normalizada)\nconst ps=categoryList.map(c=>(categoryDur[c]||0)/totalDur).filter(p=>p>0);const H=-ps.reduce((s,p)=>s+p*Math.log(p),0)/Math.log(categoryList.length);const KBI=Number(H.toFixed(2));// Occupational Balance Index\n// evolución semanal\n// generar lista de fechas entre from y to\nconst dateList=[];if(from&&to){let cur=new Date(from);const end=new Date(to);while(cur<=end){dateList.push(cur.toISOString().slice(0,10));cur.setDate(cur.getDate()+1);}}const trendLabels=dateList;const trendDataSets=categoryList.map(cat=>({label:cat,data:dateList.map(d=>{var _dailyCatDur$d;return((_dailyCatDur$d=dailyCatDur[d])===null||_dailyCatDur$d===void 0?void 0:_dailyCatDur$d[cat])||0;}),borderColor:categoryColors[cat],fill:false}));return{distributionData:distData,distributionLabels:distLabels,distributionColors:distColors,avgDurationData:avgData,avgDurationLabels:avgLabels,kpis:{obi:KBI,variety,active,passive},weeklyTrend:trendDataSets,weeklyLabels:trendLabels,trendDatasets:trendDataSets,heatmapCounts:heatmap,tableRows:rows};},[filtered]);// filtrar tabla por búsqueda\nconst displayedRows=useMemo(()=>{if(!searchQuery)return tableRows;const q=searchQuery.toLowerCase();return tableRows.filter(r=>r.activity.toLowerCase().includes(q)||r.category.toLowerCase().includes(q));},[searchQuery,tableRows]);// color para heatmap\nconst maxHeat=useMemo(()=>{const flat=heatmapCounts.flat();return flat.length?Math.max(...flat):1;},[heatmapCounts]);const computeColor=count=>{const ratio=count/maxHeat;const light=90-ratio*60;return`hsl(263,50%,${light}%)`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"patient-routines-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-btn\",onClick:()=>navigate('/therapist/routines'),children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Rutinas del Paciente\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"search-table\",children:[\"Buscar actividad:\",' ',/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Texto libre...\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Equilibrio Ocupacional\"}),/*#__PURE__*/_jsx(\"p\",{className:\"kpi-value\",children:kpis.obi})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Variedad de Actividades\"}),/*#__PURE__*/_jsx(\"p\",{className:\"kpi-value\",children:kpis.variety})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Activo / Pasivo (min)\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"kpi-value\",children:[kpis.active,\" / \",kpis.passive]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-row two\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Distribuci\\xF3n por Categor\\xEDa\"}),/*#__PURE__*/_jsx(Pie,{data:{labels:distributionLabels,datasets:[{data:distributionData,backgroundColor:distributionColors}]}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Duraci\\xF3n Media por Actividad\"}),/*#__PURE__*/_jsx(Bar,{data:{labels:avgDurationLabels,datasets:[{data:avgDurationData,backgroundColor:'#6c63ff'}]},options:{indexAxis:'y'}})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"charts-row full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Evoluci\\xF3n Semanal por Categor\\xEDa\"}),/*#__PURE__*/_jsx(Line,{data:{labels:weeklyLabels,datasets:weeklyTrend}})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Mapa de Calor Semanal (hora vs d\\xEDa)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-hours\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"corner\"}),Array.from({length:24}).map((_,h)=>/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-hour-label\",children:[String(h).padStart(2,'0'),\":00\"]},h))]}),/*#__PURE__*/_jsx(\"div\",{className:\"heatmap-grid\",children:['Lun','Mar','Mié','Jue','Vie','Sáb','Dom'].map((dayName,i)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"heatmap-day-label\",children:dayName}),heatmapCounts[i].map((cnt,h)=>/*#__PURE__*/_jsx(\"div\",{className:\"heat-cell\",style:{backgroundColor:computeColor(cnt)}},h))]},dayName))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Detalle de Actividades\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"D\\xEDa\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hora\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actividad\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Categor\\xEDa\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Duraci\\xF3n\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:displayedRows.map((r,i)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:r.date}),/*#__PURE__*/_jsx(\"td\",{children:r.hour}),/*#__PURE__*/_jsx(\"td\",{children:r.activity}),/*#__PURE__*/_jsx(\"td\",{children:r.category}),/*#__PURE__*/_jsx(\"td\",{children:r.duration})]},i))})]})]})]});}export default PatientRoutines;","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useParams","useNavigate","Pie","Bar","Line","jsx","_jsx","jsxs","_jsxs","activityCategoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","categoryList","categoryColors","Juegos","Estudio","Ocio","Sueño","PatientRoutines","patientId","navigate","results","setResults","from","setFrom","to","setTo","searchQuery","setSearchQuery","fetchResults","token","localStorage","getItem","res","get","headers","data","map","r","createdAt","Date","today","past7","setDate","getDate","toISOString","slice","err","console","error","filtered","start","end","setHours","filter","distributionData","distributionLabels","distributionColors","avgDurationData","avgDurationLabels","kpis","weeklyTrend","weeklyLabels","trendDatasets","heatmapCounts","tableRows","categoryDur","activityDur","activityCnt","dailyCatDur","heatmap","Array","fill","rows","varietySet","Set","forEach","entry","dateStr","timeSlots","slot","hour","parseInt","split","dow","getDay","row","activities","length","act","id","activityId","title","dur","duration","cat","add","push","date","activity","category","totalDur","Object","values","reduce","a","b","distData","c","distLabels","distColors","avgArr","keys","avg","sort","top10","avgLabels","o","avgData","Number","toFixed","variety","size","passive","active","ps","p","H","s","Math","log","KBI","dateList","cur","trendLabels","trendDataSets","label","d","_dailyCatDur$d","borderColor","obi","displayedRows","q","toLowerCase","includes","maxHeat","flat","max","computeColor","count","ratio","light","className","children","onClick","type","value","onChange","e","target","placeholder","labels","datasets","backgroundColor","options","indexAxis","_","h","String","padStart","dayName","i","Fragment","cnt","style"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["// src/components/PatientRoutines.js\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Pie, Bar, Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto'; \r\nimport '../styles/therapistRoutines.css';\r\n\r\nconst activityCategoryMap = {\r\n  futbol: 'Juegos',\r\n  dibujos: 'Ocio',\r\n  comics: 'Ocio',\r\n  tarea: 'Estudio',\r\n  videojuegos: 'Juegos',\r\n  helado: 'Ocio',\r\n  parque: 'Juegos',\r\n  banio: 'Aseo personal',\r\n  dormir: 'Sueño',\r\n  musica: 'Ocio',\r\n  bailar: 'Ocio',\r\n  amigos: 'Juegos',\r\n  bicicleta: 'Juegos',\r\n  dibujar: 'Ocio',\r\n  mascotas: 'Juegos',\r\n  experimentos: 'Estudio',\r\n  cantar: 'Ocio',\r\n  lego: 'Juegos',\r\n  nadar: 'Juegos',\r\n  computadora: 'Juegos'\r\n};\r\n\r\nconst categoryList = [\r\n  'Juegos',\r\n  'Estudio',\r\n  'Ocio',\r\n  'Aseo personal',\r\n  'Sueño'\r\n];\r\n\r\nconst categoryColors = {\r\n  Juegos: '#4CAF50',\r\n  Estudio: '#FFC107',\r\n  Ocio: '#2196F3',\r\n  'Aseo personal': '#FF5722',\r\n  Sueño: '#9C27B0'\r\n};\r\n\r\nfunction PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [results, setResults] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      const token = localStorage.getItem('token');\r\n      try {\r\n        const res = await axios.get(\r\n          `https://localhost:8080/api/game?patientId=${patientId}`,\r\n          { headers: { 'x-auth-token': token } }\r\n        );\r\n        // convert createdAt to Date\r\n        const data = res.data.map(r => ({\r\n          ...r,\r\n          createdAt: new Date(r.createdAt)\r\n        }));\r\n        setResults(data);\r\n        // inicializar filtro: últimos 7 días\r\n        const today = new Date();\r\n        const past7 = new Date(today);\r\n        past7.setDate(today.getDate() - 6);\r\n        setFrom(past7.toISOString().slice(0, 10));\r\n        setTo(today.toISOString().slice(0, 10));\r\n      } catch (err) {\r\n        console.error('Error cargando resultados:', err);\r\n      }\r\n    };\r\n    fetchResults();\r\n  }, [patientId]);\r\n\r\n  // resultados filtrados por rango de fechas\r\n  const filtered = useMemo(() => {\r\n    if (!from || !to) return results;\r\n    const start = new Date(from);\r\n    const end = new Date(to);\r\n    end.setHours(23, 59, 59, 999);\r\n    return results.filter(r =>\r\n      r.createdAt >= start && r.createdAt <= end\r\n    );\r\n  }, [results, from, to]);\r\n\r\n  // cálculo de todas las métricas\r\n  const {\r\n    distributionData,\r\n    distributionLabels,\r\n    distributionColors,\r\n    avgDurationData,\r\n    avgDurationLabels,\r\n    kpis,\r\n    weeklyTrend,\r\n    weeklyLabels,\r\n    trendDatasets,\r\n    heatmapCounts,\r\n    tableRows\r\n  } = useMemo(() => {\r\n    const categoryDur = {};\r\n    const activityDur = {};\r\n    const activityCnt = {};\r\n    const dailyCatDur = {};\r\n    const heatmap = Array(7).fill(0).map(() => Array(24).fill(0));\r\n    const rows = [];\r\n    const varietySet = new Set();\r\n\r\n    filtered.forEach(entry => {\r\n      const dateStr = entry.createdAt.toISOString().slice(0, 10);\r\n      if (!dailyCatDur[dateStr]) dailyCatDur[dateStr] = {};\r\n      entry.timeSlots.forEach(slot => {\r\n        const hour = parseInt(slot.slot.split(':')[0], 10);\r\n        // heatmap: row 0=Mon...6=Sun\r\n        const dow = entry.createdAt.getDay(); // 0=Sun..6=Sat\r\n        const row = (dow + 6) % 7;\r\n        if (slot.activities.length > 0) {\r\n          heatmap[row][hour]++;\r\n        }\r\n        slot.activities.forEach(act => {\r\n          const id = act.activityId;\r\n          const title = act.title;\r\n          const dur = act.duration;\r\n          const cat = activityCategoryMap[id] || 'Otro';\r\n          varietySet.add(id);\r\n          // categorías\r\n          categoryDur[cat] = (categoryDur[cat] || 0) + dur;\r\n          // actividades\r\n          activityDur[title] = (activityDur[title] || 0) + dur;\r\n          activityCnt[title] = (activityCnt[title] || 0) + 1;\r\n          // diaria por categoría\r\n          dailyCatDur[dateStr][cat] =\r\n            (dailyCatDur[dateStr][cat] || 0) + dur;\r\n          // fila de tabla\r\n          rows.push({\r\n            date: dateStr,\r\n            hour: slot.slot,\r\n            activity: title,\r\n            category: cat,\r\n            duration: dur\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    // distribución pastel\r\n    const totalDur = Object.values(categoryDur).reduce((a, b) => a + b, 0);\r\n    const distData = categoryList.map(c => categoryDur[c] || 0);\r\n    const distLabels = categoryList;\r\n    const distColors = categoryList.map(c => categoryColors[c]);\r\n\r\n    // promedio duración top 10 actividades\r\n    const avgArr = Object.keys(activityDur).map(act => ({\r\n      act,\r\n      avg: activityDur[act] / activityCnt[act]\r\n    }));\r\n    avgArr.sort((a, b) => b.avg - a.avg);\r\n    const top10 = avgArr.slice(0, 10);\r\n    const avgLabels = top10.map(o => o.act);\r\n    const avgData = top10.map(o => Number(o.avg.toFixed(1)));\r\n\r\n    // KPIs\r\n    const variety = varietySet.size;\r\n    const passive = (categoryDur['Sueño'] || 0) + (categoryDur['Aseo personal'] || 0);\r\n    const active = totalDur - passive;\r\n    // Índice de equilibrio (entropía normalizada)\r\n    const ps = categoryList\r\n      .map(c => (categoryDur[c] || 0) / totalDur)\r\n      .filter(p => p > 0);\r\n    const H = - ps.reduce((s, p) => s + p * Math.log(p), 0) / Math.log(categoryList.length);\r\n    const KBI = Number(H.toFixed(2)); // Occupational Balance Index\r\n\r\n    // evolución semanal\r\n    // generar lista de fechas entre from y to\r\n    const dateList = [];\r\n    if (from && to) {\r\n      let cur = new Date(from);\r\n      const end = new Date(to);\r\n      while (cur <= end) {\r\n        dateList.push(cur.toISOString().slice(0, 10));\r\n        cur.setDate(cur.getDate() + 1);\r\n      }\r\n    }\r\n    const trendLabels = dateList;\r\n    const trendDataSets = categoryList.map(cat => ({\r\n      label: cat,\r\n      data: dateList.map(d => dailyCatDur[d]?.[cat] || 0),\r\n      borderColor: categoryColors[cat],\r\n      fill: false\r\n    }));\r\n\r\n    return {\r\n      distributionData: distData,\r\n      distributionLabels: distLabels,\r\n      distributionColors: distColors,\r\n      avgDurationData: avgData,\r\n      avgDurationLabels: avgLabels,\r\n      kpis: {\r\n        obi: KBI,\r\n        variety,\r\n        active,\r\n        passive\r\n      },\r\n      weeklyTrend: trendDataSets,\r\n      weeklyLabels: trendLabels,\r\n      trendDatasets: trendDataSets,\r\n      heatmapCounts: heatmap,\r\n      tableRows: rows\r\n    };\r\n  }, [filtered]);\r\n\r\n  // filtrar tabla por búsqueda\r\n  const displayedRows = useMemo(() => {\r\n    if (!searchQuery) return tableRows;\r\n    const q = searchQuery.toLowerCase();\r\n    return tableRows.filter(r =>\r\n      r.activity.toLowerCase().includes(q) ||\r\n      r.category.toLowerCase().includes(q)\r\n    );\r\n  }, [searchQuery, tableRows]);\r\n\r\n  // color para heatmap\r\n  const maxHeat = useMemo(() => {\r\n    const flat = heatmapCounts.flat();\r\n    return flat.length ? Math.max(...flat) : 1;\r\n  }, [heatmapCounts]);\r\n\r\n  const computeColor = count => {\r\n    const ratio = count / maxHeat;\r\n    const light = 90 - ratio * 60;\r\n    return `hsl(263,50%,${light}%)`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-routines-container\">\r\n      <button className=\"back-btn\" onClick={() => navigate('/therapist/routines')}>\r\n        ← Volver\r\n      </button>\r\n      <h1>Rutinas del Paciente</h1>\r\n\r\n      {/* filtro de fechas y búsqueda */}\r\n      <div className=\"filter-section\">\r\n        <label>\r\n          Desde:{' '}\r\n          <input\r\n            type=\"date\"\r\n            value={from}\r\n            onChange={e => setFrom(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Hasta:{' '}\r\n          <input\r\n            type=\"date\"\r\n            value={to}\r\n            onChange={e => setTo(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className=\"search-table\">\r\n          Buscar actividad:{' '}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Texto libre...\"\r\n            value={searchQuery}\r\n            onChange={e => setSearchQuery(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* KPI Cards */}\r\n      <div className=\"kpi-cards\">\r\n        <div className=\"kpi-card\">\r\n          <h3>Equilibrio Ocupacional</h3>\r\n          <p className=\"kpi-value\">{kpis.obi}</p>\r\n        </div>\r\n        <div className=\"kpi-card\">\r\n          <h3>Variedad de Actividades</h3>\r\n          <p className=\"kpi-value\">{kpis.variety}</p>\r\n        </div>\r\n        <div className=\"kpi-card\">\r\n          <h3>Activo / Pasivo (min)</h3>\r\n          <p className=\"kpi-value\">\r\n            {kpis.active} / {kpis.passive}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts row: Pie y Bar */}\r\n      <div className=\"charts-row two\">\r\n        <div className=\"chart-container\">\r\n          <h4>Distribución por Categoría</h4>\r\n          <Pie\r\n            data={{\r\n              labels: distributionLabels,\r\n              datasets: [{\r\n                data: distributionData,\r\n                backgroundColor: distributionColors\r\n              }]\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"chart-container\">\r\n          <h4>Duración Media por Actividad</h4>\r\n          <Bar\r\n            data={{\r\n              labels: avgDurationLabels,\r\n              datasets: [{\r\n                data: avgDurationData,\r\n                backgroundColor: '#6c63ff'\r\n              }]\r\n            }}\r\n            options={{\r\n              indexAxis: 'y'\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line trend */}\r\n      <div className=\"charts-row full\">\r\n        <div className=\"chart-container\">\r\n          <h4>Evolución Semanal por Categoría</h4>\r\n          <Line\r\n            data={{\r\n              labels: weeklyLabels,\r\n              datasets: weeklyTrend\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Heatmap */}\r\n      <div className=\"heatmap-section\">\r\n        <h4>Mapa de Calor Semanal (hora vs día)</h4>\r\n        {/* horas */}\r\n        <div className=\"heatmap-hours\">\r\n          <div className=\"corner\" />\r\n          {Array.from({ length: 24 }).map((_, h) => (\r\n            <div key={h} className=\"heatmap-hour-label\">\r\n              {String(h).padStart(2, '0')}:00\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* grid */}\r\n        <div className=\"heatmap-grid\">\r\n          {['Lun','Mar','Mié','Jue','Vie','Sáb','Dom'].map((dayName, i) => (\r\n            <React.Fragment key={dayName}>\r\n              <div className=\"heatmap-day-label\">{dayName}</div>\r\n              {heatmapCounts[i].map((cnt, h) => (\r\n                <div\r\n                  key={h}\r\n                  className=\"heat-cell\"\r\n                  style={{ backgroundColor: computeColor(cnt) }}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabla de detalle */}\r\n      <div className=\"data-table\">\r\n        <h4>Detalle de Actividades</h4>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Día</th>\r\n              <th>Hora</th>\r\n              <th>Actividad</th>\r\n              <th>Categoría</th>\r\n              <th>Duración</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayedRows.map((r, i) => (\r\n              <tr key={i}>\r\n                <td>{r.date}</td>\r\n                <td>{r.hour}</td>\r\n                <td>{r.activity}</td>\r\n                <td>{r.category}</td>\r\n                <td>{r.duration}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRoutines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}