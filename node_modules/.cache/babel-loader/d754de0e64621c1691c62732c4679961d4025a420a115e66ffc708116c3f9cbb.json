{"ast":null,"code":"// services/taskService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/tasks';\nconst taskService = {\n  getTasks: async () => {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(API_URL, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  },\n  createTask: async taskData => {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(API_URL, taskData, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  },\n  updateTask: async (taskId, updatedFields) => {\n    const token = localStorage.getItem('token');\n    const response = await axios.put(`${API_URL}/${taskId}`, updatedFields, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  },\n  deleteTask: async taskId => {\n    const token = localStorage.getItem('token');\n    const response = await axios.delete(`${API_URL}/${taskId}`, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  }\n};\nexport default taskService;","map":{"version":3,"names":["axios","API_URL","taskService","getTasks","token","localStorage","getItem","response","get","headers","data","createTask","taskData","post","updateTask","taskId","updatedFields","put","deleteTask","delete"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/services/taskService.js"],"sourcesContent":["// services/taskService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/tasks';\r\n\r\nconst taskService = {\r\n  getTasks: async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get(API_URL, {\r\n      headers: { 'x-auth-token': token }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  createTask: async (taskData) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post(API_URL, taskData, {\r\n      headers: { 'x-auth-token': token }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  updateTask: async (taskId, updatedFields) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.put(`${API_URL}/${taskId}`, updatedFields, {\r\n      headers: { 'x-auth-token': token }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  deleteTask: async (taskId) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.delete(`${API_URL}/${taskId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default taskService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,EAAE;MACxCQ,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDC,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAACZ,OAAO,EAAEW,QAAQ,EAAE;MACnDH,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDI,UAAU,EAAE,MAAAA,CAAOC,MAAM,EAAEC,aAAa,KAAK;IAC3C,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,IAAIc,MAAM,EAAE,EAAEC,aAAa,EAAE;MACtEP,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDQ,UAAU,EAAE,MAAOH,MAAM,IAAK;IAC5B,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,IAAIc,MAAM,EAAE,EAAE;MAC1DN,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}