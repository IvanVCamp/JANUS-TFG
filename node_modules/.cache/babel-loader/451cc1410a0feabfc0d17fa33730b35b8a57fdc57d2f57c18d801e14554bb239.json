{"ast":null,"code":"// src/components/PatientRoutines.js\nimport React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{ResponsiveContainer,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import'../styles/therapistRoutines.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ALL_CATEGORIES=['cuidado personal','actividades escolares','juego y tiempo libre','participación comunitaria','descanso y sueño'];const categoryMap={futbol:'juego y tiempo libre',dibujos:'juego y tiempo libre',comics:'juego y tiempo libre',tarea:'actividades escolares',videojuegos:'juego y tiempo libre',helado:'juego y tiempo libre',parque:'participación comunitaria',banio:'cuidado personal',dormir:'descanso y sueño',musica:'juego y tiempo libre',bailar:'juego y tiempo libre',amigos:'participación comunitaria',bicicleta:'juego y tiempo libre',dibujar:'juego y tiempo libre',mascotas:'juego y tiempo libre',experimentos:'actividades escolares',cantar:'juego y tiempo libre',lego:'juego y tiempo libre',nadar:'cuidado personal',computadora:'juego y tiempo libre'};export default function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selected,setSelected]=useState(null);const[metrics,setMetrics]=useState(null);const[compare,setCompare]=useState({wed:null,sat:null});// 1) Cargar todos los resultados\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(_ref=>{let{data}=_ref;setResults(data);// rango por defecto última semana\nconst now=new Date();const weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// 2) Filtrar por rango y cargar comparativa Wed/Sat\nuseEffect(()=>{// filtrar por fechas\nif(from&&to){const f=new Date(from),t=new Date(to);t.setHours(23,59,59,999);const filt=results.filter(r=>{const d=new Date(r.createdAt);return d>=f&&d<=t;});setFiltered(filt);}// comparar Miércoles vs Sábado\nconst wed=results.find(r=>r.day==='Miércoles');const sat=results.find(r=>r.day==='Sábado');setCompare({wed,sat});},[results,from,to]);// 3) Calcular métricas del día seleccionado\nuseEffect(()=>{if(!selected)return;const res=filtered.find(r=>r.createdAt===selected);if(!res)return;const slots=res.timeSlots||[];const acts=slots.flatMap(s=>s.activities||[]);const totalMin=acts.reduce((sum,a)=>sum+a.duration,0)||1;// Diversidad\nconst diversity=new Set(acts.map(a=>a.activityId)).size;// Consistencia\nconst occupied=slots.filter(s=>{var _s$activities;return((_s$activities=s.activities)===null||_s$activities===void 0?void 0:_s$activities.length)>0;}).length;const consistency=+(occupied/24*100).toFixed(1);// Horas por categoría\nconst catSum={};ALL_CATEGORIES.forEach(c=>catSum[c]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId];if(cat)catSum[cat]+=a.duration;});const hours=ALL_CATEGORIES.map(name=>({name,hours:+(catSum[name]/60).toFixed(2)}));setMetrics({diversity,consistency,hours});},[selected,filtered]);// 4) Render\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"charts-grid\",children:[!compare.wed&&/*#__PURE__*/_jsx(\"p\",{children:\"No hay registro para Mi\\xE9rcoles.\"}),!compare.sat&&/*#__PURE__*/_jsx(\"p\",{children:\"No hay registro para S\\xE1bado.\"}),compare.wed&&compare.sat&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Actividades Mi\\xE9rcoles\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Lista de actividades y duraci\\xF3n para Mi\\xE9rcoles.\"}),/*#__PURE__*/_jsx(\"ul\",{children:compare.wed.timeSlots.flatMap(s=>s.activities||[]).map((act,i)=>/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2699\\uFE0F \",act.title,\" \\u2013 \",act.duration,\" min\"]},i))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Actividades S\\xE1bado\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Lista de actividades y duraci\\xF3n para S\\xE1bado.\"}),/*#__PURE__*/_jsx(\"ul\",{children:compare.sat.timeSlots.flatMap(s=>s.activities||[]).map((act,i)=>/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2699\\uFE0F \",act.title,\" \\u2013 \",act.duration,\" min\"]},i))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas por Categor\\xEDa\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Comparativa de horas invertidas por categor\\xEDa en Mi\\xE9rcoles vs S\\xE1bado.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:ALL_CATEGORIES.map(name=>({name,Wed:+(compare.wed.timeSlots.flatMap(s=>s.activities||[]).filter(a=>categoryMap[a.activityId]===name).reduce((sum,a)=>sum+a.duration,0)/60).toFixed(2),Sat:+(compare.sat.timeSlots.flatMap(s=>s.activities||[]).filter(a=>categoryMap[a.activityId]===name).reduce((sum,a)=>sum+a.duration,0)/60).toFixed(2)})),margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"Wed\",name:\"Mi\\xE9rcoles\",fill:\"#8884d8\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"Sat\",name:\"S\\xE1bado\",fill:\"#82ca9d\"})]})})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"D\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selected||'',onChange:e=>setSelected(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"N\\xFAmero de actividades distintas realizadas.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"% de franjas ocupadas (de 24 posibles).\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"charts-grid\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.hours,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#8884d8\"})]})})]})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ALL_CATEGORIES","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selected","setSelected","metrics","setMetrics","compare","setCompare","wed","sat","token","localStorage","getItem","get","headers","then","_ref","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","f","t","setHours","filt","filter","r","d","createdAt","find","day","res","slots","timeSlots","acts","flatMap","s","activities","totalMin","reduce","sum","a","duration","diversity","Set","map","activityId","size","occupied","_s$activities","length","consistency","toFixed","catSum","forEach","c","cat","hours","name","className","children","act","i","title","width","height","Wed","Sat","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","type","value","onChange","e","target","toLocaleDateString"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["// src/components/PatientRoutines.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\nconst ALL_CATEGORIES = [\r\n  'cuidado personal',\r\n  'actividades escolares',\r\n  'juego y tiempo libre',\r\n  'participación comunitaria',\r\n  'descanso y sueño'\r\n];\r\n\r\nconst categoryMap = {\r\n  futbol: 'juego y tiempo libre',\r\n  dibujos: 'juego y tiempo libre',\r\n  comics: 'juego y tiempo libre',\r\n  tarea: 'actividades escolares',\r\n  videojuegos: 'juego y tiempo libre',\r\n  helado: 'juego y tiempo libre',\r\n  parque: 'participación comunitaria',\r\n  banio: 'cuidado personal',\r\n  dormir: 'descanso y sueño',\r\n  musica: 'juego y tiempo libre',\r\n  bailar: 'juego y tiempo libre',\r\n  amigos: 'participación comunitaria',\r\n  bicicleta: 'juego y tiempo libre',\r\n  dibujar: 'juego y tiempo libre',\r\n  mascotas: 'juego y tiempo libre',\r\n  experimentos: 'actividades escolares',\r\n  cantar: 'juego y tiempo libre',\r\n  lego: 'juego y tiempo libre',\r\n  nadar: 'cuidado personal',\r\n  computadora: 'juego y tiempo libre'\r\n};\r\n\r\nexport default function PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [compare, setCompare] = useState({ wed: null, sat: null });\r\n\r\n  // 1) Cargar todos los resultados\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    }).then(({ data }) => {\r\n      setResults(data);\r\n      // rango por defecto última semana\r\n      const now = new Date();\r\n      const weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    }).catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // 2) Filtrar por rango y cargar comparativa Wed/Sat\r\n  useEffect(() => {\r\n    // filtrar por fechas\r\n    if (from && to) {\r\n      const f = new Date(from), t = new Date(to);\r\n      t.setHours(23,59,59,999);\r\n      const filt = results.filter(r => {\r\n        const d = new Date(r.createdAt);\r\n        return d>=f && d<=t;\r\n      });\r\n      setFiltered(filt);\r\n    }\r\n    // comparar Miércoles vs Sábado\r\n    const wed = results.find(r => r.day === 'Miércoles');\r\n    const sat = results.find(r => r.day === 'Sábado');\r\n    setCompare({ wed, sat });\r\n  }, [results, from, to]);\r\n\r\n  // 3) Calcular métricas del día seleccionado\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    const res = filtered.find(r => r.createdAt === selected);\r\n    if (!res) return;\r\n    const slots = res.timeSlots || [];\r\n    const acts = slots.flatMap(s => s.activities || []);\r\n    const totalMin = acts.reduce((sum,a) => sum + a.duration, 0) || 1;\r\n\r\n    // Diversidad\r\n    const diversity = new Set(acts.map(a=>a.activityId)).size;\r\n\r\n    // Consistencia\r\n    const occupied = slots.filter(s=>s.activities?.length>0).length;\r\n    const consistency = +((occupied/24*100).toFixed(1));\r\n\r\n    // Horas por categoría\r\n    const catSum = {};\r\n    ALL_CATEGORIES.forEach(c=>catSum[c]=0);\r\n    acts.forEach(a => {\r\n      const cat = categoryMap[a.activityId];\r\n      if (cat) catSum[cat] += a.duration;\r\n    });\r\n    const hours = ALL_CATEGORIES.map(name=>({\r\n      name, hours: +(catSum[name]/60).toFixed(2)\r\n    }));\r\n\r\n    setMetrics({ diversity, consistency, hours });\r\n  }, [selected, filtered]);\r\n\r\n  // 4) Render\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      {/* Comparativa Miércoles vs Sábado */}\r\n      <section className=\"charts-grid\">\r\n        {!compare.wed && (\r\n          <p>No hay registro para Miércoles.</p>\r\n        )}\r\n        {!compare.sat && (\r\n          <p>No hay registro para Sábado.</p>\r\n        )}\r\n        {compare.wed && compare.sat && (\r\n          <>\r\n            <div className=\"chart-block\">\r\n              <h3>Actividades Miércoles</h3>\r\n              <p className=\"chart-description\">\r\n                Lista de actividades y duración para Miércoles.\r\n              </p>\r\n              <ul>\r\n                {compare.wed.timeSlots.flatMap(s=>s.activities||[])\r\n                  .map((act,i)=>(\r\n                    <li key={i}>⚙️ {act.title} – {act.duration} min</li>\r\n                  ))}\r\n              </ul>\r\n            </div>\r\n            <div className=\"chart-block\">\r\n              <h3>Actividades Sábado</h3>\r\n              <p className=\"chart-description\">\r\n                Lista de actividades y duración para Sábado.\r\n              </p>\r\n              <ul>\r\n                {compare.sat.timeSlots.flatMap(s=>s.activities||[])\r\n                  .map((act,i)=>(\r\n                    <li key={i}>⚙️ {act.title} – {act.duration} min</li>\r\n                  ))}\r\n              </ul>\r\n            </div>\r\n            <div className=\"chart-block full-width\">\r\n              <h3>Horas por Categoría</h3>\r\n              <p className=\"chart-description\">\r\n                Comparativa de horas invertidas por categoría en Miércoles vs Sábado.\r\n              </p>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart\r\n                  data={ALL_CATEGORIES.map(name=>({\r\n                    name,\r\n                    Wed: +(\r\n                      (compare.wed.timeSlots.flatMap(s=>s.activities||[])\r\n                        .filter(a=>categoryMap[a.activityId]===name)\r\n                        .reduce((sum,a)=>sum+a.duration,0)/60\r\n                      ).toFixed(2)\r\n                    ),\r\n                    Sat: +(\r\n                      (compare.sat.timeSlots.flatMap(s=>s.activities||[])\r\n                        .filter(a=>categoryMap[a.activityId]===name)\r\n                        .reduce((sum,a)=>sum+a.duration,0)/60\r\n                      ).toFixed(2)\r\n                    )\r\n                  }))}\r\n                  margin={{ top:20,right:30,left:0,bottom:0 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"Wed\" name=\"Miércoles\" fill=\"#8884d8\" />\r\n                  <Bar dataKey=\"Sat\" name=\"Sábado\"    fill=\"#82ca9d\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n\r\n      {/* Filtros y métricas individuales */}\r\n      <section className=\"filter-section\">\r\n        <label>Desde:<input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} /></label>\r\n        <label>Hasta:<input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} /></label>\r\n        <label>Día:\r\n          <select value={selected||''} onChange={e=>setSelected(e.target.value)}>\r\n            {filtered.map(r => {\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {metrics && (\r\n        <>\r\n          <div className=\"metrics-grid\">\r\n            <div className=\"metric-card\">\r\n              Diversidad: <strong>{metrics.diversity}</strong>\r\n              <i\r\n                className=\"fa fa-info-circle info-icon\"\r\n                title=\"Número de actividades distintas realizadas.\"\r\n              ></i>\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              Consistencia: <strong>{metrics.consistency}%</strong>\r\n              <i\r\n                className=\"fa fa-info-circle info-icon\"\r\n                title=\"% de franjas ocupadas (de 24 posibles).\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"charts-grid\">\r\n            <div className=\"chart-block\">\r\n              <h3>Horas por Categoría</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart data={metrics.hours} margin={{ top:20,right:30,left:0,bottom:0 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Bar dataKey=\"hours\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}