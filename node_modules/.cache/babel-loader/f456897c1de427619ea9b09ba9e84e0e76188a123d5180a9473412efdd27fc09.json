{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import axios from'axios';import{Pie,Line,Bar}from'react-chartjs-2';import{Chart,registerables}from'chart.js';import'./therapistRoutines.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(...registerables);function stdDev(arr){const mean=arr.reduce((a,b)=>a+b,0)/arr.length;const variance=arr.reduce((a,b)=>a+(b-mean)**2,0)/arr.length;return Math.sqrt(variance);}export default function TherapistRoutines(){const[results,setResults]=useState([]);const patientId=useMemo(()=>{const qp=new URLSearchParams(window.location.search);return qp.get('patientId');},[]);useEffect(()=>{if(!patientId)return;axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':localStorage.getItem('token')}}).then(res=>setResults(res.data)).catch(console.error);},[patientId]);// --- Procesado de métricas ---\n// 1) Totales diarios (en horas)\nconst dailyTotals=useMemo(()=>{return results.map(r=>{const totalMin=r.timeSlots.reduce((sum,slot)=>sum+slot.activities.reduce((s2,a)=>s2+a.duration,0),0);return{date:new Date(r.createdAt),hours:totalMin/60};});},[results]);// 2) Tendencia temporal (line chart)\nconst lineData=useMemo(()=>({labels:dailyTotals.map(d=>d.date.toLocaleDateString()),datasets:[{label:'Horas planificadas',data:dailyTotals.map(d=>d.hours),tension:0.3}]}),[dailyTotals]);// 3) Distribución por actividad (pie chart)\nconst activityTotals=useMemo(()=>{const map={};results.forEach(r=>r.timeSlots.forEach(slot=>slot.activities.forEach(a=>{map[a.title]=(map[a.title]||0)+a.duration;})));return Object.entries(map).map(_ref=>{let[title,min]=_ref;return{title,hours:min/60};});},[results]);const pieData=useMemo(()=>({labels:activityTotals.map(a=>a.title),datasets:[{data:activityTotals.map(a=>a.hours),hoverOffset:10}]}),[activityTotals]);// 4) Diversidad de actividades\nconst diversity=useMemo(()=>{const setAct=new Set();results.forEach(r=>r.timeSlots.forEach(slot=>slot.activities.forEach(a=>setAct.add(a.activityId))));return setAct.size;},[results]);// 5) Consistencia diaria (std dev de horas)\nconst consistency=useMemo(()=>{if(dailyTotals.length<2)return 0;return stdDev(dailyTotals.map(d=>d.hours)).toFixed(2);},[dailyTotals]);// 6) Completitud de slots (slots ocupados / 24) promedio\nconst coverage=useMemo(()=>{if(!results.length)return 0;const ratios=results.map(r=>{const occupied=r.timeSlots.filter(s=>s.activities.length>0).length;return occupied/24;});const avg=ratios.reduce((a,b)=>a+b,0)/ratios.length;return(avg*100).toFixed(0);},[results]);// 7) Tiempo medio por actividad (tabla / bar chart)\nconst meanPerActivity=useMemo(()=>{return activityTotals.map(a=>({title:a.title,mean:(a.hours/dailyTotals.length).toFixed(2)}));},[activityTotals,dailyTotals]);const barMeanData=useMemo(()=>({labels:meanPerActivity.map(a=>a.title),datasets:[{label:'Horas promedio/día',data:meanPerActivity.map(a=>a.mean),barPercentage:0.5}]}),[meanPerActivity]);// --- Render ---\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Rutinas del paciente\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Actividades distintas\"}),/*#__PURE__*/_jsx(\"p\",{children:diversity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Desviaci\\xF3n est\\xE1ndar (h/d\\xEDa)\"}),/*#__PURE__*/_jsx(\"p\",{children:consistency})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Cobertura slots (%)\"}),/*#__PURE__*/_jsxs(\"p\",{children:[coverage,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Tendencia horas planeadas\"}),/*#__PURE__*/_jsx(Line,{data:lineData})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Distribuci\\xF3n por actividad\"}),/*#__PURE__*/_jsx(Pie,{data:pieData})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"charts-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-card full-width\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Tiempo medio por actividad\"}),/*#__PURE__*/_jsx(Bar,{data:barMeanData})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Resumen tiempo medio por actividad\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Actividad\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Horas promedio/d\\xEDa\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:meanPerActivity.map(a=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:a.title}),/*#__PURE__*/_jsx(\"td\",{children:a.mean})]},a.title))})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","Pie","Line","Bar","Chart","registerables","jsx","_jsx","jsxs","_jsxs","register","stdDev","arr","mean","reduce","a","b","length","variance","Math","sqrt","TherapistRoutines","results","setResults","patientId","qp","URLSearchParams","window","location","search","get","headers","localStorage","getItem","then","res","data","catch","console","error","dailyTotals","map","r","totalMin","timeSlots","sum","slot","activities","s2","duration","date","Date","createdAt","hours","lineData","labels","d","toLocaleDateString","datasets","label","tension","activityTotals","forEach","title","Object","entries","_ref","min","pieData","hoverOffset","diversity","setAct","Set","add","activityId","size","consistency","toFixed","coverage","ratios","occupied","filter","s","avg","meanPerActivity","barMeanData","barPercentage","className","children"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie, Line, Bar } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport './therapistRoutines.css';\r\n\r\nChart.register(...registerables);\r\n\r\nfunction stdDev(arr) {\r\n  const mean = arr.reduce((a, b) => a + b, 0) / arr.length;\r\n  const variance = arr.reduce((a, b) => a + (b - mean) ** 2, 0) / arr.length;\r\n  return Math.sqrt(variance);\r\n}\r\n\r\nexport default function TherapistRoutines() {\r\n  const [results, setResults] = useState([]);\r\n  const patientId = useMemo(() => {\r\n    const qp = new URLSearchParams(window.location.search);\r\n    return qp.get('patientId');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!patientId) return;\r\n    axios\r\n      .get(`/api/game?patientId=${patientId}`, {\r\n        headers: { 'x-auth-token': localStorage.getItem('token') }\r\n      })\r\n      .then(res => setResults(res.data))\r\n      .catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // --- Procesado de métricas ---\r\n  // 1) Totales diarios (en horas)\r\n  const dailyTotals = useMemo(() => {\r\n    return results.map(r => {\r\n      const totalMin = r.timeSlots.reduce(\r\n        (sum, slot) =>\r\n          sum + slot.activities.reduce((s2, a) => s2 + a.duration, 0),\r\n        0\r\n      );\r\n      return { date: new Date(r.createdAt), hours: totalMin / 60 };\r\n    });\r\n  }, [results]);\r\n\r\n  // 2) Tendencia temporal (line chart)\r\n  const lineData = useMemo(() => ({\r\n    labels: dailyTotals.map(d => d.date.toLocaleDateString()),\r\n    datasets: [{\r\n      label: 'Horas planificadas',\r\n      data: dailyTotals.map(d => d.hours),\r\n      tension: 0.3,\r\n    }]\r\n  }), [dailyTotals]);\r\n\r\n  // 3) Distribución por actividad (pie chart)\r\n  const activityTotals = useMemo(() => {\r\n    const map = {};\r\n    results.forEach(r =>\r\n      r.timeSlots.forEach(slot =>\r\n        slot.activities.forEach(a => {\r\n          map[a.title] = (map[a.title] || 0) + a.duration;\r\n        })\r\n      )\r\n    );\r\n    return Object.entries(map).map(([title, min]) => ({ title, hours: min / 60 }));\r\n  }, [results]);\r\n\r\n  const pieData = useMemo(() => ({\r\n    labels: activityTotals.map(a => a.title),\r\n    datasets: [{\r\n      data: activityTotals.map(a => a.hours),\r\n      hoverOffset: 10\r\n    }]\r\n  }), [activityTotals]);\r\n\r\n  // 4) Diversidad de actividades\r\n  const diversity = useMemo(() => {\r\n    const setAct = new Set();\r\n    results.forEach(r =>\r\n      r.timeSlots.forEach(slot =>\r\n        slot.activities.forEach(a => setAct.add(a.activityId))\r\n      )\r\n    );\r\n    return setAct.size;\r\n  }, [results]);\r\n\r\n  // 5) Consistencia diaria (std dev de horas)\r\n  const consistency = useMemo(() => {\r\n    if (dailyTotals.length < 2) return 0;\r\n    return stdDev(dailyTotals.map(d => d.hours)).toFixed(2);\r\n  }, [dailyTotals]);\r\n\r\n  // 6) Completitud de slots (slots ocupados / 24) promedio\r\n  const coverage = useMemo(() => {\r\n    if (!results.length) return 0;\r\n    const ratios = results.map(r => {\r\n      const occupied = r.timeSlots.filter(s => s.activities.length > 0).length;\r\n      return occupied / 24;\r\n    });\r\n    const avg = ratios.reduce((a, b) => a + b, 0) / ratios.length;\r\n    return (avg * 100).toFixed(0);\r\n  }, [results]);\r\n\r\n  // 7) Tiempo medio por actividad (tabla / bar chart)\r\n  const meanPerActivity = useMemo(() => {\r\n    return activityTotals.map(a => ({\r\n      title: a.title,\r\n      mean: (a.hours / dailyTotals.length).toFixed(2)\r\n    }));\r\n  }, [activityTotals, dailyTotals]);\r\n\r\n  const barMeanData = useMemo(() => ({\r\n    labels: meanPerActivity.map(a => a.title),\r\n    datasets: [{\r\n      label: 'Horas promedio/día',\r\n      data: meanPerActivity.map(a => a.mean),\r\n      barPercentage: 0.5\r\n    }]\r\n  }), [meanPerActivity]);\r\n\r\n  // --- Render ---\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <h1>Rutinas del paciente</h1>\r\n      <div className=\"kpi-row\">\r\n        <div className=\"kpi-card\">\r\n          <h3>Actividades distintas</h3>\r\n          <p>{diversity}</p>\r\n        </div>\r\n        <div className=\"kpi-card\">\r\n          <h3>Desviación estándar (h/día)</h3>\r\n          <p>{consistency}</p>\r\n        </div>\r\n        <div className=\"kpi-card\">\r\n          <h3>Cobertura slots (%)</h3>\r\n          <p>{coverage}%</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"charts-row\">\r\n        <div className=\"chart-card\">\r\n          <h4>Tendencia horas planeadas</h4>\r\n          <Line data={lineData} />\r\n        </div>\r\n        <div className=\"chart-card\">\r\n          <h4>Distribución por actividad</h4>\r\n          <Pie data={pieData} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"charts-row\">\r\n        <div className=\"chart-card full-width\">\r\n          <h4>Tiempo medio por actividad</h4>\r\n          <Bar data={barMeanData} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table-section\">\r\n        <h4>Resumen tiempo medio por actividad</h4>\r\n        <table>\r\n          <thead>\r\n            <tr><th>Actividad</th><th>Horas promedio/día</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {meanPerActivity.map(a => (\r\n              <tr key={a.title}>\r\n                <td>{a.title}</td>\r\n                <td>{a.mean}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,KAAQ,OAAO,CAC3D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,IAAI,CAAEC,GAAG,KAAQ,iBAAiB,CAChD,OAASC,KAAK,CAAEC,aAAa,KAAQ,UAAU,CAC/C,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjCL,KAAK,CAACM,QAAQ,CAAC,GAAGL,aAAa,CAAC,CAEhC,QAAS,CAAAM,MAAMA,CAACC,GAAG,CAAE,CACnB,KAAM,CAAAC,IAAI,CAAGD,GAAG,CAACE,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAE,CAAC,CAAC,CAAGJ,GAAG,CAACK,MAAM,CACxD,KAAM,CAAAC,QAAQ,CAAGN,GAAG,CAACE,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAG,CAACC,CAAC,CAAGH,IAAI,GAAK,CAAC,CAAE,CAAC,CAAC,CAAGD,GAAG,CAACK,MAAM,CAC1E,MAAO,CAAAE,IAAI,CAACC,IAAI,CAACF,QAAQ,CAAC,CAC5B,CAEA,cAAe,SAAS,CAAAG,iBAAiBA,CAAA,CAAG,CAC1C,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAA2B,SAAS,CAAGzB,OAAO,CAAC,IAAM,CAC9B,KAAM,CAAA0B,EAAE,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CACtD,MAAO,CAAAJ,EAAE,CAACK,GAAG,CAAC,WAAW,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAENhC,SAAS,CAAC,IAAM,CACd,GAAI,CAAC0B,SAAS,CAAE,OAChBxB,KAAK,CACF8B,GAAG,CAAC,uBAAuBN,SAAS,EAAE,CAAE,CACvCO,OAAO,CAAE,CAAE,cAAc,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,CAC3D,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,EAAIZ,UAAU,CAACY,GAAG,CAACC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CACzB,CAAC,CAAE,CAACf,SAAS,CAAC,CAAC,CAEf;AACA;AACA,KAAM,CAAAgB,WAAW,CAAGzC,OAAO,CAAC,IAAM,CAChC,MAAO,CAAAuB,OAAO,CAACmB,GAAG,CAACC,CAAC,EAAI,CACtB,KAAM,CAAAC,QAAQ,CAAGD,CAAC,CAACE,SAAS,CAAC9B,MAAM,CACjC,CAAC+B,GAAG,CAAEC,IAAI,GACRD,GAAG,CAAGC,IAAI,CAACC,UAAU,CAACjC,MAAM,CAAC,CAACkC,EAAE,CAAEjC,CAAC,GAAKiC,EAAE,CAAGjC,CAAC,CAACkC,QAAQ,CAAE,CAAC,CAAC,CAC7D,CACF,CAAC,CACD,MAAO,CAAEC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAACT,CAAC,CAACU,SAAS,CAAC,CAAEC,KAAK,CAAEV,QAAQ,CAAG,EAAG,CAAC,CAC9D,CAAC,CAAC,CACJ,CAAC,CAAE,CAACrB,OAAO,CAAC,CAAC,CAEb;AACA,KAAM,CAAAgC,QAAQ,CAAGvD,OAAO,CAAC,KAAO,CAC9BwD,MAAM,CAAEf,WAAW,CAACC,GAAG,CAACe,CAAC,EAAIA,CAAC,CAACN,IAAI,CAACO,kBAAkB,CAAC,CAAC,CAAC,CACzDC,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAE,oBAAoB,CAC3BvB,IAAI,CAAEI,WAAW,CAACC,GAAG,CAACe,CAAC,EAAIA,CAAC,CAACH,KAAK,CAAC,CACnCO,OAAO,CAAE,GACX,CAAC,CACH,CAAC,CAAC,CAAE,CAACpB,WAAW,CAAC,CAAC,CAElB;AACA,KAAM,CAAAqB,cAAc,CAAG9D,OAAO,CAAC,IAAM,CACnC,KAAM,CAAA0C,GAAG,CAAG,CAAC,CAAC,CACdnB,OAAO,CAACwC,OAAO,CAACpB,CAAC,EACfA,CAAC,CAACE,SAAS,CAACkB,OAAO,CAAChB,IAAI,EACtBA,IAAI,CAACC,UAAU,CAACe,OAAO,CAAC/C,CAAC,EAAI,CAC3B0B,GAAG,CAAC1B,CAAC,CAACgD,KAAK,CAAC,CAAG,CAACtB,GAAG,CAAC1B,CAAC,CAACgD,KAAK,CAAC,EAAI,CAAC,EAAIhD,CAAC,CAACkC,QAAQ,CACjD,CAAC,CACH,CACF,CAAC,CACD,MAAO,CAAAe,MAAM,CAACC,OAAO,CAACxB,GAAG,CAAC,CAACA,GAAG,CAACyB,IAAA,MAAC,CAACH,KAAK,CAAEI,GAAG,CAAC,CAAAD,IAAA,OAAM,CAAEH,KAAK,CAAEV,KAAK,CAAEc,GAAG,CAAG,EAAG,CAAC,EAAC,CAAC,CAChF,CAAC,CAAE,CAAC7C,OAAO,CAAC,CAAC,CAEb,KAAM,CAAA8C,OAAO,CAAGrE,OAAO,CAAC,KAAO,CAC7BwD,MAAM,CAAEM,cAAc,CAACpB,GAAG,CAAC1B,CAAC,EAAIA,CAAC,CAACgD,KAAK,CAAC,CACxCL,QAAQ,CAAE,CAAC,CACTtB,IAAI,CAAEyB,cAAc,CAACpB,GAAG,CAAC1B,CAAC,EAAIA,CAAC,CAACsC,KAAK,CAAC,CACtCgB,WAAW,CAAE,EACf,CAAC,CACH,CAAC,CAAC,CAAE,CAACR,cAAc,CAAC,CAAC,CAErB;AACA,KAAM,CAAAS,SAAS,CAAGvE,OAAO,CAAC,IAAM,CAC9B,KAAM,CAAAwE,MAAM,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACxBlD,OAAO,CAACwC,OAAO,CAACpB,CAAC,EACfA,CAAC,CAACE,SAAS,CAACkB,OAAO,CAAChB,IAAI,EACtBA,IAAI,CAACC,UAAU,CAACe,OAAO,CAAC/C,CAAC,EAAIwD,MAAM,CAACE,GAAG,CAAC1D,CAAC,CAAC2D,UAAU,CAAC,CACvD,CACF,CAAC,CACD,MAAO,CAAAH,MAAM,CAACI,IAAI,CACpB,CAAC,CAAE,CAACrD,OAAO,CAAC,CAAC,CAEb;AACA,KAAM,CAAAsD,WAAW,CAAG7E,OAAO,CAAC,IAAM,CAChC,GAAIyC,WAAW,CAACvB,MAAM,CAAG,CAAC,CAAE,MAAO,EAAC,CACpC,MAAO,CAAAN,MAAM,CAAC6B,WAAW,CAACC,GAAG,CAACe,CAAC,EAAIA,CAAC,CAACH,KAAK,CAAC,CAAC,CAACwB,OAAO,CAAC,CAAC,CAAC,CACzD,CAAC,CAAE,CAACrC,WAAW,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAsC,QAAQ,CAAG/E,OAAO,CAAC,IAAM,CAC7B,GAAI,CAACuB,OAAO,CAACL,MAAM,CAAE,MAAO,EAAC,CAC7B,KAAM,CAAA8D,MAAM,CAAGzD,OAAO,CAACmB,GAAG,CAACC,CAAC,EAAI,CAC9B,KAAM,CAAAsC,QAAQ,CAAGtC,CAAC,CAACE,SAAS,CAACqC,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACnC,UAAU,CAAC9B,MAAM,CAAG,CAAC,CAAC,CAACA,MAAM,CACxE,MAAO,CAAA+D,QAAQ,CAAG,EAAE,CACtB,CAAC,CAAC,CACF,KAAM,CAAAG,GAAG,CAAGJ,MAAM,CAACjE,MAAM,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAE,CAAC,CAAC,CAAG+D,MAAM,CAAC9D,MAAM,CAC7D,MAAO,CAACkE,GAAG,CAAG,GAAG,EAAEN,OAAO,CAAC,CAAC,CAAC,CAC/B,CAAC,CAAE,CAACvD,OAAO,CAAC,CAAC,CAEb;AACA,KAAM,CAAA8D,eAAe,CAAGrF,OAAO,CAAC,IAAM,CACpC,MAAO,CAAA8D,cAAc,CAACpB,GAAG,CAAC1B,CAAC,GAAK,CAC9BgD,KAAK,CAAEhD,CAAC,CAACgD,KAAK,CACdlD,IAAI,CAAE,CAACE,CAAC,CAACsC,KAAK,CAAGb,WAAW,CAACvB,MAAM,EAAE4D,OAAO,CAAC,CAAC,CAChD,CAAC,CAAC,CAAC,CACL,CAAC,CAAE,CAAChB,cAAc,CAAErB,WAAW,CAAC,CAAC,CAEjC,KAAM,CAAA6C,WAAW,CAAGtF,OAAO,CAAC,KAAO,CACjCwD,MAAM,CAAE6B,eAAe,CAAC3C,GAAG,CAAC1B,CAAC,EAAIA,CAAC,CAACgD,KAAK,CAAC,CACzCL,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAE,oBAAoB,CAC3BvB,IAAI,CAAEgD,eAAe,CAAC3C,GAAG,CAAC1B,CAAC,EAAIA,CAAC,CAACF,IAAI,CAAC,CACtCyE,aAAa,CAAE,GACjB,CAAC,CACH,CAAC,CAAC,CAAE,CAACF,eAAe,CAAC,CAAC,CAEtB;AACA,mBACE3E,KAAA,QAAK8E,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCjF,IAAA,OAAAiF,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7B/E,KAAA,QAAK8E,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtB/E,KAAA,QAAK8E,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,IAAA,OAAAiF,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BjF,IAAA,MAAAiF,QAAA,CAAIlB,SAAS,CAAI,CAAC,EACf,CAAC,cACN7D,KAAA,QAAK8E,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,IAAA,OAAAiF,QAAA,CAAI,sCAA2B,CAAI,CAAC,cACpCjF,IAAA,MAAAiF,QAAA,CAAIZ,WAAW,CAAI,CAAC,EACjB,CAAC,cACNnE,KAAA,QAAK8E,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBjF,IAAA,OAAAiF,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5B/E,KAAA,MAAA+E,QAAA,EAAIV,QAAQ,CAAC,GAAC,EAAG,CAAC,EACf,CAAC,EACH,CAAC,cAENrE,KAAA,QAAK8E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB/E,KAAA,QAAK8E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBjF,IAAA,OAAAiF,QAAA,CAAI,2BAAyB,CAAI,CAAC,cAClCjF,IAAA,CAACL,IAAI,EAACkC,IAAI,CAAEkB,QAAS,CAAE,CAAC,EACrB,CAAC,cACN7C,KAAA,QAAK8E,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBjF,IAAA,OAAAiF,QAAA,CAAI,+BAA0B,CAAI,CAAC,cACnCjF,IAAA,CAACN,GAAG,EAACmC,IAAI,CAAEgC,OAAQ,CAAE,CAAC,EACnB,CAAC,EACH,CAAC,cAEN7D,IAAA,QAAKgF,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB/E,KAAA,QAAK8E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCjF,IAAA,OAAAiF,QAAA,CAAI,4BAA0B,CAAI,CAAC,cACnCjF,IAAA,CAACJ,GAAG,EAACiC,IAAI,CAAEiD,WAAY,CAAE,CAAC,EACvB,CAAC,CACH,CAAC,cAEN5E,KAAA,QAAK8E,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BjF,IAAA,OAAAiF,QAAA,CAAI,oCAAkC,CAAI,CAAC,cAC3C/E,KAAA,UAAA+E,QAAA,eACEjF,IAAA,UAAAiF,QAAA,cACE/E,KAAA,OAAA+E,QAAA,eAAIjF,IAAA,OAAAiF,QAAA,CAAI,WAAS,CAAI,CAAC,cAAAjF,IAAA,OAAAiF,QAAA,CAAI,uBAAkB,CAAI,CAAC,EAAI,CAAC,CACjD,CAAC,cACRjF,IAAA,UAAAiF,QAAA,CACGJ,eAAe,CAAC3C,GAAG,CAAC1B,CAAC,eACpBN,KAAA,OAAA+E,QAAA,eACEjF,IAAA,OAAAiF,QAAA,CAAKzE,CAAC,CAACgD,KAAK,CAAK,CAAC,cAClBxD,IAAA,OAAAiF,QAAA,CAAKzE,CAAC,CAACF,IAAI,CAAK,CAAC,GAFVE,CAAC,CAACgD,KAGP,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}