{"ast":null,"code":"// src/pages/RoutineTemplatesPage.js\nimport React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import'../styles/routineTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function RoutineTemplatesPage(){const[templates,setTemplates]=useState([]);const[patients,setPatients]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();// Leer token desde LocalStorage\nconst token=localStorage.getItem('token');const headers={'Content-Type':'application/json','x-auth-token':token};// Fetch inicial de plantillas y pacientes\nuseEffect(()=>{if(!token){navigate('/login');return;}Promise.all([fetch('/api/routines/templates',{headers}),// CORRECCIÓN: ruta coincide con server.js\nfetch('/api/therapist/patients',{headers})// CORRECCIÓN: ruta de pacientes protegida\n]).then(async _ref=>{let[rTpl,rPat]=_ref;if(rTpl.status===401||rPat.status===401){alert('Sesión expirada. Por favor, inicia sesión de nuevo.');navigate('/login');return;}const dataTpl=await rTpl.json();const dataPat=await rPat.json();if(!Array.isArray(dataTpl)||!Array.isArray(dataPat)){throw new Error('Respuesta inesperada del servidor');}setTemplates(dataTpl);setPatients(dataPat);}).catch(err=>{console.error('Error cargando datos:',err);setError(err.message);}).finally(()=>setLoading(false));},[navigate,token]);// Drag start: guardamos tipo y payload\nconst onDragStart=(e,item,type)=>{e.dataTransfer.setData('application/json',JSON.stringify({type,item}));e.dataTransfer.effectAllowed='copyMove';};// Manejo de drops (eliminar, duplicar, asignar)\nconst handleDrop=useCallback((e,zone)=>{e.preventDefault();const{type,item}=JSON.parse(e.dataTransfer.getData('application/json'));// Eliminar plantilla\nif(zone==='trash'&&type==='template'){setTemplates(ts=>ts.filter(t=>t._id!==item._id));fetch(`/api/routines/templates/${item._id}`,{method:'DELETE',headers}).catch(console.error);}// Duplicar plantilla\nelse if(zone==='duplicate'&&type==='template'){fetch('/api/routines/templates',{method:'POST',headers,body:JSON.stringify({...item,name:item.name+' (copia)'})}).then(res=>res.json()).then(newTpl=>setTemplates(ts=>[newTpl,...ts])).catch(console.error);}// Asignar a paciente\nelse if(zone.startsWith('assign-')&&type==='template'){const patientId=zone.split('-')[1];fetch(`/api/patients/${patientId}/assignTemplate`,{method:'POST',headers,body:JSON.stringify({templateId:item._id})}).then(()=>{var _patients$find;return alert(`Plantilla «${item.name}» asignada a ${(_patients$find=patients.find(p=>p._id===patientId))===null||_patients$find===void 0?void 0:_patients$find.nombre}`);}).catch(console.error);}},[patients,token]);const allowDrop=e=>e.preventDefault();if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando\\u2026\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[\"Error: \",error]});}return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-new\",onClick:()=>navigate('/therapist/templates/new'),children:\"\\uD83D\\uDCC4 Nueva plantilla\"})]}),templates.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"\\uD83E\\uDD14 A\\xFAn no se han creado plantillas\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:templates.map(t=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",draggable:true,onDragStart:e=>onDragStart(e,t,'template'),children:[/*#__PURE__*/_jsx(\"h2\",{children:t.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:t.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[t.activities.length,\" actividades\"]})]},t._id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropzones\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropzone trash\",onDragOver:allowDrop,onDrop:e=>handleDrop(e,'trash'),children:\"\\uD83D\\uDDD1\\uFE0F Eliminar plantilla\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dropzone duplicate\",onDragOver:allowDrop,onDrop:e=>handleDrop(e,'duplicate'),children:\"\\uD83D\\uDCCB Duplicar plantilla\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Pacientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:patients.map(p=>/*#__PURE__*/_jsxs(\"div\",{className:\"patient-card\",onDragOver:allowDrop,onDrop:e=>handleDrop(e,`assign-${p._id}`),children:[/*#__PURE__*/_jsx(\"img\",{src:p.avatar,alt:p.nombre,className:\"avatar-small\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[p.nombre,\" \",p.apellidos]}),/*#__PURE__*/_jsx(\"div\",{className:\"patient-email\",children:p.email})]})]},p._id))})]})});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","jsx","_jsx","jsxs","_jsxs","RoutineTemplatesPage","templates","setTemplates","patients","setPatients","loading","setLoading","error","setError","navigate","token","localStorage","getItem","headers","Promise","all","fetch","then","_ref","rTpl","rPat","status","alert","dataTpl","json","dataPat","Array","isArray","Error","catch","err","console","message","finally","onDragStart","e","item","type","dataTransfer","setData","JSON","stringify","effectAllowed","handleDrop","zone","preventDefault","parse","getData","ts","filter","t","_id","method","body","name","res","newTpl","startsWith","patientId","split","templateId","_patients$find","find","p","nombre","allowDrop","className","children","onClick","length","map","draggable","description","activities","onDragOver","onDrop","src","avatar","alt","apellidos","email"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TherapistTemplates.js"],"sourcesContent":["// src/pages/RoutineTemplatesPage.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/routineTemplates.css';\r\n\r\nexport default function RoutineTemplatesPage() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [patients, setPatients]   = useState([]);\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Leer token desde LocalStorage\r\n  const token = localStorage.getItem('token');\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': token\r\n  };\r\n\r\n  // Fetch inicial de plantillas y pacientes\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    Promise.all([\r\n      fetch('/api/routines/templates', { headers }),        // CORRECCIÓN: ruta coincide con server.js\r\n      fetch('/api/therapist/patients', { headers })          // CORRECCIÓN: ruta de pacientes protegida\r\n    ])\r\n      .then(async ([rTpl, rPat]) => {\r\n        if (rTpl.status === 401 || rPat.status === 401) {\r\n          alert('Sesión expirada. Por favor, inicia sesión de nuevo.');\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        const dataTpl = await rTpl.json();\r\n        const dataPat = await rPat.json();\r\n        if (!Array.isArray(dataTpl) || !Array.isArray(dataPat)) {\r\n          throw new Error('Respuesta inesperada del servidor');\r\n        }\r\n        setTemplates(dataTpl);\r\n        setPatients(dataPat);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error cargando datos:', err);\r\n        setError(err.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [navigate, token]);\r\n\r\n  // Drag start: guardamos tipo y payload\r\n  const onDragStart = (e, item, type) => {\r\n    e.dataTransfer.setData('application/json', JSON.stringify({ type, item }));\r\n    e.dataTransfer.effectAllowed = 'copyMove';\r\n  };\r\n\r\n  // Manejo de drops (eliminar, duplicar, asignar)\r\n  const handleDrop = useCallback((e, zone) => {\r\n    e.preventDefault();\r\n    const { type, item } = JSON.parse(e.dataTransfer.getData('application/json'));\r\n\r\n    // Eliminar plantilla\r\n    if (zone === 'trash' && type === 'template') {\r\n      setTemplates(ts => ts.filter(t => t._id !== item._id));\r\n      fetch(`/api/routines/templates/${item._id}`, { method: 'DELETE', headers })\r\n        .catch(console.error);\r\n    }\r\n    // Duplicar plantilla\r\n    else if (zone === 'duplicate' && type === 'template') {\r\n      fetch('/api/routines/templates', {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({ ...item, name: item.name + ' (copia)' })\r\n      })\r\n        .then(res => res.json())\r\n        .then(newTpl => setTemplates(ts => [newTpl, ...ts]))\r\n        .catch(console.error);\r\n    }\r\n    // Asignar a paciente\r\n    else if (zone.startsWith('assign-') && type === 'template') {\r\n      const patientId = zone.split('-')[1];\r\n      fetch(`/api/patients/${patientId}/assignTemplate`, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({ templateId: item._id })\r\n      })\r\n        .then(() => alert(`Plantilla «${item.name}» asignada a ${patients.find(p=>p._id===patientId)?.nombre}`))\r\n        .catch(console.error);\r\n    }\r\n  }, [patients, token]);\r\n\r\n  const allowDrop = e => e.preventDefault();\r\n\r\n  if (loading) {\r\n    return <div className=\"tpl-container\">Cargando…</div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"tpl-container\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"routine-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas</h1>\r\n          <button className=\"btn-new\" onClick={() => navigate('/therapist/templates/new')}>\r\n            📄 Nueva plantilla\r\n          </button>\r\n        </div>\r\n\r\n        {templates.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            🤔 Aún no se han creado plantillas\r\n          </div>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {templates.map(t => (\r\n              <div\r\n                key={t._id}\r\n                className=\"tpl-card\"\r\n                draggable\r\n                onDragStart={e => onDragStart(e, t, 'template')}\r\n              >\r\n                <h2>{t.name}</h2>\r\n                <p className=\"tpl-desc\">{t.description}</p>\r\n                <div className=\"tpl-meta\">{t.activities.length} actividades</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"dropzones\">\r\n          <div\r\n            className=\"dropzone trash\"\r\n            onDragOver={allowDrop}\r\n            onDrop={e => handleDrop(e, 'trash')}\r\n          >\r\n            🗑️ Eliminar plantilla\r\n          </div>\r\n          <div\r\n            className=\"dropzone duplicate\"\r\n            onDragOver={allowDrop}\r\n            onDrop={e => handleDrop(e, 'duplicate')}\r\n          >\r\n            📋 Duplicar plantilla\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Pacientes</h3>\r\n        <div className=\"tpl-grid\">\r\n          {patients.map(p => (\r\n            <div\r\n              key={p._id}\r\n              className=\"patient-card\"\r\n              onDragOver={allowDrop}\r\n              onDrop={e => handleDrop(e, `assign-${p._id}`)}\r\n            >\r\n              <img src={p.avatar} alt={p.nombre} className=\"avatar-small\" />\r\n              <div>\r\n                <strong>{p.nombre} {p.apellidos}</strong>\r\n                <div className=\"patient-email\">{p.email}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}