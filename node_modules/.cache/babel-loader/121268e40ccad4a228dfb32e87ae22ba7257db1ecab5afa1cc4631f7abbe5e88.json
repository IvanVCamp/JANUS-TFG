{"ast":null,"code":"// src/pages/RoutineTemplatesPage.js\nimport React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import{FaTrash,FaEdit}from'react-icons/fa';import axios from'axios';import'../styles/routineTemplates.css';import'../styles/patientsList.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function RoutineTemplatesPage(){const[templates,setTemplates]=useState([]);const[patients,setPatients]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[modalTpl,setModalTpl]=useState(null);const[modalPatient,setModalPatient]=useState(null);const[modalInstance,setModalInstance]=useState(null);const[modalLoading,setModalLoading]=useState(false);const[modalError,setModalError]=useState(null);const navigate=useNavigate();const token=localStorage.getItem('token');const headers={'Content-Type':'application/json','x-auth-token':token};// Carga inicial de plantillas y pacientes\nuseEffect(()=>{const fetchAll=async()=>{if(!token){navigate('/login');setLoading(false);return;}try{const[tplRes,patRes]=await Promise.all([axios.get('/api/routines/templates',{headers}),axios.get('/api/therapist/patients',{headers})]);setTemplates(tplRes.data);setPatients(patRes.data);}catch(err){var _err$response,_err$response$data;console.error(err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||err.message);}finally{setLoading(false);}};fetchAll();},[navigate,token]);// Drag start para plantillas\nconst onDragStart=(e,item)=>{e.dataTransfer.setData('application/json',JSON.stringify({type:'template',item}));e.dataTransfer.effectAllowed='copyMove';};// Zona de drop para eliminar, duplicar o asignar\nconst handleDrop=useCallback((e,zone)=>{e.preventDefault();const{type,item}=JSON.parse(e.dataTransfer.getData('application/json'));// Eliminar plantilla\nif(zone==='trash'&&type==='template'){setTemplates(ts=>ts.filter(t=>t._id!==item._id));axios.delete(`/api/routines/templates/${item._id}`,{headers}).catch(console.error);}// Duplicar plantilla\nelse if(zone==='duplicate'&&type==='template'){const copy={...item,name:item.name+' (copia)'};delete copy._id;axios.post('/api/routines/templates',copy,{headers}).then(r=>setTemplates(ts=>[r.data,...ts])).catch(err=>{console.error('Error duplicando:',err);alert('No se pudo duplicar: '+err.message);});}// Asignar plantilla a paciente\nelse if(zone.startsWith('assign-')&&type==='template'){const patientId=zone.split('-')[1];axios.post('/api/routines/instances',{templateId:item._id,patientId},{headers}).then(()=>{alert(`Asignada «${item.name}» a paciente ${patientId}`);}).catch(err=>{console.error('Error asignando:',err);alert('No se pudo asignar: '+err.message);});}},[headers]);const allowDrop=e=>e.preventDefault();// Abrir modal de detalle de instancia para tpl y paciente\nconst openPatientDetail=async(tpl,patient)=>{setModalTpl(tpl);setModalPatient(patient);setModalLoading(true);setModalError(null);setModalInstance(null);try{// Obtener todas las instancias de ese paciente\nconst res=await axios.get(`/api/routines/instances/${patient._id}`,{headers});const list=Array.isArray(res.data)?res.data:res.data.instances||[];// Buscar la instancia de la plantilla seleccionada\nconst inst=list.find(i=>i.template._id===tpl._id);if(!inst){throw new Error('Esta plantilla no está asignada a ese paciente');}setModalInstance(inst);}catch(err){var _err$response2,_err$response2$data;console.error(err);setModalError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.msg)||err.message);}finally{setModalLoading(false);}};const closeModal=()=>{setModalTpl(null);setModalPatient(null);setModalInstance(null);setModalError(null);};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container error-msg\",children:[\"Error: \",error]});return/*#__PURE__*/_jsxs(\"div\",{className:\"routine-templates-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-new\",onClick:()=>navigate('/therapist/templates/new'),children:\"\\uD83D\\uDCC4 Nueva plantilla\"})]}),templates.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"\\uD83E\\uDD14 A\\xFAn no se han creado plantillas\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:templates.map(tpl=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",draggable:true,onDragStart:e=>onDragStart(e,tpl),children:[/*#__PURE__*/_jsx(FaEdit,{className:\"icon-edit\",onClick:()=>navigate(`/therapist/templates/${tpl._id}/edit`)}),/*#__PURE__*/_jsx(\"h2\",{children:tpl.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:tpl.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[tpl.activities.length,\" actividad(es)\"]}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'1.5rem'},children:\"Pacientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:patients.map(p=>/*#__PURE__*/_jsxs(\"div\",{className:\"patient-card\",onClick:()=>openPatientDetail(tpl,p),onDragOver:allowDrop,onDrop:e=>handleDrop(e,`assign-${p._id}`),style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(\"img\",{src:p.avatar,alt:p.name,style:{width:40,borderRadius:'50%'}}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:'0.5rem',fontWeight:500},children:p.name}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.8rem',color:'#666'},children:p.email})]},p._id))})]},tpl._id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropzones\",onDragOver:allowDrop,style:{display:'flex',gap:'1rem',marginTop:'2rem'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"dropzone trash\",onDrop:e=>handleDrop(e,'trash'),children:\"\\uD83D\\uDDD1\\uFE0F Arrastra aqu\\xED para eliminar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dropzone duplicate\",onDrop:e=>handleDrop(e,'duplicate'),children:\"\\uD83D\\uDCCB Arrastra aqu\\xED para duplicar\"})]})]}),modalTpl&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:closeModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-modal-btn\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[modalPatient.name,\" \\u2013 \",modalTpl.name]}),modalLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Cargando detalles\\u2026\"}),modalError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:modalError}),modalInstance&&!modalLoading&&!modalError&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Asignado: \",new Date(modalInstance.createdAt).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:modalInstance.template.activities.map((act,idx)=>{const done=modalInstance.completedActivities.includes(idx);return/*#__PURE__*/_jsx(\"li\",{className:\"activity-item\",children:/*#__PURE__*/_jsxs(\"label\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:done,readOnly:true}),/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:'0.5rem',textDecoration:done?'line-through':'none'},children:[act.name,\" (\",act.minutes,\" min)\"]})]})},idx);})})]})]})})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","FaTrash","FaEdit","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RoutineTemplatesPage","templates","setTemplates","patients","setPatients","loading","setLoading","error","setError","modalTpl","setModalTpl","modalPatient","setModalPatient","modalInstance","setModalInstance","modalLoading","setModalLoading","modalError","setModalError","navigate","token","localStorage","getItem","headers","fetchAll","tplRes","patRes","Promise","all","get","data","err","_err$response","_err$response$data","console","response","msg","message","onDragStart","e","item","dataTransfer","setData","JSON","stringify","type","effectAllowed","handleDrop","zone","preventDefault","parse","getData","ts","filter","t","_id","delete","catch","copy","name","post","then","r","alert","startsWith","patientId","split","templateId","allowDrop","openPatientDetail","tpl","patient","res","list","Array","isArray","instances","inst","find","i","template","Error","_err$response2","_err$response2$data","closeModal","className","children","onClick","length","map","draggable","description","activities","style","marginTop","p","onDragOver","onDrop","cursor","src","avatar","alt","width","borderRadius","marginLeft","fontWeight","fontSize","color","email","display","gap","stopPropagation","Date","createdAt","toLocaleDateString","act","idx","done","completedActivities","includes","alignItems","checked","readOnly","textDecoration","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TherapistTemplates.js"],"sourcesContent":["// src/pages/RoutineTemplatesPage.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaTrash, FaEdit } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport '../styles/routineTemplates.css';\r\nimport '../styles/patientsList.css';\r\n\r\nexport default function RoutineTemplatesPage() {\r\n  const [templates, setTemplates]       = useState([]);\r\n  const [patients, setPatients]         = useState([]);\r\n  const [loading, setLoading]           = useState(true);\r\n  const [error, setError]               = useState(null);\r\n  const [modalTpl, setModalTpl]         = useState(null);\r\n  const [modalPatient, setModalPatient] = useState(null);\r\n  const [modalInstance, setModalInstance] = useState(null);\r\n  const [modalLoading, setModalLoading] = useState(false);\r\n  const [modalError, setModalError]     = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const token    = localStorage.getItem('token');\r\n  const headers  = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': token\r\n  };\r\n\r\n  // Carga inicial de plantillas y pacientes\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      if (!token) {\r\n        navigate('/login');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const [tplRes, patRes] = await Promise.all([\r\n          axios.get('/api/routines/templates', { headers }),\r\n          axios.get('/api/therapist/patients',   { headers })\r\n        ]);\r\n        setTemplates(tplRes.data);\r\n        setPatients(patRes.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(err.response?.data?.msg || err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, [navigate, token]);\r\n\r\n  // Drag start para plantillas\r\n  const onDragStart = (e, item) => {\r\n    e.dataTransfer.setData('application/json',\r\n      JSON.stringify({ type: 'template', item }));\r\n    e.dataTransfer.effectAllowed = 'copyMove';\r\n  };\r\n\r\n  // Zona de drop para eliminar, duplicar o asignar\r\n  const handleDrop = useCallback((e, zone) => {\r\n    e.preventDefault();\r\n    const { type, item } = JSON.parse(\r\n      e.dataTransfer.getData('application/json')\r\n    );\r\n\r\n    // Eliminar plantilla\r\n    if (zone === 'trash' && type === 'template') {\r\n      setTemplates(ts => ts.filter(t => t._id !== item._id));\r\n      axios.delete(`/api/routines/templates/${item._id}`, { headers })\r\n           .catch(console.error);\r\n    }\r\n    // Duplicar plantilla\r\n    else if (zone === 'duplicate' && type === 'template') {\r\n      const copy = {\r\n        ...item,\r\n        name: item.name + ' (copia)'\r\n      };\r\n      delete copy._id;\r\n      axios.post('/api/routines/templates', copy, { headers })\r\n        .then(r => setTemplates(ts => [r.data, ...ts]))\r\n        .catch(err => {\r\n          console.error('Error duplicando:', err);\r\n          alert('No se pudo duplicar: ' + err.message);\r\n        });\r\n    }\r\n    // Asignar plantilla a paciente\r\n    else if (zone.startsWith('assign-') && type === 'template') {\r\n      const patientId = zone.split('-')[1];\r\n      axios.post(\r\n        '/api/routines/instances',\r\n        { templateId: item._id, patientId },\r\n        { headers }\r\n      )\r\n      .then(() => {\r\n        alert(`Asignada «${item.name}» a paciente ${patientId}`);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error asignando:', err);\r\n        alert('No se pudo asignar: ' + err.message);\r\n      });\r\n    }\r\n  }, [headers]);\r\n\r\n  const allowDrop = e => e.preventDefault();\r\n\r\n  // Abrir modal de detalle de instancia para tpl y paciente\r\n  const openPatientDetail = async (tpl, patient) => {\r\n    setModalTpl(tpl);\r\n    setModalPatient(patient);\r\n    setModalLoading(true);\r\n    setModalError(null);\r\n    setModalInstance(null);\r\n\r\n    try {\r\n      // Obtener todas las instancias de ese paciente\r\n      const res = await axios.get(\r\n        `/api/routines/instances/${patient._id}`,\r\n        { headers }\r\n      );\r\n      const list = Array.isArray(res.data) ? res.data : res.data.instances || [];\r\n      // Buscar la instancia de la plantilla seleccionada\r\n      const inst = list.find(i => i.template._id === tpl._id);\r\n      if (!inst) {\r\n        throw new Error('Esta plantilla no está asignada a ese paciente');\r\n      }\r\n      setModalInstance(inst);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setModalError(err.response?.data?.msg || err.message);\r\n    } finally {\r\n      setModalLoading(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalTpl(null);\r\n    setModalPatient(null);\r\n    setModalInstance(null);\r\n    setModalError(null);\r\n  };\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargando plantillas…</div>;\r\n  if (error)   return <div className=\"tpl-container error-msg\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"routine-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas</h1>\r\n          <button\r\n            className=\"btn-new\"\r\n            onClick={() => navigate('/therapist/templates/new')}\r\n          >\r\n            📄 Nueva plantilla\r\n          </button>\r\n        </div>\r\n\r\n        {templates.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            🤔 Aún no se han creado plantillas\r\n          </div>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {templates.map(tpl => (\r\n              <div\r\n                key={tpl._id}\r\n                className=\"tpl-card\"\r\n                draggable\r\n                onDragStart={e => onDragStart(e, tpl)}\r\n              >\r\n                <FaEdit\r\n                  className=\"icon-edit\"\r\n                  onClick={() => navigate(`/therapist/templates/${tpl._id}/edit`)}\r\n                />\r\n                <h2>{tpl.name}</h2>\r\n                <p className=\"tpl-desc\">{tpl.description}</p>\r\n                <div className=\"tpl-meta\">\r\n                  {tpl.activities.length} actividad(es)\r\n                </div>\r\n\r\n                <h3 style={{ marginTop: '1.5rem' }}>Pacientes</h3>\r\n                <div className=\"tpl-grid\">\r\n                  {patients.map(p => (\r\n                    <div\r\n                      key={p._id}\r\n                      className=\"patient-card\"\r\n                      onClick={() => openPatientDetail(tpl, p)}\r\n                      onDragOver={allowDrop}\r\n                      onDrop={e => handleDrop(e, `assign-${p._id}`)}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <img\r\n                        src={p.avatar}\r\n                        alt={p.name}\r\n                        style={{ width: 40, borderRadius: '50%' }}\r\n                      />\r\n                      <div style={{ marginLeft: '0.5rem', fontWeight: 500 }}>\r\n                        {p.name}\r\n                      </div>\r\n                      <div style={{ fontSize: '0.8rem', color: '#666' }}>\r\n                        {p.email}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"dropzones\"\r\n          onDragOver={allowDrop}\r\n          style={{ display: 'flex', gap: '1rem', marginTop: '2rem' }}\r\n        >\r\n          <div className=\"dropzone trash\" onDrop={e => handleDrop(e, 'trash')}>\r\n            🗑️ Arrastra aquí para eliminar\r\n          </div>\r\n          <div\r\n            className=\"dropzone duplicate\"\r\n            onDrop={e => handleDrop(e, 'duplicate')}\r\n          >\r\n            📋 Arrastra aquí para duplicar\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de detalle de instancia */}\r\n      {modalTpl && (\r\n        <div className=\"modal-overlay\" onClick={closeModal}>\r\n          <div\r\n            className=\"modal-content\"\r\n            onClick={e => e.stopPropagation()}\r\n          >\r\n            <button className=\"close-modal-btn\" onClick={closeModal}>\r\n              &times;\r\n            </button>\r\n            <h2>\r\n              {modalPatient.name} – {modalTpl.name}\r\n            </h2>\r\n\r\n            {modalLoading && <p>Cargando detalles…</p>}\r\n            {modalError   && <p className=\"error-msg\">{modalError}</p>}\r\n\r\n            {modalInstance && !modalLoading && !modalError && (\r\n              <>\r\n                <p>\r\n                  Asignado: {new Date(modalInstance.createdAt).toLocaleDateString()}\r\n                </p>\r\n                <ul className=\"tpl-activities-list\">\r\n                  {modalInstance.template.activities.map((act, idx) => {\r\n                    const done = modalInstance.completedActivities.includes(idx);\r\n                    return (\r\n                      <li key={idx} className=\"activity-item\">\r\n                        <label style={{ display: 'flex', alignItems: 'center' }}>\r\n                          <input type=\"checkbox\" checked={done} readOnly />\r\n                          <span\r\n                            style={{\r\n                              marginLeft: '0.5rem',\r\n                              textDecoration: done ? 'line-through' : 'none'\r\n                            }}\r\n                          >\r\n                            {act.name} ({act.minutes} min)\r\n                          </span>\r\n                        </label>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}