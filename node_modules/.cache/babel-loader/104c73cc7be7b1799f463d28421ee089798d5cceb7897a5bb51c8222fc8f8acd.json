{"ast":null,"code":"// src/components/PatientRoutines.js\nimport React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{ResponsiveContainer,PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar,LineChart,Line}from'recharts';import'../styles/therapistRoutines.css';// Fixed list of categories (in lowercase)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ALL_CATEGORIES=['cuidado personal','actividades escolares','juego y tiempo libre','participación comunitaria','descanso y sueño'];// Map activityId ➔ category\nconst categoryMap={futbol:'juego y tiempo libre',dibujos:'juego y tiempo libre',comics:'juego y tiempo libre',tarea:'actividades escolares',videojuegos:'juego y tiempo libre',helado:'juego y tiempo libre',parque:'participación comunitaria',banio:'cuidado personal',dormir:'descanso y sueño',musica:'juego y tiempo libre',bailar:'juego y tiempo libre',amigos:'participación comunitaria',bicicleta:'juego y tiempo libre',dibujar:'juego y tiempo libre',mascotas:'juego y tiempo libre',experimentos:'actividades escolares',cantar:'juego y tiempo libre',lego:'juego y tiempo libre',nadar:'cuidado personal',computadora:'juego y tiempo libre'};export default function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selected,setSelected]=useState(null);const[metrics,setMetrics]=useState(null);const[multi,setMulti]=useState(null);// Fetch all game results for patient\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(_ref=>{let{data}=_ref;setResults(data);const now=new Date();const weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// Filter results by date range\nuseEffect(()=>{if(!from||!to)return;const f=new Date(from),t=new Date(to);t.setHours(23,59,59,999);setFiltered(results.filter(r=>{const d=new Date(r.createdAt);return d>=f&&d<=t;}));},[results,from,to]);// Default select first available day\nuseEffect(()=>{setSelected(filtered.length?filtered[0].createdAt:null);},[filtered]);// Compute metrics for selected day\nuseEffect(()=>{if(!selected)return;const res=filtered.find(r=>r.createdAt===selected);if(!res)return;const slots=res.timeSlots||[];const acts=slots.flatMap(s=>s.activities||[]);const totalMin=acts.reduce((sum,a)=>sum+a.duration,0)||1;// Sum minutes per category\nconst catSum={};ALL_CATEGORIES.forEach(cat=>catSum[cat]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId]||null;if(cat&&catSum.hasOwnProperty(cat)){catSum[cat]+=a.duration;}});// 1. Distribution % by category (always include all)\nconst distribution=ALL_CATEGORIES.map(name=>({name,value:+(catSum[name]/totalMin*100||0).toFixed(1)}));// 2. Hours by category\nconst hours=ALL_CATEGORIES.map(name=>({name,hours:+(catSum[name]/60).toFixed(2)}));// 3. Diversity (# unique activities)\nconst diversity=new Set(acts.map(a=>a.activityId)).size;// 4. Consistency (% slots occupied)\nconst occupiedSlots=slots.filter(s=>{var _s$activities;return((_s$activities=s.activities)===null||_s$activities===void 0?void 0:_s$activities.length)>0;}).length;const consistency=+(occupiedSlots/24*100).toFixed(1);// 5. Fragmentation index (# of category transitions)\nlet prevCat=null;let transitions=0;// Ensure chronological order by slot label\nslots.slice().sort((a,b)=>a.slot.localeCompare(b.slot)).forEach(slot=>{var _slot$activities;const act=((_slot$activities=slot.activities)===null||_slot$activities===void 0?void 0:_slot$activities[0])||null;const cat=act?categoryMap[act.activityId]:null;if(cat){if(prevCat&&cat!==prevCat)transitions++;prevCat=cat;}});const fragmentation=transitions;// 6. Category balance radar (reuse distribution)\nconst groupBalance=distribution;// 7. Balance index (inverse entropy)\nconst N=distribution.length;const uniform=100/N;const distDiff=distribution.reduce((acc,d)=>acc+Math.abs(d.value-uniform),0)/2;const balanceIndex=+((100-distDiff)/100*100).toFixed(1);// 8. Top 3 activities by time\nconst actSum={};acts.forEach(a=>{actSum[a.activityId]=(actSum[a.activityId]||0)+a.duration;});const top3=Object.entries(actSum).sort((a,b)=>b[1]-a[1]).slice(0,3).map(_ref2=>{let[id,val]=_ref2;return{name:id,hours:+(val/60).toFixed(2)};});// 9. Sleep hours\nconst sleepMin=catSum['descanso y sueño'];const sleepHours=+(sleepMin/60).toFixed(2);setMetrics({distribution,hours,diversity,consistency,fragmentation,groupBalance,balanceIndex,top3,sleepHours});},[selected,filtered]);// Compute multi-day metrics\nuseEffect(()=>{if(!filtered.length){setMulti(null);return;}// Sleep over days\nconst sleepData=filtered.map(r=>{const date=new Date(r.createdAt).toLocaleDateString();const sleepMin=r.timeSlots.reduce((sum,slot)=>{var _slot$activities2;const entry=(_slot$activities2=slot.activities)===null||_slot$activities2===void 0?void 0:_slot$activities2.find(a=>a.activityId==='dormir');return sum+(entry?entry.duration:0);},0);return{date,hours:+(sleepMin/60).toFixed(2)};});// Variance of category distribution\nconst dayPercents=filtered.map(r=>{const acts=r.timeSlots.flatMap(s=>s.activities||[]);const total=acts.reduce((sum,a)=>sum+a.duration,0)||1;const sums={};ALL_CATEGORIES.forEach(cat=>sums[cat]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId]||null;if(cat)sums[cat]+=a.duration;});return ALL_CATEGORIES.reduce((obj,cat)=>{obj[cat]=+(sums[cat]/total*100).toFixed(1);return obj;},{});});const categoryVariance=ALL_CATEGORIES.map(cat=>{const vals=dayPercents.map(d=>d[cat]);const mean=vals.reduce((a,b)=>a+b,0)/vals.length;const varr=vals.reduce((acc,v)=>acc+(v-mean)**2,0)/vals.length;return{category:cat,variance:+varr.toFixed(2)};});setMulti({sleepData,categoryVariance});},[filtered]);return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"D\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selected||'',onChange:e=>setSelected(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"N\\xFAmero de actividades distintas realizadas en el d\\xEDa. Se calcula contando actividades con ID \\xFAnico.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Porcentaje de franjas horarias (de 24 posibles) en las que se realiz\\xF3 al menos una actividad: (franjas ocupadas/24)\\xD7100.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Fragmentaci\\xF3n: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.fragmentation})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-random info-icon\",title:\"N\\xFAmero de cambios de categor\\xEDa a lo largo del d\\xEDa; mide la continuidad ocupacional.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Equilibrio: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.balanceIndex,\"%\"]})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"\\xCDndice de equilibrio de tiempo entre categor\\xEDas. Se basa en la diferencia respecto a una distribuci\\xF3n uniforme de % por categor\\xEDa.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Sue\\xF1o (h): \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.sleepHours})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Total de horas dedicadas a 'descanso y sue\\xF1o'. Minutos de sue\\xF1o \\xF7 60.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Categor\\xEDa\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Muestra el porcentaje del tiempo total del d\\xEDa dedicado a cada categor\\xEDa. Calculado como (minutos en categor\\xEDa / total minutos del d\\xEDa) \\xD7 100.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'][i%5]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas por Categor\\xEDa\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Representa las horas empleadas en cada categor\\xEDa, convirtiendo minutos a horas.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.hours,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Balance de Categor\\xEDas\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Un radar muestra el equilibrio relativo entre categor\\xEDas basado en distribuci\\xF3n %.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(RadarChart,{data:metrics.groupBalance,cx:\"50%\",cy:\"50%\",outerRadius:80,children:[/*#__PURE__*/_jsx(PolarGrid,{}),/*#__PURE__*/_jsx(PolarAngleAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(PolarRadiusAxis,{domain:[0,100]}),/*#__PURE__*/_jsx(Radar,{dataKey:\"value\",stroke:\"#82ca9d\",fill:\"#82ca9d\",fillOpacity:0.6}),/*#__PURE__*/_jsx(Tooltip,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top 3 Actividades\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Lista las tres actividades con m\\xE1s tiempo invertido en el d\\xEDa seleccionado.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.top3,layout:\"vertical\",margin:{top:10,right:30,left:50,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"name\",type:\"category\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#ffc658\"})]})})]})]})]}),multi&&/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tendencia de Sue\\xF1o\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"L\\xEDnea muestra las horas de sue\\xF1o cada d\\xEDa en el rango seleccionado.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:multi.sleepData,margin:{top:10,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"hours\",stroke:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Variabilidad por Categor\\xEDa\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Muestra la varianza porcentual diaria de cada categor\\xEDa durante el per\\xEDodo.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:multi.categoryVariance,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"category\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"variance\",fill:\"#ff8042\"})]})})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","ResponsiveContainer","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","LineChart","Line","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ALL_CATEGORIES","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selected","setSelected","metrics","setMetrics","multi","setMulti","token","localStorage","getItem","get","headers","then","_ref","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","f","t","setHours","filter","r","d","createdAt","length","res","find","slots","timeSlots","acts","flatMap","s","activities","totalMin","reduce","sum","a","duration","catSum","forEach","cat","activityId","hasOwnProperty","distribution","map","name","value","toFixed","hours","diversity","Set","size","occupiedSlots","_s$activities","consistency","prevCat","transitions","sort","b","slot","localeCompare","_slot$activities","act","fragmentation","groupBalance","N","uniform","distDiff","acc","Math","abs","balanceIndex","actSum","top3","Object","entries","_ref2","id","val","sleepMin","sleepHours","sleepData","date","toLocaleDateString","_slot$activities2","entry","dayPercents","total","sums","obj","categoryVariance","vals","mean","varr","v","category","variance","className","children","type","onChange","e","target","title","width","height","dataKey","nameKey","cx","cy","outerRadius","label","_","i","fill","margin","top","right","left","bottom","strokeDasharray","domain","stroke","fillOpacity","layout"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["// src/components/PatientRoutines.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  ResponsiveContainer,\r\n  PieChart, Pie, Cell, Tooltip, Legend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  LineChart, Line\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Fixed list of categories (in lowercase)\r\nconst ALL_CATEGORIES = [\r\n  'cuidado personal',\r\n  'actividades escolares',\r\n  'juego y tiempo libre',\r\n  'participación comunitaria',\r\n  'descanso y sueño'\r\n];\r\n\r\n// Map activityId ➔ category\r\nconst categoryMap = {\r\n  futbol: 'juego y tiempo libre',\r\n  dibujos: 'juego y tiempo libre',\r\n  comics: 'juego y tiempo libre',\r\n  tarea: 'actividades escolares',\r\n  videojuegos: 'juego y tiempo libre',\r\n  helado: 'juego y tiempo libre',\r\n  parque: 'participación comunitaria',\r\n  banio: 'cuidado personal',\r\n  dormir: 'descanso y sueño',\r\n  musica: 'juego y tiempo libre',\r\n  bailar: 'juego y tiempo libre',\r\n  amigos: 'participación comunitaria',\r\n  bicicleta: 'juego y tiempo libre',\r\n  dibujar: 'juego y tiempo libre',\r\n  mascotas: 'juego y tiempo libre',\r\n  experimentos: 'actividades escolares',\r\n  cantar: 'juego y tiempo libre',\r\n  lego: 'juego y tiempo libre',\r\n  nadar: 'cuidado personal',\r\n  computadora: 'juego y tiempo libre'\r\n};\r\n\r\nexport default function PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [multi, setMulti] = useState(null);\r\n\r\n  // Fetch all game results for patient\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    }).then(({ data }) => {\r\n      setResults(data);\r\n      const now = new Date();\r\n      const weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    }).catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // Filter results by date range\r\n  useEffect(() => {\r\n    if (!from || !to) return;\r\n    const f = new Date(from), t = new Date(to);\r\n    t.setHours(23,59,59,999);\r\n    setFiltered(results.filter(r => {\r\n      const d = new Date(r.createdAt);\r\n      return d >= f && d <= t;\r\n    }));\r\n  }, [results, from, to]);\r\n\r\n  // Default select first available day\r\n  useEffect(() => {\r\n    setSelected(filtered.length ? filtered[0].createdAt : null);\r\n  }, [filtered]);\r\n\r\n  // Compute metrics for selected day\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    const res = filtered.find(r => r.createdAt === selected);\r\n    if (!res) return;\r\n\r\n    const slots = res.timeSlots || [];\r\n    const acts = slots.flatMap(s => s.activities || []);\r\n    const totalMin = acts.reduce((sum,a) => sum + a.duration, 0) || 1;\r\n\r\n    // Sum minutes per category\r\n    const catSum = {};\r\n    ALL_CATEGORIES.forEach(cat => catSum[cat] = 0);\r\n    acts.forEach(a => {\r\n      const cat = categoryMap[a.activityId] || null;\r\n      if (cat && catSum.hasOwnProperty(cat)) {\r\n        catSum[cat] += a.duration;\r\n      }\r\n    });\r\n\r\n    // 1. Distribution % by category (always include all)\r\n    const distribution = ALL_CATEGORIES.map(name => ({\r\n      name,\r\n      value: +((catSum[name] / totalMin * 100) || 0).toFixed(1)\r\n    }));\r\n\r\n    // 2. Hours by category\r\n    const hours = ALL_CATEGORIES.map(name => ({\r\n      name,\r\n      hours: +(catSum[name] / 60).toFixed(2)\r\n    }));\r\n\r\n    // 3. Diversity (# unique activities)\r\n    const diversity = new Set(acts.map(a => a.activityId)).size;\r\n\r\n    // 4. Consistency (% slots occupied)\r\n    const occupiedSlots = slots.filter(s => s.activities?.length > 0).length;\r\n    const consistency = +((occupiedSlots / 24 * 100).toFixed(1));\r\n\r\n    // 5. Fragmentation index (# of category transitions)\r\n    let prevCat = null;\r\n    let transitions = 0;\r\n    // Ensure chronological order by slot label\r\n    slots\r\n      .slice()\r\n      .sort((a, b) => a.slot.localeCompare(b.slot))\r\n      .forEach(slot => {\r\n        const act = slot.activities?.[0] || null;\r\n        const cat = act ? categoryMap[act.activityId] : null;\r\n        if (cat) {\r\n          if (prevCat && cat !== prevCat) transitions++;\r\n          prevCat = cat;\r\n        }\r\n      });\r\n    const fragmentation = transitions;\r\n\r\n    // 6. Category balance radar (reuse distribution)\r\n    const groupBalance = distribution;\r\n\r\n    // 7. Balance index (inverse entropy)\r\n    const N = distribution.length;\r\n    const uniform = 100 / N;\r\n    const distDiff = distribution.reduce((acc,d) =>\r\n      acc + Math.abs(d.value - uniform), 0) / 2;\r\n    const balanceIndex = +((100 - distDiff) / 100 * 100).toFixed(1);\r\n\r\n    // 8. Top 3 activities by time\r\n    const actSum = {};\r\n    acts.forEach(a => {\r\n      actSum[a.activityId] = (actSum[a.activityId]||0) + a.duration;\r\n    });\r\n    const top3 = Object.entries(actSum)\r\n      .sort((a,b) => b[1] - a[1]).slice(0,3)\r\n      .map(([id,val]) => ({ name: id, hours: +(val/60).toFixed(2) }));\r\n\r\n    // 9. Sleep hours\r\n    const sleepMin = catSum['descanso y sueño'];\r\n    const sleepHours = +(sleepMin / 60).toFixed(2);\r\n\r\n    setMetrics({\r\n      distribution,\r\n      hours,\r\n      diversity,\r\n      consistency,\r\n      fragmentation,\r\n      groupBalance,\r\n      balanceIndex,\r\n      top3,\r\n      sleepHours\r\n    });\r\n  }, [selected, filtered]);\r\n\r\n  // Compute multi-day metrics\r\n  useEffect(() => {\r\n    if (!filtered.length) {\r\n      setMulti(null);\r\n      return;\r\n    }\r\n    // Sleep over days\r\n    const sleepData = filtered.map(r => {\r\n      const date = new Date(r.createdAt).toLocaleDateString();\r\n      const sleepMin = r.timeSlots.reduce((sum, slot) => {\r\n        const entry = slot.activities?.find(a => a.activityId === 'dormir');\r\n        return sum + (entry ? entry.duration : 0);\r\n      }, 0);\r\n      return { date, hours: +(sleepMin/60).toFixed(2) };\r\n    });\r\n    // Variance of category distribution\r\n    const dayPercents = filtered.map(r => {\r\n      const acts = r.timeSlots.flatMap(s => s.activities || []);\r\n      const total = acts.reduce((sum,a)=>sum+a.duration,0)||1;\r\n      const sums = {};\r\n      ALL_CATEGORIES.forEach(cat => sums[cat]=0);\r\n      acts.forEach(a => {\r\n        const cat = categoryMap[a.activityId] || null;\r\n        if (cat) sums[cat] += a.duration;\r\n      });\r\n      return ALL_CATEGORIES.reduce((obj,cat) => {\r\n        obj[cat] = +(sums[cat]/total*100).toFixed(1);\r\n        return obj;\r\n      }, {});\r\n    });\r\n    const categoryVariance = ALL_CATEGORIES.map(cat => {\r\n      const vals = dayPercents.map(d => d[cat]);\r\n      const mean = vals.reduce((a,b)=>a+b,0)/vals.length;\r\n      const varr = vals.reduce((acc,v)=>acc+(v-mean)**2,0)/vals.length;\r\n      return { category: cat, variance: +varr.toFixed(2) };\r\n    });\r\n    setMulti({ sleepData, categoryVariance });\r\n  }, [filtered]);\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      {/* Filters */}\r\n      <section className=\"filter-section\">\r\n        <label>Desde:<input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} /></label>\r\n        <label>Hasta:<input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} /></label>\r\n        <label>Día:\r\n          <select value={selected||''} onChange={e=>setSelected(e.target.value)}>\r\n            {filtered.map(r => {\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {/* Single-day metrics */}\r\n      {metrics && (\r\n        <>\r\n          <div className=\"metrics-grid\">\r\n            <div className=\"metric-card\">\r\n              <span>Diversidad: <strong>{metrics.diversity}</strong></span>\r\n              <i\r\n                className=\"fa fa-info-circle info-icon\"\r\n                title=\"Número de actividades distintas realizadas en el día. Se calcula contando actividades con ID único.\"\r\n              ></i>\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              <span>Consistencia: <strong>{metrics.consistency}%</strong></span>\r\n              <i\r\n                className=\"fa fa-info-circle info-icon\"\r\n                title=\"Porcentaje de franjas horarias (de 24 posibles) en las que se realizó al menos una actividad: (franjas ocupadas/24)×100.\"\r\n              ></i>\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              <span>Fragmentación: <strong>{metrics.fragmentation}</strong></span>\r\n              <i\r\n                className=\"fa fa-random info-icon\"\r\n                title=\"Número de cambios de categoría a lo largo del día; mide la continuidad ocupacional.\"\r\n              ></i>\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              <span>Equilibrio: <strong>{metrics.balanceIndex}%</strong></span>\r\n              <i\r\n                className=\"fa fa-info-circle info-icon\"\r\n                title=\"Índice de equilibrio de tiempo entre categorías. Se basa en la diferencia respecto a una distribución uniforme de % por categoría.\"\r\n              ></i>\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              <span>Sueño (h): <strong>{metrics.sleepHours}</strong></span>\r\n              <i\r\n                className=\"fa fa-info-circle info-icon\"\r\n                title=\"Total de horas dedicadas a 'descanso y sueño'. Minutos de sueño ÷ 60.\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Charts */}\r\n          <div className=\"charts-grid\">\r\n            {/* Distribution Pie */}\r\n            <div className=\"chart-block\">\r\n              <h3>Distribución % por Categoría</h3>\r\n              <p className=\"chart-description\">\r\n                Muestra el porcentaje del tiempo total del día dedicado a cada categoría.\r\n                Calculado como (minutos en categoría / total minutos del día) × 100.\r\n              </p>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={metrics.distribution}\r\n                    dataKey=\"value\"\r\n                    nameKey=\"name\"\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={80}\r\n                    label\r\n                  >\r\n                    {metrics.distribution.map((_,i) =>\r\n                      <Cell key={i} fill={['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'][i%5]} />\r\n                    )}\r\n                  </Pie>\r\n                  <Tooltip /><Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            {/* Hours Bar */}\r\n            <div className=\"chart-block\">\r\n              <h3>Horas por Categoría</h3>\r\n              <p className=\"chart-description\">\r\n                Representa las horas empleadas en cada categoría, convirtiendo minutos a horas.\r\n              </p>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart data={metrics.hours} margin={{ top:20,right:30,left:0,bottom:0 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Bar dataKey=\"hours\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            {/* Radar Balance */}\r\n            <div className=\"chart-block\">\r\n              <h3>Balance de Categorías</h3>\r\n              <p className=\"chart-description\">\r\n                Un radar muestra el equilibrio relativo entre categorías basado en distribución %.\r\n              </p>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <RadarChart data={metrics.groupBalance} cx=\"50%\" cy=\"50%\" outerRadius={80}>\r\n                  <PolarGrid />\r\n                  <PolarAngleAxis dataKey=\"name\" />\r\n                  <PolarRadiusAxis domain={[0,100]} />\r\n                  <Radar dataKey=\"value\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6}/>\r\n                  <Tooltip />\r\n                </RadarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            {/* Top 3 */}\r\n            <div className=\"chart-block full-width\">\r\n              <h3>Top 3 Actividades</h3>\r\n              <p className=\"chart-description\">\r\n                Lista las tres actividades con más tiempo invertido en el día seleccionado.\r\n              </p>\r\n              <ResponsiveContainer width=\"100%\" height={200}>\r\n                <BarChart\r\n                  data={metrics.top3}\r\n                  layout=\"vertical\"\r\n                  margin={{ top:10,right:30,left:50,bottom:5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                  <XAxis type=\"number\"/>\r\n                  <YAxis dataKey=\"name\" type=\"category\"/>\r\n                  <Tooltip/>\r\n                  <Bar dataKey=\"hours\" fill=\"#ffc658\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Multi-day metrics */}\r\n      {multi && (\r\n        <div className=\"charts-grid\">\r\n          {/* Sleep trend */}\r\n          <div className=\"chart-block\">\r\n            <h3>Tendencia de Sueño</h3>\r\n            <p className=\"chart-description\">\r\n              Línea muestra las horas de sueño cada día en el rango seleccionado.\r\n            </p>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={multi.sleepData} margin={{ top:10,right:30,left:0,bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"date\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Line type=\"monotone\" dataKey=\"hours\" stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Category variance */}\r\n          <div className=\"chart-block\">\r\n            <h3>Variabilidad por Categoría</h3>\r\n            <p className=\"chart-description\">\r\n              Muestra la varianza porcentual diaria de cada categoría durante el período.\r\n            </p>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart data={multi.categoryVariance} margin={{ top:20,right:30,left:0,bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"category\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Bar dataKey=\"variance\" fill=\"#ff8042\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}