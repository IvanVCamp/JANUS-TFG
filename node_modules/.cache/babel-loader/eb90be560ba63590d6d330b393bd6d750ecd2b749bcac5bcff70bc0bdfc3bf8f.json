{"ast":null,"code":"// src/components/PatientTemplates.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import jwt_decode from'jwt-decode';// npm install jwt-decode\nimport'../routineTemplates.css';// Ajusta la ruta según tu proyecto\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatientTemplates=()=>{const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[searchTerm,setSearchTerm]=useState('');// Decodificar el token para obtener el ID del paciente\nconst token=localStorage.getItem('token');let patientId=null;if(token){try{var _decoded$user;const decoded=jwt_decode(token);// Dependiendo de tu payload puede ser decoded.id o decoded.user.id\npatientId=((_decoded$user=decoded.user)===null||_decoded$user===void 0?void 0:_decoded$user.id)||decoded.id;}catch(e){console.error('Token inválido',e);}}// Cabeceras con Bearer token\nconst headers={Authorization:token?`Bearer ${token}`:''};// Obtener instancias asignadas\nuseEffect(()=>{if(!patientId){setError('No se ha podido identificar al paciente.');setLoading(false);return;}axios.get(`/api/routines/instances/${patientId}`,{headers}).then(res=>{setInstances(res.data);setLoading(false);}).catch(err=>{console.error(err);setError('Error al cargar las plantillas.');setLoading(false);});},[patientId]);// Marcar o desmarcar una actividad\nconst handleToggleActivity=async(instanceId,idx,completed)=>{try{const res=await axios.post(`/api/routines/instances/${instanceId}/activities/${idx}`,{completed},{headers});setInstances(prev=>prev.map(inst=>inst._id===instanceId?{...inst,completedActivities:res.data.completedActivities}:inst));}catch(err){console.error('Error marcando actividad',err);}};// Completar toda la plantilla de una\nconst handleCompleteInstance=async id=>{const inst=instances.find(i=>i._id===id);if(!inst)return;const total=inst.template.activities.length;const allIdx=Array.from({length:total},(_,i)=>i);try{await Promise.all(allIdx.map(idx=>axios.post(`/api/routines/instances/${id}/activities/${idx}`,{completed:true},{headers})));setInstances(prev=>prev.map(i=>i._id===id?{...i,completedActivities:allIdx}:i));}catch(err){console.error('Error completando instancia',err);}};// Filtrar por nombre de plantilla\nconst filtered=instances.filter(inst=>inst.template.name.toLowerCase().includes(searchTerm.toLowerCase()));if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container error\",children:error});return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Buscar plantilla\\u2026\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-grid\",children:[filtered.map(inst=>{const{_id,template,completedActivities}=inst;const{name,description,tags=[],activities=[]}=template;const isCompleted=completedActivities.length===activities.length;return/*#__PURE__*/_jsxs(\"div\",{className:`tpl-card ${isCompleted?'status-completed':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:description}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-meta\",children:tags.map(t=>/*#__PURE__*/_jsx(\"span\",{className:\"tag\",children:t},t))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"activities-list\",children:activities.map((act,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"activity-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"activity-header\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:completedActivities.includes(idx),onChange:e=>handleToggleActivity(_id,idx,e.target.checked)}),/*#__PURE__*/_jsx(\"strong\",{children:act.name})]}),/*#__PURE__*/_jsx(\"p\",{children:act.desc}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"em\",{children:\"Desaf\\xEDo:\"}),\" \",act.challenge]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"em\",{children:\"Duraci\\xF3n:\"}),\" \",act.minutes,\" min\"]})]},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"assign-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-complete\",onClick:()=>handleCompleteInstance(_id),disabled:isCompleted,children:isCompleted?'Completada':'Completar todo'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-postpone\",onClick:()=>alert('Funcionalidad de posponer no implementada'),children:\"Posponer\"})]})]},_id);}),filtered.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No hay plantillas que coincidan con tu b\\xFAsqueda.\"})]})]});};export default PatientTemplates;","map":{"version":3,"names":["React","useState","useEffect","axios","jwt_decode","jsx","_jsx","jsxs","_jsxs","PatientTemplates","instances","setInstances","loading","setLoading","error","setError","searchTerm","setSearchTerm","token","localStorage","getItem","patientId","_decoded$user","decoded","user","id","e","console","headers","Authorization","get","then","res","data","catch","err","handleToggleActivity","instanceId","idx","completed","post","prev","map","inst","_id","completedActivities","handleCompleteInstance","find","i","total","template","activities","length","allIdx","Array","from","_","Promise","all","filtered","filter","name","toLowerCase","includes","className","children","type","placeholder","value","onChange","target","description","tags","isCompleted","t","act","checked","desc","challenge","minutes","onClick","disabled","alert"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/components/PatientTemplates.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode'; // npm install jwt-decode\r\nimport '../routineTemplates.css';    // Ajusta la ruta según tu proyecto\r\n\r\nconst PatientTemplates = () => {\r\n  const [instances, setInstances] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Decodificar el token para obtener el ID del paciente\r\n  const token = localStorage.getItem('token');\r\n  let patientId = null;\r\n  if (token) {\r\n    try {\r\n      const decoded = jwt_decode(token);\r\n      // Dependiendo de tu payload puede ser decoded.id o decoded.user.id\r\n      patientId = decoded.user?.id || decoded.id;\r\n    } catch (e) {\r\n      console.error('Token inválido', e);\r\n    }\r\n  }\r\n\r\n  // Cabeceras con Bearer token\r\n  const headers = {\r\n    Authorization: token ? `Bearer ${token}` : ''\r\n  };\r\n\r\n  // Obtener instancias asignadas\r\n  useEffect(() => {\r\n    if (!patientId) {\r\n      setError('No se ha podido identificar al paciente.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    axios.get(`/api/routines/instances/${patientId}`, { headers })\r\n      .then(res => {\r\n        setInstances(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        setError('Error al cargar las plantillas.');\r\n        setLoading(false);\r\n      });\r\n  }, [patientId]);\r\n\r\n  // Marcar o desmarcar una actividad\r\n  const handleToggleActivity = async (instanceId, idx, completed) => {\r\n    try {\r\n      const res = await axios.post(\r\n        `/api/routines/instances/${instanceId}/activities/${idx}`,\r\n        { completed },\r\n        { headers }\r\n      );\r\n      setInstances(prev =>\r\n        prev.map(inst =>\r\n          inst._id === instanceId\r\n            ? { ...inst, completedActivities: res.data.completedActivities }\r\n            : inst\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Error marcando actividad', err);\r\n    }\r\n  };\r\n\r\n  // Completar toda la plantilla de una\r\n  const handleCompleteInstance = async id => {\r\n    const inst = instances.find(i => i._id === id);\r\n    if (!inst) return;\r\n    const total = inst.template.activities.length;\r\n    const allIdx = Array.from({ length: total }, (_, i) => i);\r\n    try {\r\n      await Promise.all(\r\n        allIdx.map(idx =>\r\n          axios.post(\r\n            `/api/routines/instances/${id}/activities/${idx}`,\r\n            { completed: true },\r\n            { headers }\r\n          )\r\n        )\r\n      );\r\n      setInstances(prev =>\r\n        prev.map(i =>\r\n          i._id === id\r\n            ? { ...i, completedActivities: allIdx }\r\n            : i\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Error completando instancia', err);\r\n    }\r\n  };\r\n\r\n  // Filtrar por nombre de plantilla\r\n  const filtered = instances.filter(inst =>\r\n    inst.template.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargando plantillas…</div>;\r\n  if (error)   return <div className=\"tpl-container error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"tpl-container\">\r\n      <div className=\"tpl-header\">\r\n        <h1>Mis Plantillas Asignadas</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar plantilla…\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"tpl-grid\">\r\n        {filtered.map(inst => {\r\n          const { _id, template, completedActivities } = inst;\r\n          const { name, description, tags = [], activities = [] } = template;\r\n          const isCompleted = completedActivities.length === activities.length;\r\n\r\n          return (\r\n            <div\r\n              key={_id}\r\n              className={`tpl-card ${isCompleted ? 'status-completed' : ''}`}\r\n            >\r\n              <div>\r\n                <h2>{name}</h2>\r\n                <p className=\"tpl-desc\">{description}</p>\r\n                <p className=\"tpl-meta\">\r\n                  {tags.map(t => (\r\n                    <span key={t} className=\"tag\">{t}</span>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"activities-list\">\r\n                {activities.map((act, idx) => (\r\n                  <div key={idx} className=\"activity-item\">\r\n                    <div className=\"activity-header\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={completedActivities.includes(idx)}\r\n                        onChange={e =>\r\n                          handleToggleActivity(_id, idx, e.target.checked)\r\n                        }\r\n                      />\r\n                      <strong>{act.name}</strong>\r\n                    </div>\r\n                    <p>{act.desc}</p>\r\n                    <p><em>Desafío:</em> {act.challenge}</p>\r\n                    <p><em>Duración:</em> {act.minutes} min</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"assign-actions\">\r\n                <button\r\n                  className=\"btn-complete\"\r\n                  onClick={() => handleCompleteInstance(_id)}\r\n                  disabled={isCompleted}\r\n                >\r\n                  {isCompleted ? 'Completada' : 'Completar todo'}\r\n                </button>\r\n                <button\r\n                  className=\"btn-postpone\"\r\n                  onClick={() => alert('Funcionalidad de posponer no implementada')}\r\n                >\r\n                  Posponer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {filtered.length === 0 && (\r\n          <p>No hay plantillas que coincidan con tu búsqueda.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientTemplates;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}