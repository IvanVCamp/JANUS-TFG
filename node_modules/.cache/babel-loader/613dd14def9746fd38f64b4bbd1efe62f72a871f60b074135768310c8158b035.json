{"ast":null,"code":"// src/pages/PatientTemplatesPage.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'../styles/patientTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const[templates,setTemplates]=useState([]);const[completed,setCompleted]=useState({});// { tplId: Set(activityIndex) }\nconst[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();const token=localStorage.getItem('token');useEffect(()=>{if(!token)return navigate('/login');fetch('/api/patient/templates',{headers:{'Content-Type':'application/json','x-auth-token':token}}).then(res=>{if(res.status===401){alert('SesiÃ³n expirada');navigate('/login');throw new Error('Unauthorized');}if(!res.ok)throw new Error(`Error ${res.status}`);return res.json();}).then(data=>{setTemplates(data);// inicializa sets vacÃ­os\nconst init={};data.forEach(t=>{init[t._id]=new Set();});setCompleted(init);}).catch(err=>setError(err.message)).finally(()=>setLoading(false));},[navigate,token]);const toggleActivity=(tplId,idx)=>{setCompleted(c=>{const setCopy=new Set(c[tplId]);setCopy.has(idx)?setCopy.delete(idx):setCopy.add(idx);return{...c,[tplId]:setCopy};});};const markTemplateComplete=tplId=>{fetch(`/api/patient/templates/${tplId}/complete`,{method:'POST',headers:{'Content-Type':'application/json','x-auth-token':token}}).then(()=>{alert('Â¡Plantilla completada!');navigate('/patient/dashboard');}).catch(console.error);};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"pt-container\",children:\"Cargando plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"pt-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pt-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),templates.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"pt-empty\",children:\"\\uD83D\\uDE15 No tienes plantillas asignadas.\"}):templates.map(t=>{var _completed$t$_id;const doneCount=((_completed$t$_id=completed[t._id])===null||_completed$t$_id===void 0?void 0:_completed$t$_id.size)||0;const total=t.activities.length;const pct=Math.round(doneCount/total*100);const allDone=doneCount===total;return/*#__PURE__*/_jsxs(\"div\",{className:\"pt-card\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:t.name}),/*#__PURE__*/_jsxs(\"small\",{children:[t.activities.length,\" actividades\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"pt-desc\",children:t.description}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"pt-progress-inner\",style:{width:`${pct}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-progress-label\",children:[doneCount,\" de \",total,\" completadas (\",pct,\"%)\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"pt-activities\",children:t.activities.map((act,i)=>{var _completed$t$_id2;return/*#__PURE__*/_jsxs(\"li\",{className:\"pt-activity\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(_completed$t$_id2=completed[t._id])===null||_completed$t$_id2===void 0?void 0:_completed$t$_id2.has(i),onChange:()=>toggleActivity(t._id,i),id:`${t._id}-act-${i}`}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:`${t._id}-act-${i}`,children:[/*#__PURE__*/_jsx(\"strong\",{children:act.name}),\": \",act.desc,\" (\",act.challenge,\", \",act.minutes,\" min)\"]})]},i);})}),allDone&&/*#__PURE__*/_jsx(\"button\",{className:\"btn-complete\",onClick:()=>markTemplateComplete(t._id),children:\"\\uD83C\\uDF89 Marcar como completada\"})]},t._id);})]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","templates","setTemplates","completed","setCompleted","loading","setLoading","error","setError","navigate","token","localStorage","getItem","fetch","headers","then","res","status","alert","Error","ok","json","data","init","forEach","t","_id","Set","catch","err","message","finally","toggleActivity","tplId","idx","c","setCopy","has","delete","add","markTemplateComplete","method","console","className","children","length","map","_completed$t$_id","doneCount","size","total","activities","pct","Math","round","allDone","name","description","style","width","act","i","_completed$t$_id2","type","checked","onChange","id","htmlFor","desc","challenge","minutes","onClick"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/pages/PatientTemplatesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/patientTemplates.css';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [completed, setCompleted] = useState({}); // { tplId: Set(activityIndex) }\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    if (!token) return navigate('/login');\r\n\r\n    fetch('/api/patient/templates', {\r\n      headers: { 'Content-Type':'application/json', 'x-auth-token': token }\r\n    })\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          alert('SesiÃ³n expirada');\r\n          navigate('/login');\r\n          throw new Error('Unauthorized');\r\n        }\r\n        if (!res.ok) throw new Error(`Error ${res.status}`);\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setTemplates(data);\r\n        // inicializa sets vacÃ­os\r\n        const init = {};\r\n        data.forEach(t => { init[t._id] = new Set(); });\r\n        setCompleted(init);\r\n      })\r\n      .catch(err => setError(err.message))\r\n      .finally(() => setLoading(false));\r\n  }, [navigate, token]);\r\n\r\n  const toggleActivity = (tplId, idx) => {\r\n    setCompleted(c => {\r\n      const setCopy = new Set(c[tplId]);\r\n      setCopy.has(idx) ? setCopy.delete(idx) : setCopy.add(idx);\r\n      return { ...c, [tplId]: setCopy };\r\n    });\r\n  };\r\n\r\n  const markTemplateComplete = tplId => {\r\n    fetch(`/api/patient/templates/${tplId}/complete`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type':'application/json','x-auth-token':token }\r\n    }).then(() => {\r\n      alert('Â¡Plantilla completada!');\r\n      navigate('/patient/dashboard');\r\n    }).catch(console.error);\r\n  };\r\n\r\n  if (loading) return <div className=\"pt-container\">Cargando plantillasâ€¦</div>;\r\n  if (error)   return <div className=\"pt-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"patient-templates-page\">\r\n      <div className=\"pt-container\">\r\n        <h1>Mis Plantillas Asignadas</h1>\r\n\r\n        {templates.length === 0 ? (\r\n          <div className=\"pt-empty\">ðŸ˜• No tienes plantillas asignadas.</div>\r\n        ) : (\r\n          templates.map(t => {\r\n            const doneCount = completed[t._id]?.size || 0;\r\n            const total     = t.activities.length;\r\n            const pct       = Math.round((doneCount/total)*100);\r\n            const allDone   = doneCount === total;\r\n\r\n            return (\r\n              <div key={t._id} className=\"pt-card\">\r\n                <header>\r\n                  <h2>{t.name}</h2>\r\n                  <small>{t.activities.length} actividades</small>\r\n                </header>\r\n\r\n                <p className=\"pt-desc\">{t.description}</p>\r\n\r\n                <div className=\"pt-progress\">\r\n                  <div\r\n                    className=\"pt-progress-inner\"\r\n                    style={{ width: `${pct}%` }}\r\n                  />\r\n                </div>\r\n                <div className=\"pt-progress-label\">\r\n                  {doneCount} de {total} completadas ({pct}%)\r\n                </div>\r\n\r\n                <ul className=\"pt-activities\">\r\n                  {t.activities.map((act, i) => (\r\n                    <li key={i} className=\"pt-activity\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={completed[t._id]?.has(i)}\r\n                        onChange={() => toggleActivity(t._id, i)}\r\n                        id={`${t._id}-act-${i}`}\r\n                      />\r\n                      <label htmlFor={`${t._id}-act-${i}`}>\r\n                        <strong>{act.name}</strong>: {act.desc} (\r\n                        {act.challenge}, {act.minutes} min)\r\n                      </label>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n\r\n                {allDone && (\r\n                  <button\r\n                    className=\"btn-complete\"\r\n                    onClick={() => markTemplateComplete(t._id)}\r\n                  >\r\n                    ðŸŽ‰ Marcar como completada\r\n                  </button>\r\n                )}\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}