{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\TimeMachineGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport '../styles/timeMachineGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialActivities = [{\n  id: 'futbol',\n  title: 'Jugar al fútbol',\n  icon: '⚽',\n  defaultDuration: 60\n}, {\n  id: 'dibujos',\n  title: 'Ver dibujos animados',\n  icon: '📺',\n  defaultDuration: 60\n}, {\n  id: 'comics',\n  title: 'Leer cómics',\n  icon: '📚',\n  defaultDuration: 60\n}, {\n  id: 'tarea',\n  title: 'Hacer tarea',\n  icon: '📝',\n  defaultDuration: 60\n}, {\n  id: 'videojuegos',\n  title: 'Jugar videojuegos',\n  icon: '🎮',\n  defaultDuration: 60\n}, {\n  id: 'helado',\n  title: 'Comer helado',\n  icon: '🍦',\n  defaultDuration: 60\n}, {\n  id: 'parque',\n  title: 'Ir al parque',\n  icon: '🏞️',\n  defaultDuration: 60\n}, {\n  id: 'banio',\n  title: 'Bañarse',\n  icon: '🛁',\n  defaultDuration: 60\n}, {\n  id: 'dormir',\n  title: 'Dormir',\n  icon: '😴',\n  defaultDuration: 60\n}, {\n  id: 'musica',\n  title: 'Escuchar música',\n  icon: '🎵',\n  defaultDuration: 60\n}, {\n  id: 'bailar',\n  title: 'Bailar',\n  icon: '💃',\n  defaultDuration: 60\n}, {\n  id: 'amigos',\n  title: 'Jugar con amigos',\n  icon: '👫',\n  defaultDuration: 60\n}, {\n  id: 'bicicleta',\n  title: 'Montar en bicicleta',\n  icon: '🚲',\n  defaultDuration: 60\n}, {\n  id: 'dibujar',\n  title: 'Dibujar',\n  icon: '🎨',\n  defaultDuration: 60\n}, {\n  id: 'mascotas',\n  title: 'Jugar con mascotas',\n  icon: '🐶',\n  defaultDuration: 60\n}, {\n  id: 'experimentos',\n  title: 'Hacer experimentos',\n  icon: '🔬',\n  defaultDuration: 60\n}, {\n  id: 'cantar',\n  title: 'Cantar',\n  icon: '🎤',\n  defaultDuration: 60\n}, {\n  id: 'lego',\n  title: 'Construir con LEGO',\n  icon: '🧱',\n  defaultDuration: 60\n}, {\n  id: 'nadar',\n  title: 'Nadar',\n  icon: '🏊',\n  defaultDuration: 60\n}, {\n  id: 'computadora',\n  title: 'Jugar en la computadora',\n  icon: '💻',\n  defaultDuration: 60\n}];\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let i = 0; i < 24; i++) {\n    const label = `${String(i).padStart(2, '0')}:00`;\n    slots.push({\n      id: label,\n      activities: []\n    });\n  }\n  return slots;\n};\nfunction TimeMachineGame() {\n  _s();\n  const [selectedDay, setSelectedDay] = useState('Miércoles');\n  // Se guarda el pool en estado para asegurar su renderizado constante\n  const [poolActivities] = useState(initialActivities);\n  const [timeSlots, setTimeSlots] = useState(generateTimeSlots());\n  const handleDayChange = e => {\n    setSelectedDay(e.target.value);\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId,\n      combine\n    } = result;\n    // Si no se tiene ni destination ni combine, no hacemos nada\n    if (!destination && !combine) return;\n\n    // Ignorar si se suelta en el pool\n    if (destination && destination.droppableId === 'pool') return;\n\n    // Caso de combinación: se soltó sobre otra tarjeta\n    if (combine) {\n      const targetCardId = combine.draggableId;\n      const newSlots = [...timeSlots];\n      // Buscamos en qué slot se encuentra la tarjeta destino\n      const targetSlotIndex = newSlots.findIndex(slot => slot.activities.some(act => act.instanceId === targetCardId));\n      if (targetSlotIndex === -1) return;\n      const targetCardIndex = newSlots[targetSlotIndex].activities.findIndex(act => act.instanceId === targetCardId);\n      // Removemos la tarjeta arrastrada del slot de origen\n      const sourceSlotIndex = newSlots.findIndex(slot => slot.id === source.droppableId);\n      if (sourceSlotIndex === -1) return;\n      const [draggedItem] = newSlots[sourceSlotIndex].activities.splice(source.index, 1);\n      // Insertamos la tarjeta arrastrada justo después de la tarjeta destino\n      newSlots[targetSlotIndex].activities.splice(targetCardIndex + 1, 0, draggedItem);\n      setTimeSlots(newSlots);\n      return;\n    }\n\n    // Caso 1: Copiar desde el pool hacia un slot\n    if (source.droppableId === 'pool') {\n      const originalId = draggableId.replace('pool-', '');\n      const activity = poolActivities.find(act => act.id === originalId);\n      if (!activity) return;\n      const instance = {\n        ...activity,\n        instanceId: `${activity.id}-${Date.now()}`,\n        duration: activity.defaultDuration\n      };\n      const newSlots = [...timeSlots];\n      const slotIndex = newSlots.findIndex(slot => slot.id === destination.droppableId);\n      if (slotIndex === -1) return;\n      newSlots[slotIndex].activities.splice(destination.index, 0, instance);\n      setTimeSlots(newSlots);\n      return;\n    }\n\n    // Caso 2: Mover actividades entre franjas (reordenar)\n    if (source.droppableId !== 'pool' && destination.droppableId !== 'pool') {\n      const newSlots = [...timeSlots];\n      const sourceSlotIndex = newSlots.findIndex(slot => slot.id === source.droppableId);\n      const destinationSlotIndex = newSlots.findIndex(slot => slot.id === destination.droppableId);\n      if (sourceSlotIndex === -1 || destinationSlotIndex === -1) return;\n      const [movedItem] = newSlots[sourceSlotIndex].activities.splice(source.index, 1);\n      newSlots[destinationSlotIndex].activities.splice(destination.index, 0, movedItem);\n      setTimeSlots(newSlots);\n      return;\n    }\n  };\n  const handleDurationChange = (slotId, instanceId, newDuration) => {\n    const updatedSlots = timeSlots.map(slot => {\n      if (slot.id === slotId) {\n        return {\n          ...slot,\n          activities: slot.activities.map(act => act.instanceId === instanceId ? {\n            ...act,\n            duration: newDuration\n          } : act)\n        };\n      }\n      return slot;\n    });\n    setTimeSlots(updatedSlots);\n  };\n  const handleSaveResult = async () => {\n    const payload = {\n      day: selectedDay,\n      timeSlots: timeSlots.filter(slot => slot.activities.length > 0)\n    };\n    try {\n      await axios.post('/api/game', payload, {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      alert('¡Tu día ha sido guardado!');\n    } catch (err) {\n      console.error(err);\n      alert('Error al guardar el resultado.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-machine-game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"tmg-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"La M\\xE1quina del Tiempo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tmg-day-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"day-select\",\n          children: \"Elige un d\\xEDa:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"day-select\",\n          value: selectedDay,\n          onChange: handleDayChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mi\\xE9rcoles\",\n            children: \"Mi\\xE9rcoles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"S\\xE1bado\",\n            children: \"S\\xE1bado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tmg-instructions\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA1Esta es tu m\\xE1quina del tiempo! Arrastra las actividades que normalmente haces un \", selectedDay, \". Ajusta el tiempo deslizando la barra para cada actividad.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tmg-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tmg-pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Actividades Divertidas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"pool\",\n            renderClone: (provided, snapshot, rubric) => {\n              const activity = poolActivities[rubric.source.index];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tmg-activity-card\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tmg-activity-icon\",\n                  children: activity.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tmg-activity-title\",\n                  children: activity.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this);\n            },\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [poolActivities.map((activity, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: `pool-${activity.id}`,\n                index: index,\n                children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tmg-activity-card\",\n                  ref: providedDraggable.innerRef,\n                  ...providedDraggable.draggableProps,\n                  ...providedDraggable.dragHandleProps,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tmg-activity-icon\",\n                    children: activity.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tmg-activity-title\",\n                    children: activity.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this)\n              }, `pool-${activity.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tmg-board\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Organiza tu d\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tmg-slots\",\n            children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tmg-slot\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tmg-slot-header\",\n                children: slot.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: slot.id,\n                isCombineEnabled: true,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tmg-slot-body\",\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  children: [slot.activities.map((act, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: act.instanceId,\n                    index: index,\n                    children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tmg-slot-activity\",\n                      ref: providedDraggable.innerRef,\n                      ...providedDraggable.draggableProps,\n                      ...providedDraggable.dragHandleProps,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tmg-slot-activity-header\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tmg-activity-icon\",\n                          children: act.icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 230,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tmg-activity-title\",\n                          children: act.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tmg-duration-control\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"range\",\n                          min: \"30\",\n                          max: \"120\",\n                          step: \"15\",\n                          value: act.duration,\n                          onChange: e => handleDurationChange(slot.id, act.instanceId, parseInt(e.target.value, 10))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [act.duration, \" min\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 31\n                    }, this)\n                  }, act.instanceId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, slot.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tmg-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tmg-save-btn\",\n        onClick: handleSaveResult,\n        children: \"Guardar mi d\\xEDa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeMachineGame, \"BD+A17VMtH2D2XF5wiIBctjxN58=\");\n_c = TimeMachineGame;\nexport default TimeMachineGame;\nvar _c;\n$RefreshReg$(_c, \"TimeMachineGame\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","axios","jsxDEV","_jsxDEV","initialActivities","id","title","icon","defaultDuration","generateTimeSlots","slots","i","label","String","padStart","push","activities","TimeMachineGame","_s","selectedDay","setSelectedDay","poolActivities","timeSlots","setTimeSlots","handleDayChange","e","target","value","onDragEnd","result","source","destination","draggableId","combine","droppableId","targetCardId","newSlots","targetSlotIndex","findIndex","slot","some","act","instanceId","targetCardIndex","sourceSlotIndex","draggedItem","splice","index","originalId","replace","activity","find","instance","Date","now","duration","slotIndex","destinationSlotIndex","movedItem","handleDurationChange","slotId","newDuration","updatedSlots","map","handleSaveResult","payload","day","filter","length","post","headers","localStorage","getItem","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","renderClone","provided","snapshot","rubric","ref","innerRef","draggableProps","dragHandleProps","droppableProps","providedDraggable","placeholder","isCombineEnabled","type","min","max","step","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TimeMachineGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport '../styles/timeMachineGame.css';\r\n\r\nconst initialActivities = [\r\n  { id: 'futbol', title: 'Jugar al fútbol', icon: '⚽', defaultDuration: 60 },\r\n  { id: 'dibujos', title: 'Ver dibujos animados', icon: '📺', defaultDuration: 60 },\r\n  { id: 'comics', title: 'Leer cómics', icon: '📚', defaultDuration: 60 },\r\n  { id: 'tarea', title: 'Hacer tarea', icon: '📝', defaultDuration: 60 },\r\n  { id: 'videojuegos', title: 'Jugar videojuegos', icon: '🎮', defaultDuration: 60 },\r\n  { id: 'helado', title: 'Comer helado', icon: '🍦', defaultDuration: 60 },\r\n  { id: 'parque', title: 'Ir al parque', icon: '🏞️', defaultDuration: 60 },\r\n  { id: 'banio', title: 'Bañarse', icon: '🛁', defaultDuration: 60 },\r\n  { id: 'dormir', title: 'Dormir', icon: '😴', defaultDuration: 60 },\r\n  { id: 'musica', title: 'Escuchar música', icon: '🎵', defaultDuration: 60 },\r\n  { id: 'bailar', title: 'Bailar', icon: '💃', defaultDuration: 60 },\r\n  { id: 'amigos', title: 'Jugar con amigos', icon: '👫', defaultDuration: 60 },\r\n  { id: 'bicicleta', title: 'Montar en bicicleta', icon: '🚲', defaultDuration: 60 },\r\n  { id: 'dibujar', title: 'Dibujar', icon: '🎨', defaultDuration: 60 },\r\n  { id: 'mascotas', title: 'Jugar con mascotas', icon: '🐶', defaultDuration: 60 },\r\n  { id: 'experimentos', title: 'Hacer experimentos', icon: '🔬', defaultDuration: 60 },\r\n  { id: 'cantar', title: 'Cantar', icon: '🎤', defaultDuration: 60 },\r\n  { id: 'lego', title: 'Construir con LEGO', icon: '🧱', defaultDuration: 60 },\r\n  { id: 'nadar', title: 'Nadar', icon: '🏊', defaultDuration: 60 },\r\n  { id: 'computadora', title: 'Jugar en la computadora', icon: '💻', defaultDuration: 60 }\r\n];\r\n\r\nconst generateTimeSlots = () => {\r\n  const slots = [];\r\n  for (let i = 0; i < 24; i++) {\r\n    const label = `${String(i).padStart(2, '0')}:00`;\r\n    slots.push({ id: label, activities: [] });\r\n  }\r\n  return slots;\r\n};\r\n\r\nfunction TimeMachineGame() {\r\n  const [selectedDay, setSelectedDay] = useState('Miércoles');\r\n  // Se guarda el pool en estado para asegurar su renderizado constante\r\n  const [poolActivities] = useState(initialActivities);\r\n  const [timeSlots, setTimeSlots] = useState(generateTimeSlots());\r\n\r\n  const handleDayChange = (e) => {\r\n    setSelectedDay(e.target.value);\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId, combine } = result;\r\n    // Si no se tiene ni destination ni combine, no hacemos nada\r\n    if (!destination && !combine) return;\r\n\r\n    // Ignorar si se suelta en el pool\r\n    if (destination && destination.droppableId === 'pool') return;\r\n\r\n    // Caso de combinación: se soltó sobre otra tarjeta\r\n    if (combine) {\r\n      const targetCardId = combine.draggableId;\r\n      const newSlots = [...timeSlots];\r\n      // Buscamos en qué slot se encuentra la tarjeta destino\r\n      const targetSlotIndex = newSlots.findIndex(slot =>\r\n        slot.activities.some(act => act.instanceId === targetCardId)\r\n      );\r\n      if (targetSlotIndex === -1) return;\r\n      const targetCardIndex = newSlots[targetSlotIndex].activities.findIndex(act => act.instanceId === targetCardId);\r\n      // Removemos la tarjeta arrastrada del slot de origen\r\n      const sourceSlotIndex = newSlots.findIndex(slot => slot.id === source.droppableId);\r\n      if (sourceSlotIndex === -1) return;\r\n      const [draggedItem] = newSlots[sourceSlotIndex].activities.splice(source.index, 1);\r\n      // Insertamos la tarjeta arrastrada justo después de la tarjeta destino\r\n      newSlots[targetSlotIndex].activities.splice(targetCardIndex + 1, 0, draggedItem);\r\n      setTimeSlots(newSlots);\r\n      return;\r\n    }\r\n\r\n    // Caso 1: Copiar desde el pool hacia un slot\r\n    if (source.droppableId === 'pool') {\r\n      const originalId = draggableId.replace('pool-', '');\r\n      const activity = poolActivities.find(act => act.id === originalId);\r\n      if (!activity) return;\r\n      const instance = {\r\n        ...activity,\r\n        instanceId: `${activity.id}-${Date.now()}`,\r\n        duration: activity.defaultDuration\r\n      };\r\n      const newSlots = [...timeSlots];\r\n      const slotIndex = newSlots.findIndex(slot => slot.id === destination.droppableId);\r\n      if (slotIndex === -1) return;\r\n      newSlots[slotIndex].activities.splice(destination.index, 0, instance);\r\n      setTimeSlots(newSlots);\r\n      return;\r\n    }\r\n\r\n    // Caso 2: Mover actividades entre franjas (reordenar)\r\n    if (source.droppableId !== 'pool' && destination.droppableId !== 'pool') {\r\n      const newSlots = [...timeSlots];\r\n      const sourceSlotIndex = newSlots.findIndex(slot => slot.id === source.droppableId);\r\n      const destinationSlotIndex = newSlots.findIndex(slot => slot.id === destination.droppableId);\r\n      if (sourceSlotIndex === -1 || destinationSlotIndex === -1) return;\r\n      const [movedItem] = newSlots[sourceSlotIndex].activities.splice(source.index, 1);\r\n      newSlots[destinationSlotIndex].activities.splice(destination.index, 0, movedItem);\r\n      setTimeSlots(newSlots);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleDurationChange = (slotId, instanceId, newDuration) => {\r\n    const updatedSlots = timeSlots.map(slot => {\r\n      if (slot.id === slotId) {\r\n        return {\r\n          ...slot,\r\n          activities: slot.activities.map(act =>\r\n            act.instanceId === instanceId ? { ...act, duration: newDuration } : act\r\n          )\r\n        };\r\n      }\r\n      return slot;\r\n    });\r\n    setTimeSlots(updatedSlots);\r\n  };\r\n\r\n  const handleSaveResult = async () => {\r\n    const payload = {\r\n      day: selectedDay,\r\n      timeSlots: timeSlots.filter(slot => slot.activities.length > 0)\r\n    };\r\n    try {\r\n      await axios.post('/api/game', payload, {\r\n        headers: { 'x-auth-token': localStorage.getItem('token') }\r\n      });\r\n      alert('¡Tu día ha sido guardado!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error al guardar el resultado.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-machine-game-container\">\r\n      <header className=\"tmg-header\">\r\n        <h1>La Máquina del Tiempo</h1>\r\n        <div className=\"tmg-day-selector\">\r\n          <label htmlFor=\"day-select\">Elige un día:</label>\r\n          <select id=\"day-select\" value={selectedDay} onChange={handleDayChange}>\r\n            <option value=\"Miércoles\">Miércoles</option>\r\n            <option value=\"Sábado\">Sábado</option>\r\n          </select>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"tmg-instructions\">\r\n        <p>\r\n          ¡Esta es tu máquina del tiempo! Arrastra las actividades que normalmente haces un {selectedDay}.\r\n          Ajusta el tiempo deslizando la barra para cada actividad.\r\n        </p>\r\n      </div>\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"tmg-content\">\r\n          <div className=\"tmg-pool\">\r\n            <h2>Actividades Divertidas</h2>\r\n            <Droppable\r\n              droppableId=\"pool\"\r\n              renderClone={(provided, snapshot, rubric) => {\r\n                const activity = poolActivities[rubric.source.index];\r\n                return (\r\n                  <div\r\n                    className=\"tmg-activity-card\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <span className=\"tmg-activity-icon\">{activity.icon}</span>\r\n                    <span className=\"tmg-activity-title\">{activity.title}</span>\r\n                  </div>\r\n                );\r\n              }}\r\n            >\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {poolActivities.map((activity, index) => (\r\n                    <Draggable\r\n                      key={`pool-${activity.id}`}\r\n                      draggableId={`pool-${activity.id}`}\r\n                      index={index}\r\n                    >\r\n                      {(providedDraggable) => (\r\n                        <div\r\n                          className=\"tmg-activity-card\"\r\n                          ref={providedDraggable.innerRef}\r\n                          {...providedDraggable.draggableProps}\r\n                          {...providedDraggable.dragHandleProps}\r\n                        >\r\n                          <span className=\"tmg-activity-icon\">{activity.icon}</span>\r\n                          <span className=\"tmg-activity-title\">{activity.title}</span>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          <div className=\"tmg-board\">\r\n            <h2>Organiza tu día</h2>\r\n            <div className=\"tmg-slots\">\r\n              {timeSlots.map(slot => (\r\n                <div key={slot.id} className=\"tmg-slot\">\r\n                  <div className=\"tmg-slot-header\">{slot.id}</div>\r\n                  {/* Se activa isCombineEnabled para que las tarjetas sean droppables */}\r\n                  <Droppable droppableId={slot.id} isCombineEnabled={true}>\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"tmg-slot-body\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                      >\r\n                        {slot.activities.map((act, index) => (\r\n                          <Draggable key={act.instanceId} draggableId={act.instanceId} index={index}>\r\n                            {(providedDraggable) => (\r\n                              <div\r\n                                className=\"tmg-slot-activity\"\r\n                                ref={providedDraggable.innerRef}\r\n                                {...providedDraggable.draggableProps}\r\n                                {...providedDraggable.dragHandleProps}\r\n                              >\r\n                                <div className=\"tmg-slot-activity-header\">\r\n                                  <span className=\"tmg-activity-icon\">{act.icon}</span>\r\n                                  <span className=\"tmg-activity-title\">{act.title}</span>\r\n                                </div>\r\n                                <div className=\"tmg-duration-control\">\r\n                                  <input\r\n                                    type=\"range\"\r\n                                    min=\"30\"\r\n                                    max=\"120\"\r\n                                    step=\"15\"\r\n                                    value={act.duration}\r\n                                    onChange={(e) =>\r\n                                      handleDurationChange(\r\n                                        slot.id,\r\n                                        act.instanceId,\r\n                                        parseInt(e.target.value, 10)\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  <span>{act.duration} min</span>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n\r\n      <div className=\"tmg-actions\">\r\n        <button className=\"tmg-save-btn\" onClick={handleSaveResult}>Guardar mi día</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeMachineGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}