{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import axios from'axios';import{useParams,useNavigate}from'react-router-dom';import{Pie,Bar,Line}from'react-chartjs-2';import'chart.js/auto';import'../styles/routinesStats.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const activityCategories={// Mapeo de activityId → categoría\nfutbol:'Juegos',videojuegos:'Juegos',computadora:'Juegos',amigos:'Juegos',mascotas:'Juegos',tarea:'Estudio/Terapia',dibujos:'Ocio tranquilo',comics:'Ocio tranquilo',musica:'Ocio tranquilo',dibujar:'Ocio tranquilo',experimentos:'Ocio tranquilo',lego:'Ocio tranquilo',cantar:'Ocio tranquilo',helado:'Ocio activo',parque:'Ocio activo',bicicleta:'Ocio activo',nadar:'Ocio activo',banio:'Aseo personal',dormir:'Sueño/Descanso'};const allCategories=['Juegos','Estudio/Terapia','Ocio tranquilo','Ocio activo','Aseo personal','Sueño/Descanso'];function RoutinesStats(){const{patientId}=useParams();const navigate=useNavigate();const[results,setResults]=useState([]);const[loading,setLoading]=useState(true);// filtros de rango de fechas\nconst[fromDate,setFromDate]=useState('');const[toDate,setToDate]=useState('');useEffect(()=>{async function fetchResults(){try{const token=localStorage.getItem('token');const res=await axios.get(`https://localhost:8080/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}});// Añadimos campo date de createdAt\nconst data=res.data.map(r=>({...r,date:new Date(r.createdAt)}));setResults(data);}catch(err){console.error('Error fetching game results:',err);}finally{setLoading(false);}}fetchResults();},[patientId]);// Filtramos por rango de fechas\nconst filtered=useMemo(()=>{return results.filter(r=>{if(fromDate&&r.date<new Date(fromDate))return false;if(toDate&&r.date>new Date(toDate))return false;return true;});},[results,fromDate,toDate]);// Métricas:\nconst{totalTimeByCategory,totalTime,avgDurationByActivity,varietyCount,balanceIndex,activePassiveRatio,weeklyTrend,heatmapData,detailedRows}=useMemo(()=>{// acumuladores\nconst timeCat={};const timeAct={};const slotCount={};// para heatmap\nconst dates=[];let total=0;filtered.forEach(r=>{dates.push(r.date);r.timeSlots.forEach(slot=>{slot.activities.forEach(act=>{const dur=act.duration;total+=dur;// categoría\nconst cat=activityCategories[act.activityId]||'Ocio tranquilo';timeCat[cat]=(timeCat[cat]||0)+dur;// actividad\ntimeAct[act.title]=timeAct[act.title]||[];timeAct[act.title].push(dur);// heatmap: identificador day-hour\nconst dayKey=r.date.toISOString().slice(0,10);const hr=slot.slot;slotCount[`${dayKey}|${hr}`]=true;});});});// avg duration per activity\nconst avgAct={};Object.entries(timeAct).forEach(_ref=>{let[title,arr]=_ref;const sum=arr.reduce((a,b)=>a+b,0);avgAct[title]=sum/arr.length;});// variety = número de actividades distintas\nconst variety=Object.keys(timeAct).length;// balance index (Shannon)\nconst ps=Object.values(timeCat).map(v=>v/total);const H=-ps.reduce((sum,p)=>p>0?sum+p*Math.log(p):sum,0);const Hmax=Math.log(allCategories.length);const ibi=Hmax>0?H/Hmax:0;// activo/pasivo\nconst active=timeCat['Juegos']+timeCat['Ocio activo'];const passive=timeCat['Ocio tranquilo']+timeCat['Sueño/Descanso']+(timeCat['Aseo personal']||0);const apRatio={active,passive};// weekly trend: minutos diarios por categoría\nconst trendMap={};// {day: {cat: minutes}}\nfiltered.forEach(r=>{const day=r.date.toLocaleDateString('es-ES',{weekday:'short',day:'numeric',month:'numeric'});const mapCat=trendMap[day]=trendMap[day]||{};r.timeSlots.forEach(slot=>{slot.activities.forEach(act=>{const dur=act.duration;const cat=activityCategories[act.activityId]||'Ocio tranquilo';mapCat[cat]=(mapCat[cat]||0)+dur;});});});const trendDays=Object.keys(trendMap);const weekly={days:trendDays,data:{}};allCategories.forEach(cat=>{weekly.data[cat]=trendDays.map(d=>trendMap[d][cat]||0);});// heatmapData: 2D array [hours][days]\nconst heatDays=trendDays;const heat=Array.from({length:24},(_,h)=>{return heatDays.map(day=>{const key=`${new Date(day.split('/').reverse().join('-')).toISOString().slice(0,10)}|${String(h).padStart(2,'0')}:00`;return slotCount[key]?1:0;});});// detailed rows\nconst rows=[];filtered.forEach(r=>{const day=r.date.toLocaleDateString();r.timeSlots.forEach(slot=>{slot.activities.forEach(act=>{rows.push({day,hour:slot.slot,activity:act.title,duration:act.duration});});});});return{totalTimeByCategory:timeCat,totalTime:total,avgDurationByActivity:avgAct,varietyCount:variety,balanceIndex:ibi,activePassiveRatio:apRatio,weeklyTrend:weekly,heatmapData:{days:heatDays,matrix:heat},detailedRows:rows};},[filtered]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando estad\\xEDsticas\\u2026\"});// Preparar datos para Chart.js\nconst pieData={labels:allCategories,datasets:[{data:allCategories.map(cat=>totalTimeByCategory[cat]||0),backgroundColor:['#6c63ff','#ff6384','#36a2eb','#ff9f40','#4bc0c0','#9966ff']}]};const barData={labels:Object.keys(avgDurationByActivity),datasets:[{label:'Duración media (min)',data:Object.values(avgDurationByActivity),backgroundColor:'#6c63ff'}]};const lineData={labels:weeklyTrend.days,datasets:allCategories.map((cat,i)=>({label:cat,data:weeklyTrend.data[cat],borderColor:['#6c63ff','#ff6384','#36a2eb','#ff9f40','#4bc0c0','#9966ff'][i],fill:false}))};return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-stats\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-btn\",onClick:()=>navigate('/therapist/routines'),children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Rutinas de Paciente\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-row\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde: \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:fromDate,onChange:e=>setFromDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta: \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:toDate,onChange:e=>setToDate(e.target.value)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\xCDndice de Equilibrio\"}),/*#__PURE__*/_jsx(\"p\",{className:\"kpi-value\",children:balanceIndex.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Variedad de Actividades\"}),/*#__PURE__*/_jsx(\"p\",{className:\"kpi-value\",children:varietyCount})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Activo / Pasivo (min)\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"kpi-value\",children:[activePassiveRatio.active,\" / \",activePassiveRatio.passive]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Distribuci\\xF3n por Categor\\xEDa\"}),/*#__PURE__*/_jsx(Pie,{data:pieData})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Duraci\\xF3n Media\"}),/*#__PURE__*/_jsx(Bar,{data:barData})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"charts-row full-width\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container full-width\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Evoluci\\xF3n Semanal\"}),/*#__PURE__*/_jsx(Line,{data:lineData})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Mapa de Calor Horario\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"heatmap-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Hora\"}),heatmapData.days.map(day=>/*#__PURE__*/_jsx(\"th\",{children:day},day))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:heatmapData.matrix.map((row,h)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[String(h).padStart(2,'0'),\":00\"]}),row.map((cell,i)=>/*#__PURE__*/_jsx(\"td\",{className:cell?'occupied':'empty'},i))]},h))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Detalle de Actividades\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"D\\xEDa\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hora\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actividad\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Duraci\\xF3n\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:detailedRows.map((r,i)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:r.day}),/*#__PURE__*/_jsx(\"td\",{children:r.hour}),/*#__PURE__*/_jsx(\"td\",{children:r.activity}),/*#__PURE__*/_jsx(\"td\",{children:r.duration})]},i))})]})]})]});}export default RoutinesStats;","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useParams","useNavigate","Pie","Bar","Line","jsx","_jsx","jsxs","_jsxs","activityCategories","futbol","videojuegos","computadora","amigos","mascotas","tarea","dibujos","comics","musica","dibujar","experimentos","lego","cantar","helado","parque","bicicleta","nadar","banio","dormir","allCategories","RoutinesStats","patientId","navigate","results","setResults","loading","setLoading","fromDate","setFromDate","toDate","setToDate","fetchResults","token","localStorage","getItem","res","get","headers","data","map","r","date","Date","createdAt","err","console","error","filtered","filter","totalTimeByCategory","totalTime","avgDurationByActivity","varietyCount","balanceIndex","activePassiveRatio","weeklyTrend","heatmapData","detailedRows","timeCat","timeAct","slotCount","dates","total","forEach","push","timeSlots","slot","activities","act","dur","duration","cat","activityId","title","dayKey","toISOString","slice","hr","avgAct","Object","entries","_ref","arr","sum","reduce","a","b","length","variety","keys","ps","values","v","H","p","Math","log","Hmax","ibi","active","passive","apRatio","trendMap","day","toLocaleDateString","weekday","month","mapCat","trendDays","weekly","days","d","heatDays","heat","Array","from","_","h","key","split","reverse","join","String","padStart","rows","hour","activity","matrix","children","pieData","labels","datasets","backgroundColor","barData","label","lineData","i","borderColor","fill","className","onClick","type","value","onChange","e","target","toFixed","row","cell"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Pie, Bar, Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport '../styles/routinesStats.css';\r\n\r\nconst activityCategories = {\r\n  // Mapeo de activityId → categoría\r\n  futbol: 'Juegos',\r\n  videojuegos: 'Juegos',\r\n  computadora: 'Juegos',\r\n  amigos: 'Juegos',\r\n  mascotas: 'Juegos',\r\n\r\n  tarea: 'Estudio/Terapia',\r\n  dibujos: 'Ocio tranquilo',\r\n  comics: 'Ocio tranquilo',\r\n  musica: 'Ocio tranquilo',\r\n  dibujar: 'Ocio tranquilo',\r\n  experimentos: 'Ocio tranquilo',\r\n  lego: 'Ocio tranquilo',\r\n  cantar: 'Ocio tranquilo',\r\n\r\n  helado: 'Ocio activo',\r\n  parque: 'Ocio activo',\r\n  bicicleta: 'Ocio activo',\r\n  nadar: 'Ocio activo',\r\n\r\n  banio: 'Aseo personal',\r\n  dormir: 'Sueño/Descanso'\r\n};\r\n\r\nconst allCategories = [\r\n  'Juegos',\r\n  'Estudio/Terapia',\r\n  'Ocio tranquilo',\r\n  'Ocio activo',\r\n  'Aseo personal',\r\n  'Sueño/Descanso'\r\n];\r\n\r\nfunction RoutinesStats() {\r\n  const { patientId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // filtros de rango de fechas\r\n  const [fromDate, setFromDate] = useState('');\r\n  const [toDate, setToDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchResults() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await axios.get(\r\n          `https://localhost:8080/api/game?patientId=${patientId}`,\r\n          { headers: { 'x-auth-token': token } }\r\n        );\r\n        // Añadimos campo date de createdAt\r\n        const data = res.data.map(r => ({\r\n          ...r,\r\n          date: new Date(r.createdAt)\r\n        }));\r\n        setResults(data);\r\n      } catch (err) {\r\n        console.error('Error fetching game results:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchResults();\r\n  }, [patientId]);\r\n\r\n  // Filtramos por rango de fechas\r\n  const filtered = useMemo(() => {\r\n    return results.filter(r => {\r\n      if (fromDate && r.date < new Date(fromDate)) return false;\r\n      if (toDate && r.date > new Date(toDate)) return false;\r\n      return true;\r\n    });\r\n  }, [results, fromDate, toDate]);\r\n\r\n  // Métricas:\r\n  const {\r\n    totalTimeByCategory,\r\n    totalTime,\r\n    avgDurationByActivity,\r\n    varietyCount,\r\n    balanceIndex,\r\n    activePassiveRatio,\r\n    weeklyTrend,\r\n    heatmapData,\r\n    detailedRows\r\n  } = useMemo(() => {\r\n    // acumuladores\r\n    const timeCat = {};\r\n    const timeAct = {};\r\n    const slotCount = {}; // para heatmap\r\n    const dates = [];\r\n\r\n    let total = 0;\r\n\r\n    filtered.forEach(r => {\r\n      dates.push(r.date);\r\n      r.timeSlots.forEach(slot => {\r\n        slot.activities.forEach(act => {\r\n          const dur = act.duration;\r\n          total += dur;\r\n\r\n          // categoría\r\n          const cat = activityCategories[act.activityId] || 'Ocio tranquilo';\r\n          timeCat[cat] = (timeCat[cat] || 0) + dur;\r\n\r\n          // actividad\r\n          timeAct[act.title] = (timeAct[act.title] || []);\r\n          timeAct[act.title].push(dur);\r\n\r\n          // heatmap: identificador day-hour\r\n          const dayKey = r.date.toISOString().slice(0,10);\r\n          const hr = slot.slot;\r\n          slotCount[`${dayKey}|${hr}`] = true;\r\n        });\r\n      });\r\n    });\r\n\r\n    // avg duration per activity\r\n    const avgAct = {};\r\n    Object.entries(timeAct).forEach(([title, arr]) => {\r\n      const sum = arr.reduce((a,b)=>a+b,0);\r\n      avgAct[title] = sum/arr.length;\r\n    });\r\n\r\n    // variety = número de actividades distintas\r\n    const variety = Object.keys(timeAct).length;\r\n\r\n    // balance index (Shannon)\r\n    const ps = Object.values(timeCat).map(v=>v/total);\r\n    const H = -ps.reduce((sum,p)=>(p>0?sum + p*Math.log(p):sum),0);\r\n    const Hmax = Math.log(allCategories.length);\r\n    const ibi = Hmax>0 ? H/Hmax : 0;\r\n\r\n    // activo/pasivo\r\n    const active = timeCat['Juegos'] + timeCat['Ocio activo'];\r\n    const passive = timeCat['Ocio tranquilo'] + timeCat['Sueño/Descanso'] + (timeCat['Aseo personal'] || 0);\r\n    const apRatio = { active, passive };\r\n\r\n    // weekly trend: minutos diarios por categoría\r\n    const trendMap = {}; // {day: {cat: minutes}}\r\n    filtered.forEach(r => {\r\n      const day = r.date.toLocaleDateString('es-ES', { weekday: 'short', day:'numeric', month:'numeric' });\r\n      const mapCat = trendMap[day] = trendMap[day]||{};\r\n      r.timeSlots.forEach(slot=>{\r\n        slot.activities.forEach(act=>{\r\n          const dur=act.duration;\r\n          const cat = activityCategories[act.activityId]||'Ocio tranquilo';\r\n          mapCat[cat] = (mapCat[cat]||0)+dur;\r\n        });\r\n      });\r\n    });\r\n    const trendDays = Object.keys(trendMap);\r\n    const weekly = { days: trendDays, data: {} };\r\n    allCategories.forEach(cat => {\r\n      weekly.data[cat] = trendDays.map(d=>trendMap[d][cat]||0);\r\n    });\r\n\r\n    // heatmapData: 2D array [hours][days]\r\n    const heatDays = trendDays;\r\n    const heat = Array.from({length:24},(_,h)=>{\r\n      return heatDays.map(day=>{\r\n        const key = `${new Date(day.split('/').reverse().join('-')).toISOString().slice(0,10)}|${String(h).padStart(2,'0')}:00`;\r\n        return slotCount[key] ? 1 : 0;\r\n      });\r\n    });\r\n\r\n    // detailed rows\r\n    const rows = [];\r\n    filtered.forEach(r=>{\r\n      const day = r.date.toLocaleDateString();\r\n      r.timeSlots.forEach(slot=>{\r\n        slot.activities.forEach(act=>{\r\n          rows.push({ day, hour: slot.slot, activity: act.title, duration: act.duration });\r\n        });\r\n      });\r\n    });\r\n\r\n    return {\r\n      totalTimeByCategory: timeCat,\r\n      totalTime: total,\r\n      avgDurationByActivity: avgAct,\r\n      varietyCount: variety,\r\n      balanceIndex: ibi,\r\n      activePassiveRatio: apRatio,\r\n      weeklyTrend: weekly,\r\n      heatmapData: { days: heatDays, matrix: heat },\r\n      detailedRows: rows\r\n    };\r\n  }, [filtered]);\r\n\r\n  if (loading) return <p>Cargando estadísticas…</p>;\r\n\r\n  // Preparar datos para Chart.js\r\n  const pieData = {\r\n    labels: allCategories,\r\n    datasets: [{\r\n      data: allCategories.map(cat=> totalTimeByCategory[cat]||0),\r\n      backgroundColor: ['#6c63ff','#ff6384','#36a2eb','#ff9f40','#4bc0c0','#9966ff']\r\n    }]\r\n  };\r\n  const barData = {\r\n    labels: Object.keys(avgDurationByActivity),\r\n    datasets: [{\r\n      label: 'Duración media (min)',\r\n      data: Object.values(avgDurationByActivity),\r\n      backgroundColor: '#6c63ff'\r\n    }]\r\n  };\r\n  const lineData = {\r\n    labels: weeklyTrend.days,\r\n    datasets: allCategories.map((cat,i)=>({\r\n      label: cat,\r\n      data: weeklyTrend.data[cat],\r\n      borderColor: ['#6c63ff','#ff6384','#36a2eb','#ff9f40','#4bc0c0','#9966ff'][i],\r\n      fill: false\r\n    }))\r\n  };\r\n\r\n  return (\r\n    <div className=\"routines-stats\">\r\n      <button className=\"back-btn\" onClick={()=>navigate('/therapist/routines')}>← Volver</button>\r\n      <h2>Rutinas de Paciente</h2>\r\n\r\n      {/* Filtro de fechas */}\r\n      <div className=\"filter-row\">\r\n        <label>\r\n          Desde: <input type=\"date\" value={fromDate} onChange={e=>setFromDate(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Hasta: <input type=\"date\" value={toDate} onChange={e=>setToDate(e.target.value)} />\r\n        </label>\r\n      </div>\r\n\r\n      {/* KPI cards */}\r\n      <div className=\"kpi-cards\">\r\n        <div className=\"card\">\r\n          <h3>Índice de Equilibrio</h3>\r\n          <p className=\"kpi-value\">{balanceIndex.toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h3>Variedad de Actividades</h3>\r\n          <p className=\"kpi-value\">{varietyCount}</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h3>Activo / Pasivo (min)</h3>\r\n          <p className=\"kpi-value\">{activePassiveRatio.active} / {activePassiveRatio.passive}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Gráficos */}\r\n      <div className=\"charts-row\">\r\n        <div className=\"chart-container\">\r\n          <h4>Distribución por Categoría</h4>\r\n          <Pie data={pieData} />\r\n        </div>\r\n        <div className=\"chart-container\">\r\n          <h4>Duración Media</h4>\r\n          <Bar data={barData} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"charts-row full-width\">\r\n        <div className=\"chart-container full-width\">\r\n          <h4>Evolución Semanal</h4>\r\n          <Line data={lineData} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Heatmap */}\r\n      <div className=\"heatmap\">\r\n        <h4>Mapa de Calor Horario</h4>\r\n        <table className=\"heatmap-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Hora</th>\r\n              {heatmapData.days.map(day => <th key={day}>{day}</th>)}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {heatmapData.matrix.map((row, h) => (\r\n              <tr key={h}>\r\n                <td>{String(h).padStart(2,'0')}:00</td>\r\n                {row.map((cell,i) => (\r\n                  <td key={i} className={cell?'occupied':'empty'}></td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Detalle tabla */}\r\n      <div className=\"data-table\">\r\n        <h4>Detalle de Actividades</h4>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Día</th><th>Hora</th><th>Actividad</th><th>Duración</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {detailedRows.map((r,i) => (\r\n              <tr key={i}>\r\n                <td>{r.day}</td>\r\n                <td>{r.hour}</td>\r\n                <td>{r.activity}</td>\r\n                <td>{r.duration}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoutinesStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}