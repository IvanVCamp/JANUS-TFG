{"ast":null,"code":"// src/components/PatientRoutines.js\nimport React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar,LineChart,Line,ResponsiveContainer}from'recharts';import'../styles/therapistRoutines.css';// Mapeo actividad → categoría\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const categoryMap={futbol:'Ocio',dibujos:'Ocio',comics:'Ocio',tarea:'Obligaciones',videojuegos:'Ocio',helado:'Ocio',parque:'Ocio',banio:'Autocuidado',dormir:'Autocuidado',musica:'Ocio',bailar:'Ocio',amigos:'Ocio',bicicleta:'Ocio',dibujar:'Ocio',mascotas:'Ocio',experimentos:'Obligaciones',cantar:'Ocio',lego:'Ocio',nadar:'Autocuidado',computadora:'Ocio'};// Mapeo categoría → grupo\nconst groupMap={Autocuidado:'Autocuidado',Obligaciones:'Obligaciones',Ocio:'Ocio'};// Colores\nconst COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'];function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selected,setSelected]=useState(null);const[metrics,setMetrics]=useState(null);// Traer datos\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(resp=>{setResults(resp.data);// Filtro por últimos 7 días por defecto\nconst now=new Date(),weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// Aplicar filtro de fechas\nuseEffect(()=>{if(!from||!to)return;const fDate=new Date(from),tDate=new Date(to);tDate.setHours(23,59,59,999);setFiltered(results.filter(r=>{const d=new Date(r.createdAt);return d>=fDate&&d<=tDate;}));},[results,from,to]);// Elegir primer día disponible\nuseEffect(()=>{if(filtered.length)setSelected(filtered[0].createdAt);else setSelected(null);},[filtered]);// Calcular métricas\nuseEffect(()=>{if(!selected)return;const res=filtered.find(r=>r.createdAt===selected);if(!res){setMetrics(null);return;}const m=computeMetrics(res,filtered);setMetrics(m);},[selected,filtered]);function computeMetrics(result,allResults){const slots=result.timeSlots||[];const activities=slots.flatMap(sl=>(sl.activities||[]).map(act=>({...act,slot:sl.slot})));const totalMin=activities.reduce((sum,a)=>sum+a.duration,0)||1;// 1. Distribución %\nconst catSum={};activities.forEach(a=>{const c=categoryMap[a.activityId]||'Otros';catSum[c]=(catSum[c]||0)+a.duration;});const distribution=Object.entries(catSum).map(_ref=>{let[name,val]=_ref;return{name,value:+(val/totalMin*100).toFixed(1)};});// 2. Horas absolutas\nconst hours=Object.entries(catSum).map(_ref2=>{let[name,val]=_ref2;return{name,hours:+(val/60).toFixed(2)};});// 3. Diversidad\nconst diversity=new Set(activities.map(a=>a.activityId)).size;// 4. Consistencia (slots cubiertos)\nconst covered=slots.filter(s=>{var _s$activities;return((_s$activities=s.activities)===null||_s$activities===void 0?void 0:_s$activities.length)>0;}).length;const consistency=+(covered/24*100).toFixed(1);// 5. Tiempo del día\nconst periods={Mañana:[6,11],Tarde:[12,17],Noche:[18,23]};const pdSum={Mañana:0,Tarde:0,Noche:0};activities.forEach(a=>{const h=+a.slot.split(':')[0];Object.entries(periods).forEach(_ref3=>{let[p,[s,e]]=_ref3;if(h>=s&&h<=e)pdSum[p]+=a.duration;});});const timeOfDay=Object.entries(pdSum).map(_ref4=>{let[name,val]=_ref4;return{name,hours:+(val/60).toFixed(2)};});// 6. Balance por grupo\nconst grpSum={Autocuidado:0,Obligaciones:0,Ocio:0};activities.forEach(a=>{const cat=categoryMap[a.activityId]||'Ocio';const g=groupMap[cat]||'Ocio';grpSum[g]+=a.duration;});const groupBalance=Object.entries(grpSum).map(_ref5=>{let[subject,val]=_ref5;return{subject,value:+(val/totalMin*100).toFixed(1)};});// 7. Tendencia semanal\nconst trend=allResults.map(r=>{const acts=(r.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>act));const tot=acts.reduce((s,a)=>s+a.duration,0)||1;const sums={Autocuidado:0,Obligaciones:0,Ocio:0};acts.forEach(a=>{const cat=categoryMap[a.activityId]||'Ocio';const g=groupMap[cat]||'Ocio';sums[g]+=a.duration;});return{date:new Date(r.createdAt).toLocaleDateString(),Autocuidado:+(sums.Autocuidado/tot*100).toFixed(1),Obligaciones:+(sums.Obligaciones/tot*100).toFixed(1),Ocio:+(sums.Ocio/tot*100).toFixed(1)};});// 8. Índice de equilibrio global\nconst N=distribution.length||1;const uniform=100/N;const idx=1-distribution.reduce((acc,c)=>acc+Math.abs(c.value-uniform),0)/200;const balanceIndex=+idx.toFixed(2);// 9. Patrón de continuidad\nconst sorted=[...activities].sort((a,b)=>+a.slot.split(':')[0]-+b.slot.split(':')[0]);let contCount=0;for(let i=0;i<sorted.length-1;i++){const c1=categoryMap[sorted[i].activityId]||'Otros';const c2=categoryMap[sorted[i+1].activityId]||'Otros';if(c1===c2)contCount++;}const totalTrans=sorted.length>1?sorted.length-1:1;const continuityIndex=+(contCount/totalTrans*100).toFixed(1);// 10. Correspondencia Mié vs Sáb (Jaccard)\nconst opposite=allResults.filter(r=>r.day!==result.day);const setA=new Set(activities.map(a=>a.activityId));const jaccardArr=opposite.map(r2=>{const acts2=(r2.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>act.activityId));const setB=new Set(acts2);const inter=[...setA].filter(x=>setB.has(x)).length;const union=new Set([...setA,...setB]).size||1;return inter/union;});const avgJ=opposite.length?jaccardArr.reduce((s,v)=>s+v,0)/opposite.length*100:0;const crossDayCorrespondence=+avgJ.toFixed(1);return{distribution,hours,diversity,consistency,timeOfDay,groupBalance,trend,balanceIndex,continuityIndex,crossDayCorrespondence};}return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde: \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta: \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Seleccionar d\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selected||'',onChange:e=>setSelected(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"\\xCDndice Equilibrio: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.balanceIndex})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Continuidad: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.continuityIndex,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Correspondencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.crossDayCorrespondence,\"%\"]})]})]}),metrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Patr\\xF3n de Continuidad\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Porcentaje de transiciones que conservan categor\\xEDa entre franjas horarias consecutivas.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Continuidad',value:metrics.continuityIndex}],children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{domain:[0,100],unit:\"%\"}),/*#__PURE__*/_jsx(Tooltip,{formatter:val=>`${val}%`}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#ff8042\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Correspondencia Mi\\xE9 vs S\\xE1b\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Similaridad de actividades entre un d\\xEDa seleccionado y sus opuestos.\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Jaccard',value:metrics.crossDayCorrespondence}],children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{domain:[0,100],unit:\"%\"}),/*#__PURE__*/_jsx(Tooltip,{formatter:val=>`${val}%`}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#0088FE\"})]})})]})]})]});}export default PatientRoutines;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","LineChart","Line","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","groupMap","Autocuidado","Obligaciones","Ocio","COLORS","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selected","setSelected","metrics","setMetrics","token","localStorage","getItem","get","headers","then","resp","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","fDate","tDate","setHours","filter","r","d","createdAt","length","res","find","m","computeMetrics","result","allResults","slots","timeSlots","activities","flatMap","sl","map","act","slot","totalMin","reduce","sum","a","duration","catSum","forEach","c","activityId","distribution","Object","entries","_ref","name","val","value","toFixed","hours","_ref2","diversity","Set","size","covered","s","_s$activities","consistency","periods","Mañana","Tarde","Noche","pdSum","h","split","_ref3","p","e","timeOfDay","_ref4","grpSum","cat","g","groupBalance","_ref5","subject","trend","acts","tot","sums","date","toLocaleDateString","N","uniform","idx","acc","Math","abs","balanceIndex","sorted","sort","b","contCount","i","c1","c2","totalTrans","continuityIndex","opposite","day","setA","jaccardArr","r2","acts2","setB","inter","x","has","union","avgJ","v","crossDayCorrespondence","className","children","type","onChange","target","width","height","dataKey","domain","unit","formatter","fill"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["// src/components/PatientRoutines.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip, Legend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  LineChart, Line, ResponsiveContainer\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Mapeo actividad → categoría\r\nconst categoryMap = {\r\n  futbol: 'Ocio', dibujos: 'Ocio', comics: 'Ocio',\r\n  tarea: 'Obligaciones', videojuegos: 'Ocio', helado: 'Ocio',\r\n  parque: 'Ocio', banio: 'Autocuidado', dormir: 'Autocuidado',\r\n  musica: 'Ocio', bailar: 'Ocio', amigos: 'Ocio',\r\n  bicicleta: 'Ocio', dibujar: 'Ocio', mascotas: 'Ocio',\r\n  experimentos: 'Obligaciones', cantar: 'Ocio', lego: 'Ocio',\r\n  nadar: 'Autocuidado', computadora: 'Ocio'\r\n};\r\n// Mapeo categoría → grupo\r\nconst groupMap = {\r\n  Autocuidado: 'Autocuidado',\r\n  Obligaciones: 'Obligaciones',\r\n  Ocio: 'Ocio'\r\n};\r\n// Colores\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#0088FE'];\r\n\r\nfunction PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n\r\n  // Traer datos\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    })\r\n    .then(resp => {\r\n      setResults(resp.data);\r\n      // Filtro por últimos 7 días por defecto\r\n      const now = new Date(), weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    })\r\n    .catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // Aplicar filtro de fechas\r\n  useEffect(() => {\r\n    if (!from || !to) return;\r\n    const fDate = new Date(from), tDate = new Date(to);\r\n    tDate.setHours(23,59,59,999);\r\n    setFiltered(results.filter(r => {\r\n      const d = new Date(r.createdAt);\r\n      return d >= fDate && d <= tDate;\r\n    }));\r\n  }, [results, from, to]);\r\n\r\n  // Elegir primer día disponible\r\n  useEffect(() => {\r\n    if (filtered.length) setSelected(filtered[0].createdAt);\r\n    else setSelected(null);\r\n  }, [filtered]);\r\n\r\n  // Calcular métricas\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    const res = filtered.find(r => r.createdAt === selected);\r\n    if (!res) { setMetrics(null); return; }\r\n    const m = computeMetrics(res, filtered);\r\n    setMetrics(m);\r\n  }, [selected, filtered]);\r\n\r\n  function computeMetrics(result, allResults) {\r\n    const slots = result.timeSlots || [];\r\n    const activities = slots.flatMap(sl =>\r\n      (sl.activities || []).map(act => ({ ...act, slot: sl.slot }))\r\n    );\r\n    const totalMin = activities.reduce((sum,a) => sum + a.duration, 0) || 1;\r\n\r\n    // 1. Distribución %\r\n    const catSum = {};\r\n    activities.forEach(a => {\r\n      const c = categoryMap[a.activityId] || 'Otros';\r\n      catSum[c] = (catSum[c] || 0) + a.duration;\r\n    });\r\n    const distribution = Object.entries(catSum).map(([name,val]) => ({\r\n      name, value: +(val/totalMin*100).toFixed(1)\r\n    }));\r\n\r\n    // 2. Horas absolutas\r\n    const hours = Object.entries(catSum).map(([name,val]) => ({\r\n      name, hours: +(val/60).toFixed(2)\r\n    }));\r\n\r\n    // 3. Diversidad\r\n    const diversity = new Set(activities.map(a => a.activityId)).size;\r\n\r\n    // 4. Consistencia (slots cubiertos)\r\n    const covered = slots.filter(s => s.activities?.length > 0).length;\r\n    const consistency = +((covered/24*100)).toFixed(1);\r\n\r\n    // 5. Tiempo del día\r\n    const periods = { Mañana:[6,11], Tarde:[12,17], Noche:[18,23] };\r\n    const pdSum = { Mañana:0, Tarde:0, Noche:0 };\r\n    activities.forEach(a => {\r\n      const h = +a.slot.split(':')[0];\r\n      Object.entries(periods).forEach(([p,[s,e]]) => {\r\n        if (h>=s && h<=e) pdSum[p] += a.duration;\r\n      });\r\n    });\r\n    const timeOfDay = Object.entries(pdSum).map(([name,val]) => ({\r\n      name, hours: +(val/60).toFixed(2)\r\n    }));\r\n\r\n    // 6. Balance por grupo\r\n    const grpSum = { Autocuidado:0, Obligaciones:0, Ocio:0 };\r\n    activities.forEach(a => {\r\n      const cat = categoryMap[a.activityId] || 'Ocio';\r\n      const g = groupMap[cat] || 'Ocio';\r\n      grpSum[g] += a.duration;\r\n    });\r\n    const groupBalance = Object.entries(grpSum).map(([subject,val]) => ({\r\n      subject, value: +(val/totalMin*100).toFixed(1)\r\n    }));\r\n\r\n    // 7. Tendencia semanal\r\n    const trend = allResults.map(r => {\r\n      const acts = (r.timeSlots||[]).flatMap(sl => sl.activities.map(act => act));\r\n      const tot = acts.reduce((s,a)=>s+a.duration,0) || 1;\r\n      const sums = { Autocuidado:0, Obligaciones:0, Ocio:0 };\r\n      acts.forEach(a => {\r\n        const cat = categoryMap[a.activityId] || 'Ocio';\r\n        const g = groupMap[cat] || 'Ocio';\r\n        sums[g] += a.duration;\r\n      });\r\n      return {\r\n        date: new Date(r.createdAt).toLocaleDateString(),\r\n        Autocuidado: +(sums.Autocuidado/tot*100).toFixed(1),\r\n        Obligaciones: +(sums.Obligaciones/tot*100).toFixed(1),\r\n        Ocio: +(sums.Ocio/tot*100).toFixed(1)\r\n      };\r\n    });\r\n\r\n    // 8. Índice de equilibrio global\r\n    const N = distribution.length || 1;\r\n    const uniform = 100/N;\r\n    const idx = 1 - distribution.reduce((acc,c) => acc + Math.abs(c.value-uniform),0)/200;\r\n    const balanceIndex = +idx.toFixed(2);\r\n\r\n    // 9. Patrón de continuidad\r\n    const sorted = [...activities].sort((a,b) => +a.slot.split(':')[0] - +b.slot.split(':')[0]);\r\n    let contCount = 0;\r\n    for(let i=0;i<sorted.length-1;i++){\r\n      const c1 = categoryMap[sorted[i].activityId]||'Otros';\r\n      const c2 = categoryMap[sorted[i+1].activityId]||'Otros';\r\n      if(c1===c2) contCount++;\r\n    }\r\n    const totalTrans = sorted.length>1? sorted.length-1 : 1;\r\n    const continuityIndex = +((contCount/totalTrans*100)).toFixed(1);\r\n\r\n    // 10. Correspondencia Mié vs Sáb (Jaccard)\r\n    const opposite = allResults.filter(r => r.day !== result.day);\r\n    const setA = new Set(activities.map(a=>a.activityId));\r\n    const jaccardArr = opposite.map(r2 => {\r\n      const acts2 = (r2.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>act.activityId));\r\n      const setB = new Set(acts2);\r\n      const inter = [...setA].filter(x=>setB.has(x)).length;\r\n      const union = new Set([...setA,...setB]).size || 1;\r\n      return inter/union;\r\n    });\r\n    const avgJ = opposite.length\r\n      ? jaccardArr.reduce((s,v)=>s+v,0)/opposite.length*100\r\n      : 0;\r\n    const crossDayCorrespondence = +avgJ.toFixed(1);\r\n\r\n    return {\r\n      distribution, hours, diversity, consistency,\r\n      timeOfDay, groupBalance, trend, balanceIndex,\r\n      continuityIndex, crossDayCorrespondence\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <label>Desde: <input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} /></label>\r\n        <label>Hasta: <input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} /></label>\r\n        <label>Seleccionar día:\r\n          <select value={selected||''} onChange={e=>setSelected(e.target.value)}>\r\n            {filtered.map(r=>{\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {metrics && (\r\n        <div className=\"metrics-grid\">\r\n          <div className=\"metric-card\">Diversidad: <strong>{metrics.diversity}</strong></div>\r\n          <div className=\"metric-card\">Consistencia: <strong>{metrics.consistency}%</strong></div>\r\n          <div className=\"metric-card\">Índice Equilibrio: <strong>{metrics.balanceIndex}</strong></div>\r\n          <div className=\"metric-card\">Continuidad: <strong>{metrics.continuityIndex}%</strong></div>\r\n          <div className=\"metric-card\">Correspondencia: <strong>{metrics.crossDayCorrespondence}%</strong></div>\r\n        </div>\r\n      )}\r\n\r\n      {metrics && (\r\n        <div className=\"charts-grid\">\r\n          {/* …gráficos existentes… */}\r\n\r\n          {/* Patrón de Continuidad */}\r\n          <div className=\"chart-block\">\r\n            <h3>Patrón de Continuidad</h3>\r\n            <p>Porcentaje de transiciones que conservan categoría entre franjas horarias consecutivas.</p>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <BarChart data={[{ name:'Continuidad', value:metrics.continuityIndex }]}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis domain={[0,100]} unit=\"%\" />\r\n                <Tooltip formatter={val=>`${val}%`} />\r\n                <Bar dataKey=\"value\" fill=\"#ff8042\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Correspondencia Mié vs Sáb */}\r\n          <div className=\"chart-block\">\r\n            <h3>Correspondencia Mié vs Sáb</h3>\r\n            <p>Similaridad de actividades entre un día seleccionado y sus opuestos.</p>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <BarChart data={[{ name:'Jaccard', value:metrics.crossDayCorrespondence }]}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis domain={[0,100]} unit=\"%\" />\r\n                <Tooltip formatter={val=>`${val}%`} />\r\n                <Bar dataKey=\"value\" fill=\"#0088FE\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRoutines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}