{"ast":null,"code":"// src/components/PatientTemplates.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import'../styles/routineTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplates(){const[instances,setInstances]=useState([]);const[filterTag,setFilterTag]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{const fetchInstances=async()=>{const token=localStorage.getItem('token');const patientId=localStorage.getItem('userId');// asumiendo que lo guardas en login\nif(!token||!patientId){setError('No estás autenticado. Por favor, inicia sesión.');setLoading(false);return;}try{const res=await axios.get(`/api/routines/instances/${patientId}`,{headers:{'x-auth-token':token}});setInstances(Array.isArray(res.data)?res.data:[]);}catch(err){console.error(err);setError('Error al cargar plantillas');}finally{setLoading(false);}};fetchInstances();},[]);const toggleActivity=async(instId,idx)=>{const token=localStorage.getItem('token');const inst=instances.find(i=>i._id===instId);if(!inst)return;const was=inst.completedActivities.includes(idx);try{await axios.post(`/api/routines/instances/${instId}/activities/${idx}`,{completed:!was},{headers:{'x-auth-token':token}});setInstances(prev=>prev.map(i=>i._id!==instId?i:{...i,completedActivities:was?i.completedActivities.filter(n=>n!==idx):[...i.completedActivities,idx]}));}catch(err){console.error(err);setError('No se pudo actualizar la actividad');}};if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando tus plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:error});const filtered=instances.filter(inst=>{var _inst$template$tags;return filterTag?(_inst$template$tags=inst.template.tags)===null||_inst$template$tags===void 0?void 0:_inst$template$tags.includes(filterTag):true;});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"small-input tag-filter\",placeholder:\"Filtrar por etiqueta\",value:filterTag,onChange:e=>setFilterTag(e.target.value)})]}),!filtered.length?/*#__PURE__*/_jsx(\"p\",{children:\"No se encontraron plantillas con esa etiqueta.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:filtered.map(inst=>{var _inst$template$tags2;return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"tpl-title\",children:inst.template.name}),/*#__PURE__*/_jsx(\"button\",{className:\"icon-btn detail-btn\",title:\"Ver detalle\",onClick:()=>navigate(`/patient/templates/${inst._id}`),children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-search\"})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:inst.template.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[\"Asignado el: \",new Date(inst.createdAt).toLocaleDateString(),/*#__PURE__*/_jsx(\"br\",{}),\"Duraci\\xF3n: \",inst.template.duration,\" min | Tags: \",(_inst$template$tags2=inst.template.tags)===null||_inst$template$tags2===void 0?void 0:_inst$template$tags2.join(', ')]}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:inst.template.activities.map((act,i)=>{const completed=inst.completedActivities.includes(i);return/*#__PURE__*/_jsxs(\"li\",{className:\"activity-item\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:completed,onChange:()=>toggleActivity(inst._id,i)}),/*#__PURE__*/_jsxs(\"span\",{className:completed?'completed':'',children:[act.name,\" \\u2013 Nivel \",act.challenge,\" \\u2013 \",act.minutes,\" min\"]})]}),act.desc&&/*#__PURE__*/_jsx(\"p\",{className:\"activity-desc\",children:act.desc})]},i);})})]},inst._id);})})]})});}","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","PatientTemplates","instances","setInstances","filterTag","setFilterTag","loading","setLoading","error","setError","navigate","fetchInstances","token","localStorage","getItem","patientId","res","get","headers","Array","isArray","data","err","console","toggleActivity","instId","idx","inst","find","i","_id","was","completedActivities","includes","post","completed","prev","map","filter","n","children","className","filtered","_inst$template$tags","template","tags","type","placeholder","value","onChange","e","target","length","_inst$template$tags2","name","title","onClick","description","Date","createdAt","toLocaleDateString","duration","join","activities","act","checked","challenge","minutes","desc"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/components/PatientTemplates.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/routineTemplates.css';\r\n\r\nexport default function PatientTemplates() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [filterTag, setFilterTag] = useState('');\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchInstances = async () => {\r\n      const token     = localStorage.getItem('token');\r\n      const patientId = localStorage.getItem('userId'); // asumiendo que lo guardas en login\r\n      if (!token || !patientId) {\r\n        setError('No estás autenticado. Por favor, inicia sesión.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const res = await axios.get(\r\n          `/api/routines/instances/${patientId}`,\r\n          { headers: { 'x-auth-token': token } }\r\n        );\r\n        setInstances(Array.isArray(res.data) ? res.data : []);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Error al cargar plantillas');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchInstances();\r\n  }, []);\r\n\r\n  const toggleActivity = async (instId, idx) => {\r\n    const token = localStorage.getItem('token');\r\n    const inst  = instances.find(i => i._id === instId);\r\n    if (!inst) return;\r\n    const was = inst.completedActivities.includes(idx);\r\n    try {\r\n      await axios.post(\r\n        `/api/routines/instances/${instId}/activities/${idx}`,\r\n        { completed: !was },\r\n        { headers: { 'x-auth-token': token } }\r\n      );\r\n      setInstances(prev =>\r\n        prev.map(i =>\r\n          i._id !== instId\r\n            ? i\r\n            : {\r\n                ...i,\r\n                completedActivities: was\r\n                  ? i.completedActivities.filter(n => n !== idx)\r\n                  : [...i.completedActivities, idx]\r\n              }\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('No se pudo actualizar la actividad');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Cargando tus plantillas…</p>;\r\n  if (error)   return <p className=\"error-msg\">{error}</p>;\r\n\r\n  const filtered = instances.filter(inst =>\r\n    filterTag ? inst.template.tags?.includes(filterTag) : true\r\n  );\r\n\r\n  return (\r\n    <div className=\"routine-templates-page patient-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas Asignadas</h1>\r\n          <input\r\n            type=\"text\"\r\n            className=\"small-input tag-filter\"\r\n            placeholder=\"Filtrar por etiqueta\"\r\n            value={filterTag}\r\n            onChange={e => setFilterTag(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {!filtered.length ? (\r\n          <p>No se encontraron plantillas con esa etiqueta.</p>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {filtered.map(inst => (\r\n              <div key={inst._id} className=\"tpl-card\">\r\n                <div className=\"tpl-card-header\">\r\n                  <h2 className=\"tpl-title\">{inst.template.name}</h2>\r\n                  {/* Botón lupa */}\r\n                  <button\r\n                    className=\"icon-btn detail-btn\"\r\n                    title=\"Ver detalle\"\r\n                    onClick={() => navigate(`/patient/templates/${inst._id}`)}\r\n                  >\r\n                    <i className=\"fa fa-search\"></i>\r\n                  </button>\r\n                </div>\r\n                <p className=\"tpl-desc\">{inst.template.description}</p>\r\n                <div className=\"tpl-meta\">\r\n                  Asignado el: {new Date(inst.createdAt).toLocaleDateString()}<br/>\r\n                  Duración: {inst.template.duration} min | Tags: {inst.template.tags?.join(', ')}\r\n                </div>\r\n                <ul className=\"tpl-activities-list\">\r\n                  {inst.template.activities.map((act, i) => {\r\n                    const completed = inst.completedActivities.includes(i);\r\n                    return (\r\n                      <li key={i} className=\"activity-item\">\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={completed}\r\n                            onChange={() => toggleActivity(inst._id, i)}\r\n                          />\r\n                          <span className={completed ? 'completed' : ''}>\r\n                            {act.name} – Nivel {act.challenge} – {act.minutes} min\r\n                          </span>\r\n                        </label>\r\n                        {act.desc && <p className=\"activity-desc\">{act.desc}</p>}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}