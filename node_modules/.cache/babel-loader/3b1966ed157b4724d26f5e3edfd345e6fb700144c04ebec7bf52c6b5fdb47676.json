{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useHistory}from'react-router-dom';import routineTemplateService from'../services/routineTemplateService';import'../styles/patientTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PatientTemplates(){const[templates,setTemplates]=useState([]);const history=useHistory();// TODO: Replace with actual patient ID retrieval (e.g., from auth context)\nconst patientId=/* e.g., useAuth().user.id */useEffect(()=>{routineTemplateService.getAssignedTemplates(patientId).then(response=>setTemplates(response.data)).catch(error=>console.error('Error fetching templates:',error));},[patientId]);const handleComplete=templateId=>{// Navigate to a detailed completion form for this template\nhistory.push(`/patient/templates/${templateId}/complete`);};return/*#__PURE__*/_jsxs(\"div\",{className:\"patient-templates-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),templates.length?/*#__PURE__*/_jsx(\"div\",{className:\"templates-grid\",children:templates.map(template=>/*#__PURE__*/_jsxs(\"div\",{className:\"template-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:template.title}),/*#__PURE__*/_jsx(\"p\",{children:template.description}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Ejercicios:\"}),\" \",template.routines.length]}),template.dueDate&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fecha de entrega:\"}),\" \",new Date(template.dueDate).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleComplete(template.id),children:\"Completar\"})]},template.id))}):/*#__PURE__*/_jsx(\"p\",{children:\"No hay plantillas asignadas por el momento.\"})]});}export default PatientTemplates;","map":{"version":3,"names":["React","useEffect","useState","useHistory","routineTemplateService","jsx","_jsx","jsxs","_jsxs","PatientTemplates","templates","setTemplates","history","patientId","getAssignedTemplates","then","response","data","catch","error","console","handleComplete","templateId","push","className","children","length","map","template","title","description","routines","dueDate","Date","toLocaleDateString","onClick","id"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport routineTemplateService from '../services/routineTemplateService';\r\nimport '../styles/patientTemplates.css';\r\n\r\nfunction PatientTemplates() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const history = useHistory();\r\n  // TODO: Replace with actual patient ID retrieval (e.g., from auth context)\r\n  const patientId = /* e.g., useAuth().user.id */\r\n  \r\n  useEffect(() => {\r\n    routineTemplateService.getAssignedTemplates(patientId)\r\n      .then(response => setTemplates(response.data))\r\n      .catch(error => console.error('Error fetching templates:', error));\r\n  }, [patientId]);\r\n\r\n  const handleComplete = (templateId) => {\r\n    // Navigate to a detailed completion form for this template\r\n    history.push(`/patient/templates/${templateId}/complete`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-templates-container\">\r\n      <h1>Mis Plantillas Asignadas</h1>\r\n      {templates.length ? (\r\n        <div className=\"templates-grid\">\r\n          {templates.map(template => (\r\n            <div key={template.id} className=\"template-card\">\r\n              <h2>{template.title}</h2>\r\n              <p>{template.description}</p>\r\n              <p><strong>Ejercicios:</strong> {template.routines.length}</p>\r\n              {template.dueDate && (\r\n                <p><strong>Fecha de entrega:</strong> {new Date(template.dueDate).toLocaleDateString()}</p>\r\n              )}\r\n              <button onClick={() => handleComplete(template.id)}>\r\n                Completar\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No hay plantillas asignadas por el momento.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientTemplates;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,MAAO,CAAAC,sBAAsB,KAAM,oCAAoC,CACvE,MAAO,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAAU,OAAO,CAAGT,UAAU,CAAC,CAAC,CAC5B;AACA,KAAM,CAAAU,SAAS,CAAG,6BAElBZ,SAAS,CAAC,IAAM,CACdG,sBAAsB,CAACU,oBAAoB,CAACD,SAAS,CAAC,CACnDE,IAAI,CAACC,QAAQ,EAAIL,YAAY,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7CC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CAAC,CACtE,CAAC,CAAE,CAACN,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAQ,cAAc,CAAIC,UAAU,EAAK,CACrC;AACAV,OAAO,CAACW,IAAI,CAAC,sBAAsBD,UAAU,WAAW,CAAC,CAC3D,CAAC,CAED,mBACEd,KAAA,QAAKgB,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CnB,IAAA,OAAAmB,QAAA,CAAI,0BAAwB,CAAI,CAAC,CAChCf,SAAS,CAACgB,MAAM,cACfpB,IAAA,QAAKkB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5Bf,SAAS,CAACiB,GAAG,CAACC,QAAQ,eACrBpB,KAAA,QAAuBgB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC9CnB,IAAA,OAAAmB,QAAA,CAAKG,QAAQ,CAACC,KAAK,CAAK,CAAC,cACzBvB,IAAA,MAAAmB,QAAA,CAAIG,QAAQ,CAACE,WAAW,CAAI,CAAC,cAC7BtB,KAAA,MAAAiB,QAAA,eAAGnB,IAAA,WAAAmB,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAACG,QAAQ,CAACG,QAAQ,CAACL,MAAM,EAAI,CAAC,CAC7DE,QAAQ,CAACI,OAAO,eACfxB,KAAA,MAAAiB,QAAA,eAAGnB,IAAA,WAAAmB,QAAA,CAAQ,mBAAiB,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAAQ,IAAI,CAACL,QAAQ,CAACI,OAAO,CAAC,CAACE,kBAAkB,CAAC,CAAC,EAAI,CAC3F,cACD5B,IAAA,WAAQ6B,OAAO,CAAEA,CAAA,GAAMd,cAAc,CAACO,QAAQ,CAACQ,EAAE,CAAE,CAAAX,QAAA,CAAC,WAEpD,CAAQ,CAAC,GATDG,QAAQ,CAACQ,EAUd,CACN,CAAC,CACC,CAAC,cAEN9B,IAAA,MAAAmB,QAAA,CAAG,6CAA2C,CAAG,CAClD,EACE,CAAC,CAEV,CAEA,cAAe,CAAAhB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}