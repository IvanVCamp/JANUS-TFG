{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\TaskPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport taskService from '../services/taskService';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../styles/taskPlanner.css';\n\n/** \r\n * Comprueba si dos fechas pertenecen al mismo día (ignora hora/minutos).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isSameDay(d1, d2) {\n  const date1 = new Date(d1);\n  const date2 = new Date(d2);\n  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n}\n\n/**\r\n * Genera un array de slots representando las 24 horas del día:\r\n * [\"00:00\", \"01:00\", \"02:00\", ..., \"23:00\"].\r\n */\nfunction generate24HourSlots() {\n  const slots = [];\n  for (let hour = 0; hour < 24; hour++) {\n    const label = `${String(hour).padStart(2, '0')}:00`;\n    slots.push({\n      id: label,\n      tasks: []\n    });\n  }\n  return slots;\n}\n\n/**\r\n * Devuelve un array con los días de un mes, incluyendo huecos vacíos\r\n * al inicio para alinear la cuadrícula (ej.: si el mes empieza en miércoles).\r\n */\nfunction getMonthDays(year, month) {\n  const days = [];\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDay = new Date(year, month + 1, 0).getDate(); // día 28..31\n  const startWeekDay = firstDayOfMonth.getDay(); // 0=Domingo, 1=Lunes, etc.\n\n  // Huecos \"vacíos\" antes del día 1\n  for (let i = 0; i < startWeekDay; i++) {\n    days.push(null);\n  }\n\n  // Días reales del mes\n  for (let d = 1; d <= lastDay; d++) {\n    days.push(new Date(year, month, d));\n  }\n  return days;\n}\nfunction TaskPlanner() {\n  _s();\n  const navigate = useNavigate();\n\n  // Estado con todas las tareas\n  const [tasks, setTasks] = useState([]);\n\n  // Vista actual: 'month' (mes) o 'day' (día)\n  const [currentView, setCurrentView] = useState('month');\n\n  // Fecha seleccionada para vista diaria\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Slots de 24 horas para la vista diaria\n  const [timeSlots, setTimeSlots] = useState([]);\n\n  // Año y mes actuales para la vista mensual\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n\n  // Modal para crear tarea\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [newTaskData, setNewTaskData] = useState({\n    title: '',\n    description: '',\n    category: 'Personal',\n    startTime: '',\n    endTime: '',\n    reminderTime: ''\n  });\n\n  // Al montar, cargar tareas del backend\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        const data = await taskService.getTasks();\n        setTasks(data);\n      } catch (err) {\n        console.error('Error al obtener tareas:', err);\n      }\n    }\n    fetchTasks();\n  }, []);\n\n  // Generar la lista de 24 horas\n  useEffect(() => {\n    setTimeSlots(generate24HourSlots());\n  }, []);\n\n  // Reasignar tareas a los slots cuando cambien las tareas o la fecha\n  // (solo aplica si estamos en vista diaria)\n  useEffect(() => {\n    if (currentView !== 'day') return;\n\n    // Clonamos la lista de slots vacíos\n    const updatedSlots = generate24HourSlots();\n\n    // Filtrar tareas que pertenecen al día seleccionado\n    const tasksOfDay = tasks.filter(t => isSameDay(t.startTime, selectedDate));\n\n    // Para cada tarea, calculamos su slot por la hora\n    tasksOfDay.forEach(task => {\n      const hour = new Date(task.startTime).getHours();\n      const slotId = `${String(hour).padStart(2, '0')}:00`;\n      const slot = updatedSlots.find(s => s.id === slotId);\n      if (slot) {\n        slot.tasks.push(task);\n      }\n    });\n    setTimeSlots(updatedSlots);\n  }, [tasks, selectedDate, currentView]);\n\n  /** \r\n   * Cambiar a vista diaria cuando se hace click en un día del mes.\r\n   */\n  const handleDayClick = dayDate => {\n    setSelectedDate(dayDate);\n    setCurrentView('day');\n  };\n\n  /** Navegar al mes anterior en la vista mensual */\n  const handlePrevMonth = () => {\n    let newMonth = currentMonth - 1;\n    let newYear = currentYear;\n    if (newMonth < 0) {\n      newMonth = 11;\n      newYear -= 1;\n    }\n    setCurrentMonth(newMonth);\n    setCurrentYear(newYear);\n  };\n\n  /** Navegar al mes siguiente en la vista mensual */\n  const handleNextMonth = () => {\n    let newMonth = currentMonth + 1;\n    let newYear = currentYear;\n    if (newMonth > 11) {\n      newMonth = 0;\n      newYear += 1;\n    }\n    setCurrentMonth(newMonth);\n    setCurrentYear(newYear);\n  };\n\n  /**\r\n   * Manejo del drag & drop en la vista diaria.\r\n   */\n  const onDragEnd = async result => {\n    if (currentView !== 'day') return; // Solo aplica en vista día\n\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return; // Suelto fuera de droppable\n\n    // Si no se cambió nada\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n    try {\n      // Localizamos la tarea arrastrada\n      const task = tasks.find(t => t._id === draggableId);\n      if (!task) return;\n\n      // Nuevo slot (hora) al que se movió\n      const [destHourStr] = destination.droppableId.split(':');\n      const destHour = parseInt(destHourStr, 10);\n\n      // Ajustamos su startTime a la nueva hora, manteniendo el día\n      const newStart = new Date(task.startTime);\n      newStart.setFullYear(selectedDate.getFullYear());\n      newStart.setMonth(selectedDate.getMonth());\n      newStart.setDate(selectedDate.getDate());\n      newStart.setHours(destHour, 0, 0, 0);\n\n      // Ejemplo: endTime = startTime + 1 hora\n      const newEnd = new Date(newStart.getTime() + 60 * 60 * 1000);\n\n      // Actualizamos en backend\n      const updatedTask = await taskService.updateTask(task._id, {\n        startTime: newStart,\n        endTime: newEnd\n      });\n\n      // Refrescamos en estado local\n      setTasks(prev => prev.map(t => t._id === updatedTask._id ? updatedTask : t));\n    } catch (err) {\n      console.error('Error actualizando tarea:', err);\n    }\n  };\n\n  /**\r\n   * Crear una nueva tarea (modal).\r\n   */\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    try {\n      const created = await taskService.createTask(newTaskData);\n      setTasks(prev => [...prev, created]);\n      setShowCreateModal(false);\n      // Reset form\n      setNewTaskData({\n        title: '',\n        description: '',\n        category: 'Personal',\n        startTime: '',\n        endTime: '',\n        reminderTime: ''\n      });\n    } catch (err) {\n      console.error('Error creando tarea:', err);\n    }\n  };\n\n  /** Cerrar sesión (ejemplo) */\n  const handleLogout = () => {\n    navigate('/');\n  };\n\n  // ------------------\n  // VISTA MENSUAL\n  // ------------------\n  const renderMonthView = () => {\n    const daysArray = getMonthDays(currentYear, currentMonth);\n    const monthName = new Date(currentYear, currentMonth).toLocaleString('default', {\n      month: 'long'\n    });\n\n    // Agrupamos en filas de 7 celdas\n    const rows = [];\n    for (let i = 0; i < daysArray.length; i += 7) {\n      rows.push(daysArray.slice(i, i + 7));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-view-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevMonth,\n          children: \"< Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [monthName, \" \", currentYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextMonth,\n          children: \"Siguiente >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"week-days\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Dom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Lun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Mar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Mi\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Jue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Vie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"S\\xE1b\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 97\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"week-row\",\n          children: row.map((day, colIndex) => {\n            if (!day) {\n              // Celda vacía\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-cell empty\"\n              }, colIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 26\n              }, this);\n            }\n            // Tareas del día\n            const dayTasks = tasks.filter(t => isSameDay(t.startTime, day));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-cell\",\n              onClick: () => handleDayClick(day),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-number\",\n                children: day.getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-tasks\",\n                children: [dayTasks.slice(0, 3).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"day-task-item\",\n                  children: [\"\\u2022 \", task.title]\n                }, task._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 25\n                }, this)), dayTasks.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"more-tasks\",\n                  children: [\"+\", dayTasks.length - 3, \" m\\xE1s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, colIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this);\n          })\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ------------------\n  // VISTA DIARIA\n  // ------------------\n  const renderDayView = () => {\n    const dateStr = selectedDate.toLocaleDateString('es-ES', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-view-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentView('month'),\n            children: \"Volver al Mes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: dateStr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slots-container\",\n          children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: slot.id,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slot-column\",\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"slot-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-clock-o slot-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: slot.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tasks-list\",\n                children: [slot.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: task._id,\n                  index: index,\n                  children: providedDrag => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-card\",\n                    ref: providedDrag.innerRef,\n                    ...providedDrag.draggableProps,\n                    ...providedDrag.dragHandleProps,\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"task-title\",\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"task-category\",\n                      children: task.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"task-desc\",\n                      children: task.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 29\n                  }, this)\n                }, task._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)\n          }, slot.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  };\n\n  // ------------------\n  // RENDER PRINCIPAL\n  // ------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-planner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-user-circle user-icon\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-section\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"PLANIFICADOR DE TAREAS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-bell bell-icon\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-sign-out\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Salir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-task-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateModal(true),\n        className: \"create-task-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), \" Nuevo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), currentView === 'month' ? renderMonthView() : renderDayView(), showCreateModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Crear Nueva Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateTask,\n          className: \"create-task-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"T\\xEDtulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTaskData.title,\n            onChange: e => setNewTaskData({\n              ...newTaskData,\n              title: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newTaskData.description,\n            onChange: e => setNewTaskData({\n              ...newTaskData,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Categor\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newTaskData.category,\n            onChange: e => setNewTaskData({\n              ...newTaskData,\n              category: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Personal\",\n              children: \"Personal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Estudio\",\n              children: \"Estudio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Terapia\",\n              children: \"Terapia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ocio\",\n              children: \"Ocio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Otro\",\n              children: \"Otro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Hora de inicio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: newTaskData.startTime,\n            onChange: e => setNewTaskData({\n              ...newTaskData,\n              startTime: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Hora de fin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: newTaskData.endTime,\n            onChange: e => setNewTaskData({\n              ...newTaskData,\n              endTime: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Recordatorio (opcional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: newTaskData.reminderTime,\n            onChange: e => setNewTaskData({\n              ...newTaskData,\n              reminderTime: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-btn\",\n              children: \"Guardar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancel-btn\",\n              onClick: () => setShowCreateModal(false),\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025. JANUS - Planificador de Tareas Avanzado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskPlanner, \"WpKzUYsJtwmueGD3+sPxk3lxVjM=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskPlanner;\nexport default TaskPlanner;\nvar _c;\n$RefreshReg$(_c, \"TaskPlanner\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","taskService","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","isSameDay","d1","d2","date1","Date","date2","getFullYear","getMonth","getDate","generate24HourSlots","slots","hour","label","String","padStart","push","id","tasks","getMonthDays","year","month","days","firstDayOfMonth","lastDay","startWeekDay","getDay","i","d","TaskPlanner","_s","navigate","setTasks","currentView","setCurrentView","selectedDate","setSelectedDate","timeSlots","setTimeSlots","currentYear","setCurrentYear","currentMonth","setCurrentMonth","showCreateModal","setShowCreateModal","newTaskData","setNewTaskData","title","description","category","startTime","endTime","reminderTime","fetchTasks","data","getTasks","err","console","error","updatedSlots","tasksOfDay","filter","t","forEach","task","getHours","slotId","slot","find","s","handleDayClick","dayDate","handlePrevMonth","newMonth","newYear","handleNextMonth","onDragEnd","result","source","destination","draggableId","droppableId","index","_id","destHourStr","split","destHour","parseInt","newStart","setFullYear","setMonth","setDate","setHours","newEnd","getTime","updatedTask","updateTask","prev","map","handleCreateTask","e","preventDefault","created","createTask","handleLogout","renderMonthView","daysArray","monthName","toLocaleString","rows","length","slice","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","day","colIndex","dayTasks","renderDayView","dateStr","toLocaleDateString","provided","ref","innerRef","droppableProps","providedDrag","draggableProps","dragHandleProps","placeholder","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TaskPlanner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport taskService from '../services/taskService';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport '../styles/taskPlanner.css';\r\n\r\n/** \r\n * Comprueba si dos fechas pertenecen al mismo día (ignora hora/minutos).\r\n */\r\nfunction isSameDay(d1, d2) {\r\n  const date1 = new Date(d1);\r\n  const date2 = new Date(d2);\r\n  return (\r\n    date1.getFullYear() === date2.getFullYear() &&\r\n    date1.getMonth() === date2.getMonth() &&\r\n    date1.getDate() === date2.getDate()\r\n  );\r\n}\r\n\r\n/**\r\n * Genera un array de slots representando las 24 horas del día:\r\n * [\"00:00\", \"01:00\", \"02:00\", ..., \"23:00\"].\r\n */\r\nfunction generate24HourSlots() {\r\n  const slots = [];\r\n  for (let hour = 0; hour < 24; hour++) {\r\n    const label = `${String(hour).padStart(2, '0')}:00`;\r\n    slots.push({ id: label, tasks: [] });\r\n  }\r\n  return slots;\r\n}\r\n\r\n/**\r\n * Devuelve un array con los días de un mes, incluyendo huecos vacíos\r\n * al inicio para alinear la cuadrícula (ej.: si el mes empieza en miércoles).\r\n */\r\nfunction getMonthDays(year, month) {\r\n  const days = [];\r\n  const firstDayOfMonth = new Date(year, month, 1);\r\n  const lastDay = new Date(year, month + 1, 0).getDate(); // día 28..31\r\n  const startWeekDay = firstDayOfMonth.getDay(); // 0=Domingo, 1=Lunes, etc.\r\n\r\n  // Huecos \"vacíos\" antes del día 1\r\n  for (let i = 0; i < startWeekDay; i++) {\r\n    days.push(null);\r\n  }\r\n\r\n  // Días reales del mes\r\n  for (let d = 1; d <= lastDay; d++) {\r\n    days.push(new Date(year, month, d));\r\n  }\r\n  return days;\r\n}\r\n\r\nfunction TaskPlanner() {\r\n  const navigate = useNavigate();\r\n\r\n  // Estado con todas las tareas\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Vista actual: 'month' (mes) o 'day' (día)\r\n  const [currentView, setCurrentView] = useState('month');\r\n\r\n  // Fecha seleccionada para vista diaria\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  // Slots de 24 horas para la vista diaria\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n\r\n  // Año y mes actuales para la vista mensual\r\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n\r\n  // Modal para crear tarea\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [newTaskData, setNewTaskData] = useState({\r\n    title: '',\r\n    description: '',\r\n    category: 'Personal',\r\n    startTime: '',\r\n    endTime: '',\r\n    reminderTime: ''\r\n  });\r\n\r\n  // Al montar, cargar tareas del backend\r\n  useEffect(() => {\r\n    async function fetchTasks() {\r\n      try {\r\n        const data = await taskService.getTasks();\r\n        setTasks(data);\r\n      } catch (err) {\r\n        console.error('Error al obtener tareas:', err);\r\n      }\r\n    }\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Generar la lista de 24 horas\r\n  useEffect(() => {\r\n    setTimeSlots(generate24HourSlots());\r\n  }, []);\r\n\r\n  // Reasignar tareas a los slots cuando cambien las tareas o la fecha\r\n  // (solo aplica si estamos en vista diaria)\r\n  useEffect(() => {\r\n    if (currentView !== 'day') return;\r\n\r\n    // Clonamos la lista de slots vacíos\r\n    const updatedSlots = generate24HourSlots();\r\n\r\n    // Filtrar tareas que pertenecen al día seleccionado\r\n    const tasksOfDay = tasks.filter(t => isSameDay(t.startTime, selectedDate));\r\n\r\n    // Para cada tarea, calculamos su slot por la hora\r\n    tasksOfDay.forEach(task => {\r\n      const hour = new Date(task.startTime).getHours();\r\n      const slotId = `${String(hour).padStart(2, '0')}:00`;\r\n      const slot = updatedSlots.find(s => s.id === slotId);\r\n      if (slot) {\r\n        slot.tasks.push(task);\r\n      }\r\n    });\r\n\r\n    setTimeSlots(updatedSlots);\r\n  }, [tasks, selectedDate, currentView]);\r\n\r\n  /** \r\n   * Cambiar a vista diaria cuando se hace click en un día del mes.\r\n   */\r\n  const handleDayClick = (dayDate) => {\r\n    setSelectedDate(dayDate);\r\n    setCurrentView('day');\r\n  };\r\n\r\n  /** Navegar al mes anterior en la vista mensual */\r\n  const handlePrevMonth = () => {\r\n    let newMonth = currentMonth - 1;\r\n    let newYear = currentYear;\r\n    if (newMonth < 0) {\r\n      newMonth = 11;\r\n      newYear -= 1;\r\n    }\r\n    setCurrentMonth(newMonth);\r\n    setCurrentYear(newYear);\r\n  };\r\n\r\n  /** Navegar al mes siguiente en la vista mensual */\r\n  const handleNextMonth = () => {\r\n    let newMonth = currentMonth + 1;\r\n    let newYear = currentYear;\r\n    if (newMonth > 11) {\r\n      newMonth = 0;\r\n      newYear += 1;\r\n    }\r\n    setCurrentMonth(newMonth);\r\n    setCurrentYear(newYear);\r\n  };\r\n\r\n  /**\r\n   * Manejo del drag & drop en la vista diaria.\r\n   */\r\n  const onDragEnd = async (result) => {\r\n    if (currentView !== 'day') return; // Solo aplica en vista día\r\n\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination) return; // Suelto fuera de droppable\r\n\r\n    // Si no se cambió nada\r\n    if (\r\n      source.droppableId === destination.droppableId &&\r\n      source.index === destination.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Localizamos la tarea arrastrada\r\n      const task = tasks.find(t => t._id === draggableId);\r\n      if (!task) return;\r\n\r\n      // Nuevo slot (hora) al que se movió\r\n      const [destHourStr] = destination.droppableId.split(':');\r\n      const destHour = parseInt(destHourStr, 10);\r\n\r\n      // Ajustamos su startTime a la nueva hora, manteniendo el día\r\n      const newStart = new Date(task.startTime);\r\n      newStart.setFullYear(selectedDate.getFullYear());\r\n      newStart.setMonth(selectedDate.getMonth());\r\n      newStart.setDate(selectedDate.getDate());\r\n      newStart.setHours(destHour, 0, 0, 0);\r\n\r\n      // Ejemplo: endTime = startTime + 1 hora\r\n      const newEnd = new Date(newStart.getTime() + 60 * 60 * 1000);\r\n\r\n      // Actualizamos en backend\r\n      const updatedTask = await taskService.updateTask(task._id, {\r\n        startTime: newStart,\r\n        endTime: newEnd\r\n      });\r\n\r\n      // Refrescamos en estado local\r\n      setTasks(prev =>\r\n        prev.map(t => (t._id === updatedTask._id ? updatedTask : t))\r\n      );\r\n    } catch (err) {\r\n      console.error('Error actualizando tarea:', err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Crear una nueva tarea (modal).\r\n   */\r\n  const handleCreateTask = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const created = await taskService.createTask(newTaskData);\r\n      setTasks(prev => [...prev, created]);\r\n      setShowCreateModal(false);\r\n      // Reset form\r\n      setNewTaskData({\r\n        title: '',\r\n        description: '',\r\n        category: 'Personal',\r\n        startTime: '',\r\n        endTime: '',\r\n        reminderTime: ''\r\n      });\r\n    } catch (err) {\r\n      console.error('Error creando tarea:', err);\r\n    }\r\n  };\r\n\r\n  /** Cerrar sesión (ejemplo) */\r\n  const handleLogout = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  // ------------------\r\n  // VISTA MENSUAL\r\n  // ------------------\r\n  const renderMonthView = () => {\r\n    const daysArray = getMonthDays(currentYear, currentMonth);\r\n    const monthName = new Date(currentYear, currentMonth).toLocaleString('default', { month: 'long' });\r\n\r\n    // Agrupamos en filas de 7 celdas\r\n    const rows = [];\r\n    for (let i = 0; i < daysArray.length; i += 7) {\r\n      rows.push(daysArray.slice(i, i + 7));\r\n    }\r\n\r\n    return (\r\n      <div className=\"month-view-container\">\r\n        <div className=\"month-nav\">\r\n          <button onClick={handlePrevMonth}>&lt; Anterior</button>\r\n          <h2>{monthName} {currentYear}</h2>\r\n          <button onClick={handleNextMonth}>Siguiente &gt;</button>\r\n        </div>\r\n\r\n        <div className=\"month-grid\">\r\n          <div className=\"week-days\">\r\n            <div>Dom</div><div>Lun</div><div>Mar</div><div>Mié</div><div>Jue</div><div>Vie</div><div>Sáb</div>\r\n          </div>\r\n          {rows.map((row, rowIndex) => (\r\n            <div className=\"week-row\" key={rowIndex}>\r\n              {row.map((day, colIndex) => {\r\n                if (!day) {\r\n                  // Celda vacía\r\n                  return <div className=\"day-cell empty\" key={colIndex}></div>;\r\n                }\r\n                // Tareas del día\r\n                const dayTasks = tasks.filter(t => isSameDay(t.startTime, day));\r\n                return (\r\n                  <div\r\n                    className=\"day-cell\"\r\n                    key={colIndex}\r\n                    onClick={() => handleDayClick(day)}\r\n                  >\r\n                    <div className=\"day-number\">{day.getDate()}</div>\r\n                    <div className=\"day-tasks\">\r\n                      {dayTasks.slice(0, 3).map((task) => (\r\n                        <div key={task._id} className=\"day-task-item\">\r\n                          • {task.title}\r\n                        </div>\r\n                      ))}\r\n                      {dayTasks.length > 3 && (\r\n                        <div className=\"more-tasks\">\r\n                          +{dayTasks.length - 3} más\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // ------------------\r\n  // VISTA DIARIA\r\n  // ------------------\r\n  const renderDayView = () => {\r\n    const dateStr = selectedDate.toLocaleDateString('es-ES', {\r\n      day: 'numeric', month: 'long', year: 'numeric'\r\n    });\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"day-view-container\">\r\n          <div className=\"day-view-header\">\r\n            <button onClick={() => setCurrentView('month')}>Volver al Mes</button>\r\n            <h2>{dateStr}</h2>\r\n          </div>\r\n\r\n          <div className=\"slots-container\">\r\n            {timeSlots.map(slot => (\r\n              <Droppable droppableId={slot.id} key={slot.id}>\r\n                {(provided) => (\r\n                  <div\r\n                    className=\"slot-column\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                  >\r\n                    <div className=\"slot-header\">\r\n                      <i className=\"fa fa-clock-o slot-icon\"></i>\r\n                      <span>{slot.id}</span>\r\n                    </div>\r\n                    <div className=\"tasks-list\">\r\n                      {slot.tasks.map((task, index) => (\r\n                        <Draggable\r\n                          key={task._id}\r\n                          draggableId={task._id}\r\n                          index={index}\r\n                        >\r\n                          {(providedDrag) => (\r\n                            <div\r\n                              className=\"task-card\"\r\n                              ref={providedDrag.innerRef}\r\n                              {...providedDrag.draggableProps}\r\n                              {...providedDrag.dragHandleProps}\r\n                            >\r\n                              <h4 className=\"task-title\">{task.title}</h4>\r\n                              <p className=\"task-category\">{task.category}</p>\r\n                              <p className=\"task-desc\">{task.description}</p>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n    );\r\n  };\r\n\r\n  // ------------------\r\n  // RENDER PRINCIPAL\r\n  // ------------------\r\n  return (\r\n    <div className=\"task-planner-container\">\r\n      {/* Barra superior */}\r\n      <header className=\"top-bar\">\r\n        <div className=\"left-section\">\r\n          <i className=\"fa fa-user-circle user-icon\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        <div className=\"center-section\">\r\n          <h1 className=\"title\">PLANIFICADOR DE TAREAS</h1>\r\n        </div>\r\n        <div className=\"right-section\">\r\n          <i className=\"fa fa-bell bell-icon\" aria-hidden=\"true\"></i>\r\n          <button className=\"logout-btn\" onClick={handleLogout}>\r\n            <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n            <span>Salir</span>\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Botón para crear tarea */}\r\n      <div className=\"create-task-bar\">\r\n        <button onClick={() => setShowCreateModal(true)} className=\"create-task-btn\">\r\n          <i className=\"fa fa-plus\"></i> Nuevo\r\n        </button>\r\n      </div>\r\n\r\n      {/* Contenido: vista mensual o vista diaria */}\r\n      {currentView === 'month' ? renderMonthView() : renderDayView()}\r\n\r\n      {/* Modal de creación de tarea */}\r\n      {showCreateModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h2>Crear Nueva Tarea</h2>\r\n            <form onSubmit={handleCreateTask} className=\"create-task-form\">\r\n              <label>Título</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newTaskData.title}\r\n                onChange={(e) => setNewTaskData({ ...newTaskData, title: e.target.value })}\r\n                required\r\n              />\r\n\r\n              <label>Descripción</label>\r\n              <textarea\r\n                value={newTaskData.description}\r\n                onChange={(e) => setNewTaskData({ ...newTaskData, description: e.target.value })}\r\n              />\r\n\r\n              <label>Categoría</label>\r\n              <select\r\n                value={newTaskData.category}\r\n                onChange={(e) => setNewTaskData({ ...newTaskData, category: e.target.value })}\r\n              >\r\n                <option value=\"Personal\">Personal</option>\r\n                <option value=\"Estudio\">Estudio</option>\r\n                <option value=\"Terapia\">Terapia</option>\r\n                <option value=\"Ocio\">Ocio</option>\r\n                <option value=\"Otro\">Otro</option>\r\n              </select>\r\n\r\n              <label>Hora de inicio</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                value={newTaskData.startTime}\r\n                onChange={(e) => setNewTaskData({ ...newTaskData, startTime: e.target.value })}\r\n                required\r\n              />\r\n\r\n              <label>Hora de fin</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                value={newTaskData.endTime}\r\n                onChange={(e) => setNewTaskData({ ...newTaskData, endTime: e.target.value })}\r\n                required\r\n              />\r\n\r\n              <label>Recordatorio (opcional)</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                value={newTaskData.reminderTime}\r\n                onChange={(e) => setNewTaskData({ ...newTaskData, reminderTime: e.target.value })}\r\n              />\r\n\r\n              <div className=\"modal-buttons\">\r\n                <button type=\"submit\" className=\"save-btn\">Guardar</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-btn\"\r\n                  onClick={() => setShowCreateModal(false)}\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pie de página */}\r\n      <footer className=\"footer-bar\">\r\n        <p>© 2025. JANUS - Planificador de Tareas Avanzado</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskPlanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}