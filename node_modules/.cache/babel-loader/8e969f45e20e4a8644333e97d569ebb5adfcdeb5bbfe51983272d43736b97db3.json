{"ast":null,"code":"// src/components/PatientTemplatesPage.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import'../styles/routineTemplates.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();useEffect(()=>{const token=localStorage.getItem('token');const storedUser=localStorage.getItem('user');// Si falta token o user, vamos al login\nif(!token||!storedUser){navigate('/login');return;}let user;try{user=JSON.parse(storedUser);}catch(e){console.error('Error parsing user from localStorage',e);navigate('/login');return;}axios.get(`/api/routines/instances/${user.id}`,{headers:{'x-auth-token':token}}).then(res=>{setInstances(res.data);}).catch(err=>{var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||err.message);}).finally(()=>{setLoading(false);});},[navigate]);const markActivity=async(instanceId,idx,completed)=>{const token=localStorage.getItem('token');try{const res=await axios.post(`/api/routines/instances/${instanceId}/activities/${idx}`,{completed},{headers:{'x-auth-token':token}});setInstances(prev=>prev.map(inst=>inst._id===instanceId?{...inst,completedActivities:res.data.completedActivities}:inst));}catch(err){console.error(err);}};const updateStatus=async(instanceId,status)=>{const token=localStorage.getItem('token');try{const res=await axios.put(`/api/routines/instances/${instanceId}/status`,{status},{headers:{'x-auth-token':token}});setInstances(prev=>prev.map(inst=>inst._id===instanceId?{...inst,status:res.data.status}:inst));}catch(err){console.error(err);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"patient-assigns\",children:\"Cargando mis plantillas\\u2026\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"patient-assigns\",children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"patient-assigns\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),instances.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"A\\xFAn no tienes plantillas asignadas.\"}):instances.map(inst=>{const completed=inst.completedActivities||[];const total=inst.template.activities.length;const doneCount=completed.length;const allDone=doneCount===total;return/*#__PURE__*/_jsxs(\"div\",{className:`assign-card ${inst.status?'status-'+inst.status:''}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:inst.template.name}),inst.assignedAt&&/*#__PURE__*/_jsxs(\"small\",{children:[\"Asignada el \",new Date(inst.assignedAt).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"p\",{children:inst.template.description}),/*#__PURE__*/_jsx(\"ul\",{children:inst.template.activities.map((act,idx)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:completed.includes(idx),onChange:()=>markActivity(inst._id,idx,!completed.includes(idx))}),act.name,\" (\",act.minutes,\" min)\",act.challenge&&` – Reto: ${act.challenge}`]})},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"assign-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-complete\",onClick:()=>updateStatus(inst._id,'completed'),disabled:!allDone,children:\"Completar\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-postpone\",onClick:()=>updateStatus(inst._id,'postponed'),disabled:allDone,children:\"Postergar\"})]})]},inst._id);})]});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","instances","setInstances","loading","setLoading","error","setError","navigate","token","localStorage","getItem","storedUser","user","JSON","parse","e","console","get","id","headers","then","res","data","catch","err","_err$response","_err$response$data","response","message","finally","markActivity","instanceId","idx","completed","post","prev","map","inst","_id","completedActivities","updateStatus","status","put","className","children","length","total","template","activities","doneCount","allDone","name","assignedAt","Date","toLocaleDateString","description","act","type","checked","includes","onChange","minutes","challenge","onClick","disabled"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/components/PatientTemplatesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/routineTemplates.css';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n\r\n    // Si falta token o user, vamos al login\r\n    if (!token || !storedUser) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    let user;\r\n    try {\r\n      user = JSON.parse(storedUser);\r\n    } catch (e) {\r\n      console.error('Error parsing user from localStorage', e);\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get(`/api/routines/instances/${user.id}`, {\r\n        headers: { 'x-auth-token': token }\r\n      })\r\n      .then(res => {\r\n        setInstances(res.data);\r\n      })\r\n      .catch(err => {\r\n        setError(err.response?.data?.message || err.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [navigate]);\r\n\r\n  const markActivity = async (instanceId, idx, completed) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const res = await axios.post(\r\n        `/api/routines/instances/${instanceId}/activities/${idx}`,\r\n        { completed },\r\n        { headers: { 'x-auth-token': token } }\r\n      );\r\n      setInstances(prev =>\r\n        prev.map(inst =>\r\n          inst._id === instanceId\r\n            ? { ...inst, completedActivities: res.data.completedActivities }\r\n            : inst\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const updateStatus = async (instanceId, status) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/routines/instances/${instanceId}/status`,\r\n        { status },\r\n        { headers: { 'x-auth-token': token } }\r\n      );\r\n      setInstances(prev =>\r\n        prev.map(inst =>\r\n          inst._id === instanceId ? { ...inst, status: res.data.status } : inst\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"patient-assigns\">Cargando mis plantillas…</div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"patient-assigns\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"patient-assigns\">\r\n      <h1>Mis Plantillas Asignadas</h1>\r\n      {instances.length === 0 ? (\r\n        <p>Aún no tienes plantillas asignadas.</p>\r\n      ) : (\r\n        instances.map(inst => {\r\n          const completed = inst.completedActivities || [];\r\n          const total = inst.template.activities.length;\r\n          const doneCount = completed.length;\r\n          const allDone = doneCount === total;\r\n\r\n          return (\r\n            <div\r\n              key={inst._id}\r\n              className={`assign-card ${inst.status ? 'status-' + inst.status : ''}`}\r\n            >\r\n              <h3>{inst.template.name}</h3>\r\n              {inst.assignedAt && (\r\n                <small>\r\n                  Asignada el {new Date(inst.assignedAt).toLocaleDateString()}\r\n                </small>\r\n              )}\r\n              <p>{inst.template.description}</p>\r\n              <ul>\r\n                {inst.template.activities.map((act, idx) => (\r\n                  <li key={idx}>\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={completed.includes(idx)}\r\n                        onChange={() =>\r\n                          markActivity(inst._id, idx, !completed.includes(idx))\r\n                        }\r\n                      />\r\n                      {act.name} ({act.minutes} min)\r\n                      {act.challenge && ` – Reto: ${act.challenge}`}\r\n                    </label>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <div className=\"assign-actions\">\r\n                <button\r\n                  className=\"btn-complete\"\r\n                  onClick={() => updateStatus(inst._id, 'completed')}\r\n                  disabled={!allDone}\r\n                >\r\n                  Completar\r\n                </button>\r\n                <button\r\n                  className=\"btn-postpone\"\r\n                  onClick={() => updateStatus(inst._id, 'postponed')}\r\n                  disabled={allDone}\r\n                >\r\n                  Postergar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}