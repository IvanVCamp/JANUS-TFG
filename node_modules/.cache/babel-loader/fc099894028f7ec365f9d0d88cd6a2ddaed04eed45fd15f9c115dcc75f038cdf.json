{"ast":null,"code":"// src/pages/PatientTemplatesPage.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import jwt_decode from'jwt-decode';import'../styles/routineTemplates.css';import{FaRegCircle,FaCheckCircle,FaSearch,FaSort}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){const[instances,setInstances]=useState([]);const[filtered,setFiltered]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[search,setSearch]=useState('');const[sortKey,setSortKey]=useState('name');const navigate=useNavigate();const token=localStorage.getItem('token');let patientId;try{patientId=jwt_decode(token).user.id;}catch{navigate('/login');}const headers={'Content-Type':'application/json','x-auth-token':token};// Fetch assigned templates\nuseEffect(()=>{if(!token)return navigate('/login');setLoading(true);fetch(`/api/routines/instances/${patientId}`,{headers}).then(async res=>{if(res.status===401){alert('Sesión expirada. Por favor inicia sesión de nuevo.');return navigate('/login');}if(!res.ok)throw new Error(await res.text());return res.json();}).then(data=>{setInstances(data);setFiltered(data);}).catch(err=>setError(err.message)).finally(()=>setLoading(false));},[patientId,token,navigate]);// Calculate completion percentage\nconst progress=inst=>inst.activities.length===0?0:Math.round(inst.activities.filter(a=>a.completed).length/inst.activities.length*100);// Filter & sort\nuseEffect(()=>{let data=instances.filter(inst=>inst.template.name.toLowerCase().includes(search.toLowerCase()));data.sort((a,b)=>{if(sortKey==='name')return a.template.name.localeCompare(b.template.name);if(sortKey==='progress')return progress(b)-progress(a);return 0;});setFiltered(data);},[search,sortKey,instances]);// Toggle activity completion\nconst toggleActivity=(instanceId,idx)=>{fetch(`/api/routines/instances/${instanceId}/activities/${idx}`,{method:'POST',headers}).then(async res=>{if(res.status===401)throw new Error('Sesión expirada');if(!res.ok)throw new Error(await res.text());return res.json();}).then(updated=>{setInstances(insts=>insts.map(i=>i._id===instanceId?updated:i));}).catch(err=>alert('Error actualizando actividad: '+err.message));};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-sort\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"search-input\",type:\"text\",value:search,onChange:e=>setSearch(e.target.value),placeholder:\"\\uD83D\\uDD0D Buscar...\"}),/*#__PURE__*/_jsx(FaSearch,{className:\"search-icon\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"sort-select\",value:sortKey,onChange:e=>setSortKey(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"name\",children:\"Nombre\"}),/*#__PURE__*/_jsx(\"option\",{value:\"progress\",children:\"Progreso\"})]}),/*#__PURE__*/_jsx(FaSort,{className:\"sort-icon\"})]})]}),filtered.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",style:{marginTop:'2rem'},children:\"\\uD83E\\uDD14 No tienes plantillas asignadas\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:filtered.map(inst=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:inst.template.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:inst.template.description}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${progress(inst)}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[progress(inst),\"% completado \\u2014 Asignada:\",' ',new Date(inst.assignedAt).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"ul\",{className:\"activity-list\",children:inst.activities.map((act,idx)=>/*#__PURE__*/_jsxs(\"li\",{className:\"activity-item\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"activity-toggle\",onClick:()=>toggleActivity(inst._id,idx),children:act.completed?/*#__PURE__*/_jsx(FaCheckCircle,{}):/*#__PURE__*/_jsx(FaRegCircle,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"activity-name\",children:act.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"activity-minutes\",children:[act.minutes,\" min\"]})]})]},idx))})]},inst._id))})]})});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jwt_decode","FaRegCircle","FaCheckCircle","FaSearch","FaSort","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","instances","setInstances","filtered","setFiltered","loading","setLoading","error","setError","search","setSearch","sortKey","setSortKey","navigate","token","localStorage","getItem","patientId","user","id","headers","fetch","then","res","status","alert","ok","Error","text","json","data","catch","err","message","finally","progress","inst","activities","length","Math","round","filter","a","completed","template","name","toLowerCase","includes","sort","b","localeCompare","toggleActivity","instanceId","idx","method","updated","insts","map","i","_id","className","children","type","value","onChange","e","target","placeholder","style","marginTop","description","width","Date","assignedAt","toLocaleDateString","act","onClick","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/pages/PatientTemplatesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport '../styles/routineTemplates.css';\r\nimport { FaRegCircle, FaCheckCircle, FaSearch, FaSort } from 'react-icons/fa';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [filtered, setFiltered]   = useState([]);\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n  const [search, setSearch]       = useState('');\r\n  const [sortKey, setSortKey]     = useState('name');\r\n  const navigate = useNavigate();\r\n\r\n  const token = localStorage.getItem('token');\r\n  let patientId;\r\n  try {\r\n    patientId = jwt_decode(token).user.id;\r\n  } catch {\r\n    navigate('/login');\r\n  }\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': token\r\n  };\r\n\r\n  // Fetch assigned templates\r\n  useEffect(() => {\r\n    if (!token) return navigate('/login');\r\n\r\n    setLoading(true);\r\n    fetch(`/api/routines/instances/${patientId}`, { headers })\r\n      .then(async res => {\r\n        if (res.status === 401) {\r\n          alert('Sesión expirada. Por favor inicia sesión de nuevo.');\r\n          return navigate('/login');\r\n        }\r\n        if (!res.ok) throw new Error(await res.text());\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setInstances(data);\r\n        setFiltered(data);\r\n      })\r\n      .catch(err => setError(err.message))\r\n      .finally(() => setLoading(false));\r\n  }, [patientId, token, navigate]);\r\n\r\n  // Calculate completion percentage\r\n  const progress = inst =>\r\n    inst.activities.length === 0\r\n      ? 0\r\n      : Math.round(\r\n          (inst.activities.filter(a => a.completed).length /\r\n            inst.activities.length) *\r\n            100\r\n        );\r\n\r\n  // Filter & sort\r\n  useEffect(() => {\r\n    let data = instances.filter(inst =>\r\n      inst.template.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    data.sort((a, b) => {\r\n      if (sortKey === 'name')\r\n        return a.template.name.localeCompare(b.template.name);\r\n      if (sortKey === 'progress')\r\n        return progress(b) - progress(a);\r\n      return 0;\r\n    });\r\n    setFiltered(data);\r\n  }, [search, sortKey, instances]);\r\n\r\n  // Toggle activity completion\r\n  const toggleActivity = (instanceId, idx) => {\r\n    fetch(`/api/routines/instances/${instanceId}/activities/${idx}`, {\r\n      method: 'POST',\r\n      headers\r\n    })\r\n      .then(async res => {\r\n        if (res.status === 401) throw new Error('Sesión expirada');\r\n        if (!res.ok) throw new Error(await res.text());\r\n        return res.json();\r\n      })\r\n      .then(updated => {\r\n        setInstances(insts =>\r\n          insts.map(i => (i._id === instanceId ? updated : i))\r\n        );\r\n      })\r\n      .catch(err => alert('Error actualizando actividad: ' + err.message));\r\n  };\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargando plantillas…</div>;\r\n  if (error) return <div className=\"tpl-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"routine-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas</h1>\r\n          <div className=\"search-sort\">\r\n            <input\r\n              className=\"search-input\"\r\n              type=\"text\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n              placeholder=\"🔍 Buscar...\"\r\n            />\r\n            <FaSearch className=\"search-icon\" />\r\n            <select\r\n              className=\"sort-select\"\r\n              value={sortKey}\r\n              onChange={e => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"name\">Nombre</option>\r\n              <option value=\"progress\">Progreso</option>\r\n            </select>\r\n            <FaSort className=\"sort-icon\" />\r\n          </div>\r\n        </div>\r\n\r\n        {filtered.length === 0 ? (\r\n          <div className=\"empty-state\" style={{ marginTop: '2rem' }}>\r\n            🤔 No tienes plantillas asignadas\r\n          </div>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {filtered.map(inst => (\r\n              <div key={inst._id} className=\"tpl-card\">\r\n                <h2>{inst.template.name}</h2>\r\n                <p className=\"tpl-desc\">{inst.template.description}</p>\r\n                {/* Progress Bar */}\r\n                <div className=\"progress-bar\">\r\n                  <div\r\n                    className=\"progress-fill\"\r\n                    style={{ width: `${progress(inst)}%` }}\r\n                  />\r\n                </div>\r\n                <div className=\"tpl-meta\">\r\n                  {progress(inst)}% completado — Asignada:{' '}\r\n                  {new Date(inst.assignedAt).toLocaleDateString()}\r\n                </div>\r\n\r\n                {/* Activities List */}\r\n                <ul className=\"activity-list\">\r\n                  {inst.activities.map((act, idx) => (\r\n                    <li key={idx} className=\"activity-item\">\r\n                      <button\r\n                        className=\"activity-toggle\"\r\n                        onClick={() => toggleActivity(inst._id, idx)}\r\n                      >\r\n                        {act.completed ? (\r\n                          <FaCheckCircle />\r\n                        ) : (\r\n                          <FaRegCircle />\r\n                        )}\r\n                      </button>\r\n                      <div className=\"activity-info\">\r\n                        <span className=\"activity-name\">{act.name}</span>\r\n                        <span className=\"activity-minutes\">\r\n                          {act.minutes} min\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}