{"ast":null,"code":"// src/components/PatientTemplates.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import'../styles/routineTemplates.css';/** Decodifica un JWT de cliente y devuelve el payload como objeto */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function decodeJwt(token){try{const base64Url=token.split('.')[1];const base64=base64Url.replace(/-/g,'+').replace(/_/g,'/');const json=decodeURIComponent(atob(base64).split('').map(c=>'%'+('00'+c.charCodeAt(0).toString(16)).slice(-2)).join(''));return JSON.parse(json);}catch{return null;}}export default function PatientTemplates(){const[instances,setInstances]=useState([]);const[filterTag,setFilterTag]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchInstances=async()=>{var _ref,_payload$id;const token=localStorage.getItem('token');if(!token){setError('No estás autenticado. Por favor, inicia sesión.');setLoading(false);return;}// Extraemos el patientId directamente del JWT\nconst payload=decodeJwt(token);const patientId=(_ref=(_payload$id=payload===null||payload===void 0?void 0:payload.id)!==null&&_payload$id!==void 0?_payload$id:payload===null||payload===void 0?void 0:payload.sub)!==null&&_ref!==void 0?_ref:payload===null||payload===void 0?void 0:payload.userId;if(!patientId){setError('Token inválido: no se pudo obtener el patientId');setLoading(false);return;}try{// GET /api/routines/instances/:patientId\nconst res=await axios.get(`/api/routines/instances/${patientId}`,{headers:{'x-auth-token':token}});// Aseguramos que siempre sea un array\nconst data=Array.isArray(res.data)?res.data:[];setInstances(data);}catch(err){var _err$response,_err$response$data;console.error('Error al cargar instancias:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||'Error al cargar plantillas');}finally{setLoading(false);}};fetchInstances();},[]);const toggleActivity=async(instanceId,idx)=>{const token=localStorage.getItem('token');if(!token)return;// Buscamos la instancia para saber si ya estaba completada\nconst inst=instances.find(i=>i._id===instanceId);if(!inst)return;const wasCompleted=inst.completedActivities.includes(idx);try{// POST /api/routines/instances/:instanceId/activities/:activityIdx\nawait axios.post(`/api/routines/instances/${instanceId}/activities/${idx}`,{completed:!wasCompleted},{headers:{'x-auth-token':token}});// Actualizamos el estado local\nsetInstances(prev=>prev.map(i=>i._id!==instanceId?i:{...i,completedActivities:wasCompleted?i.completedActivities.filter(n=>n!==idx):[...i.completedActivities,idx]}));}catch(err){console.error('Error cambiando actividad:',err);setError('No se pudo actualizar el estado de la actividad');}};if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando tus plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:error});// Filtrado por etiqueta sobre inst.template.tags\nconst filtered=instances.filter(inst=>{var _inst$template$tags;return filterTag?(_inst$template$tags=inst.template.tags)===null||_inst$template$tags===void 0?void 0:_inst$template$tags.includes(filterTag):true;});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page patient-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas Asignadas\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"small-input tag-filter\",placeholder:\"Filtrar por etiqueta\",value:filterTag,onChange:e=>setFilterTag(e.target.value)})]}),filtered.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No se encontraron plantillas con esa etiqueta.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:filtered.map(inst=>{var _inst$template$tags2;return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"tpl-title\",children:inst.template.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:inst.template.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[\"Asignado el:\\xA0\",new Date(inst.createdAt).toLocaleDateString(),' ',\"| Duraci\\xF3n: \",inst.template.duration,\" min | Tags:\",' ',(_inst$template$tags2=inst.template.tags)===null||_inst$template$tags2===void 0?void 0:_inst$template$tags2.join(', ')]}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:inst.template.activities.map((act,i)=>{const completed=inst.completedActivities.includes(i);return/*#__PURE__*/_jsxs(\"li\",{className:\"activity-item\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:completed,onChange:()=>toggleActivity(inst._id,i)}),/*#__PURE__*/_jsxs(\"span\",{className:completed?'completed':'',children:[act.name,\" \\u2013 Nivel \",act.challenge,\" \\u2013 \",act.minutes,' ',\"min\"]})]}),act.desc&&/*#__PURE__*/_jsx(\"p\",{className:\"activity-desc\",children:act.desc})]},i);})})]},inst._id);})})]})});}","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","decodeJwt","token","base64Url","split","base64","replace","json","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","PatientTemplates","instances","setInstances","filterTag","setFilterTag","loading","setLoading","error","setError","fetchInstances","_ref","_payload$id","localStorage","getItem","payload","patientId","id","sub","userId","res","get","headers","data","Array","isArray","err","_err$response","_err$response$data","console","response","msg","toggleActivity","instanceId","idx","inst","find","i","_id","wasCompleted","completedActivities","includes","post","completed","prev","filter","n","children","className","filtered","_inst$template$tags","template","tags","type","placeholder","value","onChange","e","target","length","_inst$template$tags2","name","description","Date","createdAt","toLocaleDateString","duration","activities","act","checked","challenge","minutes","desc"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/components/PatientTemplates.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/routineTemplates.css';\r\n\r\n/** Decodifica un JWT de cliente y devuelve el payload como objeto */\r\nfunction decodeJwt(token) {\r\n  try {\r\n    const base64Url = token.split('.')[1];\r\n    const base64    = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const json      = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    );\r\n    return JSON.parse(json);\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default function PatientTemplates() {\r\n  const [instances, setInstances] = useState([]);\r\n  const [filterTag, setFilterTag] = useState('');\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInstances = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('No estás autenticado. Por favor, inicia sesión.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Extraemos el patientId directamente del JWT\r\n      const payload   = decodeJwt(token);\r\n      const patientId = payload?.id ?? payload?.sub ?? payload?.userId;\r\n      if (!patientId) {\r\n        setError('Token inválido: no se pudo obtener el patientId');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // GET /api/routines/instances/:patientId\r\n        const res = await axios.get(\r\n          `/api/routines/instances/${patientId}`,\r\n          { headers: { 'x-auth-token': token } }\r\n        );\r\n\r\n        // Aseguramos que siempre sea un array\r\n        const data = Array.isArray(res.data) ? res.data : [];\r\n        setInstances(data);\r\n      } catch (err) {\r\n        console.error('Error al cargar instancias:', err);\r\n        setError(err.response?.data?.msg || 'Error al cargar plantillas');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInstances();\r\n  }, []);\r\n\r\n  const toggleActivity = async (instanceId, idx) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return;\r\n\r\n    // Buscamos la instancia para saber si ya estaba completada\r\n    const inst = instances.find(i => i._id === instanceId);\r\n    if (!inst) return;\r\n    const wasCompleted = inst.completedActivities.includes(idx);\r\n\r\n    try {\r\n      // POST /api/routines/instances/:instanceId/activities/:activityIdx\r\n      await axios.post(\r\n        `/api/routines/instances/${instanceId}/activities/${idx}`,\r\n        { completed: !wasCompleted },\r\n        { headers: { 'x-auth-token': token } }\r\n      );\r\n\r\n      // Actualizamos el estado local\r\n      setInstances(prev =>\r\n        prev.map(i =>\r\n          i._id !== instanceId\r\n            ? i\r\n            : {\r\n                ...i,\r\n                completedActivities: wasCompleted\r\n                  ? i.completedActivities.filter(n => n !== idx)\r\n                  : [...i.completedActivities, idx]\r\n              }\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error('Error cambiando actividad:', err);\r\n      setError('No se pudo actualizar el estado de la actividad');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Cargando tus plantillas…</p>;\r\n  if (error)   return <p className=\"error-msg\">{error}</p>;\r\n\r\n  // Filtrado por etiqueta sobre inst.template.tags\r\n  const filtered = instances.filter(inst =>\r\n    filterTag\r\n      ? inst.template.tags?.includes(filterTag)\r\n      : true\r\n  );\r\n\r\n  return (\r\n    <div className=\"routine-templates-page patient-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas Asignadas</h1>\r\n          <input\r\n            type=\"text\"\r\n            className=\"small-input tag-filter\"\r\n            placeholder=\"Filtrar por etiqueta\"\r\n            value={filterTag}\r\n            onChange={e => setFilterTag(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {filtered.length === 0 ? (\r\n          <p>No se encontraron plantillas con esa etiqueta.</p>\r\n        ) : (\r\n          <div className=\"tpl-grid\">\r\n            {filtered.map(inst => (\r\n              <div key={inst._id} className=\"tpl-card\">\r\n                <h2 className=\"tpl-title\">{inst.template.name}</h2>\r\n                <p className=\"tpl-desc\">{inst.template.description}</p>\r\n                <div className=\"tpl-meta\">\r\n                  Asignado el:&nbsp;\r\n                  {new Date(inst.createdAt).toLocaleDateString()}{' '}\r\n                  | Duración: {inst.template.duration} min | Tags:{' '}\r\n                  {inst.template.tags?.join(', ')}\r\n                </div>\r\n\r\n                <ul className=\"tpl-activities-list\">\r\n                  {inst.template.activities.map((act, i) => {\r\n                    const completed = inst.completedActivities.includes(i);\r\n                    return (\r\n                      <li key={i} className=\"activity-item\">\r\n                        <label>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={completed}\r\n                            onChange={() => toggleActivity(inst._id, i)}\r\n                          />\r\n                          <span className={completed ? 'completed' : ''}>\r\n                            {act.name} – Nivel {act.challenge} – {act.minutes}{' '}\r\n                            min\r\n                          </span>\r\n                        </label>\r\n                        {act.desc && (\r\n                          <p className=\"activity-desc\">{act.desc}</p>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}