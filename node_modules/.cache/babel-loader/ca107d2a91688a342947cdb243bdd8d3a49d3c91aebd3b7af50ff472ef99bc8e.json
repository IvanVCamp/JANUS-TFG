{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\MiPlaneta.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/miPlaneta.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: 'estadio',\n  title: 'Estadio',\n  icon: '🏟️'\n}, {\n  id: 'parque',\n  title: 'Parque',\n  icon: '🏞️'\n}, {\n  id: 'colegio',\n  title: 'Colegio',\n  icon: '🏫'\n}, {\n  id: 'museo',\n  title: 'Museo',\n  icon: '🏛️'\n}, {\n  id: 'teatro',\n  title: 'Teatro',\n  icon: '🎭'\n}, {\n  id: 'centro_comercial',\n  title: 'Centro Comercial',\n  icon: '🏬'\n}, {\n  id: 'biblioteca',\n  title: 'Biblioteca',\n  icon: '📚'\n}];\nconst sizes = ['small', 'medium', 'large'];\nconst generatePlanetZones = () => {\n  // Para este ejemplo, definimos zonas preestablecidas (por ejemplo, 4 regiones)\n  return [{\n    id: 'norte',\n    label: 'Norte',\n    placements: []\n  }, {\n    id: 'sur',\n    label: 'Sur',\n    placements: []\n  }, {\n    id: 'este',\n    label: 'Este',\n    placements: []\n  }, {\n    id: 'oeste',\n    label: 'Oeste',\n    placements: []\n  }];\n};\nfunction MiPlaneta() {\n  _s();\n  const navigate = useNavigate();\n  const [elements] = useState(initialElements);\n  const [planetZones, setPlanetZones] = useState(generatePlanetZones());\n  const [zoom, setZoom] = useState(1);\n\n  // Verificar token y redirigir si no existe\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) navigate('/');\n  }, [navigate]);\n  const handleZoomChange = e => {\n    setZoom(parseFloat(e.target.value));\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    // Si el elemento viene del pool, creamos una nueva instancia\n    if (source.droppableId === 'pool' && destination.droppableId !== 'pool') {\n      // extraer id original\n      const originalId = draggableId.replace('pool-', '');\n      const element = elements.find(el => el.id === originalId);\n      if (!element) return;\n      // Se crea una instancia con tamaño por defecto (medium)\n      const instance = {\n        ...element,\n        instanceId: `${element.id}-${Date.now()}`,\n        size: 'medium',\n        // Se puede guardar la zona destino como posición (en este ejemplo, el id de la zona)\n        zone: destination.droppableId\n      };\n      const newZones = planetZones.map(zone => {\n        if (zone.id === destination.droppableId) {\n          return {\n            ...zone,\n            placements: [...zone.placements, instance]\n          };\n        }\n        return zone;\n      });\n      setPlanetZones(newZones);\n      return;\n    }\n\n    // Movimiento dentro de una zona: reordenar\n    if (source.droppableId !== 'pool' && destination.droppableId !== 'pool' && source.droppableId === destination.droppableId) {\n      const newZones = planetZones.map(zone => {\n        if (zone.id === source.droppableId) {\n          const newPlacements = Array.from(zone.placements);\n          const [movedItem] = newPlacements.splice(source.index, 1);\n          newPlacements.splice(destination.index, 0, movedItem);\n          return {\n            ...zone,\n            placements: newPlacements\n          };\n        }\n        return zone;\n      });\n      setPlanetZones(newZones);\n      return;\n    }\n    // (Opcional) permitir mover entre zonas si se desea\n  };\n\n  // Cambiar tamaño de un elemento: ciclos entre small, medium y large\n  const handleSizeChange = (zoneId, instanceId) => {\n    const newZones = planetZones.map(zone => {\n      if (zone.id === zoneId) {\n        const newPlacements = zone.placements.map(item => {\n          if (item.instanceId === instanceId) {\n            const currentIndex = sizes.indexOf(item.size);\n            const newSize = sizes[(currentIndex + 1) % sizes.length];\n            return {\n              ...item,\n              size: newSize\n            };\n          }\n          return item;\n        });\n        return {\n          ...zone,\n          placements: newPlacements\n        };\n      }\n      return zone;\n    });\n    setPlanetZones(newZones);\n  };\n\n  // Guardar configuración del planeta en el backend\n  const handleSavePlanet = async () => {\n    const token = localStorage.getItem('token');\n    // Transformamos la información para enviar: cada zona con sus placements\n    const payload = {\n      zoom,\n      zones: planetZones.map(zone => ({\n        zone: zone.id,\n        placements: zone.placements.map(item => ({\n          elementId: item.id,\n          title: item.title,\n          icon: item.icon,\n          size: item.size,\n          // Aquí podríamos enviar posición (en este ejemplo, la zona es la posición)\n          zone: zone.id\n        }))\n      }))\n    };\n    try {\n      await axios.post('http://localhost:5000/api/planet', payload, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      alert('¡Tu planeta ha sido guardado!');\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(err);\n      alert('Error al guardar el planeta.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mi-planeta-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mp-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mp-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-dashboard-btn\",\n          onClick: () => navigate('/dashboard'),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mi Planeta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Este es TU PLANETA, ll\\xE9nalo con las cosas que m\\xE1s te gustan hacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cada opci\\xF3n tiene tres tama\\xF1os diferentes. Elige el tama\\xF1o que mejor represente cu\\xE1nto te gusta: m\\xE1s grande si te encanta, mediano si te gusta, y peque\\xF1o si te gusta menos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"zoom-range\",\n        children: \"Zoom del planeta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"zoom-range\",\n        min: \"0.5\",\n        max: \"2\",\n        step: \"0.1\",\n        value: zoom,\n        onChange: handleZoomChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mp-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mp-pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Elementos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"pool\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [elements.map((el, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: `pool-${el.id}`,\n                index: index,\n                children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mp-element-card\",\n                  ref: providedDraggable.innerRef,\n                  ...providedDraggable.draggableProps,\n                  ...providedDraggable.dragHandleProps,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mp-element-icon\",\n                    children: el.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mp-element-title\",\n                    children: el.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this)\n              }, `pool-${el.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mp-planet-area\",\n          style: {\n            transform: `scale(${zoom})`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tu Planeta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mp-zones\",\n            children: planetZones.map(zone => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mp-zone\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: zone.id.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: zone.id,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mp-zone-drop\",\n                  ref: provided.innerRef,\n                  ...provided.droppableProps,\n                  children: [zone.placements.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.instanceId,\n                    index: index,\n                    children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `mp-placed-element ${item.size}`,\n                      ref: providedDraggable.innerRef,\n                      ...providedDraggable.draggableProps,\n                      ...providedDraggable.dragHandleProps,\n                      onDoubleClick: () => handleSizeChange(zone.id, item.instanceId),\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"mp-element-icon\",\n                        children: item.icon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"mp-element-title\",\n                        children: item.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 31\n                    }, this)\n                  }, item.instanceId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, zone.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mp-save-btn\",\n        onClick: handleSavePlanet,\n        children: \"Guardar mi planeta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mp-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2025 \\xA9 Iv\\xE1n Vela Campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(MiPlaneta, \"POacGs5sfq/m17oLtWNiS1YxzQg=\", false, function () {\n  return [useNavigate];\n});\n_c = MiPlaneta;\nexport default MiPlaneta;\nvar _c;\n$RefreshReg$(_c, \"MiPlaneta\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","useNavigate","axios","jsxDEV","_jsxDEV","initialElements","id","title","icon","sizes","generatePlanetZones","label","placements","MiPlaneta","_s","navigate","elements","planetZones","setPlanetZones","zoom","setZoom","token","localStorage","getItem","handleZoomChange","e","parseFloat","target","value","onDragEnd","result","source","destination","draggableId","droppableId","originalId","replace","element","find","el","instance","instanceId","Date","now","size","zone","newZones","map","newPlacements","Array","from","movedItem","splice","index","handleSizeChange","zoneId","item","currentIndex","indexOf","newSize","length","handleSavePlanet","payload","zones","elementId","post","headers","alert","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","min","max","step","onChange","provided","ref","innerRef","droppableProps","providedDraggable","draggableProps","dragHandleProps","placeholder","style","transform","toUpperCase","onDoubleClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/MiPlaneta.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/miPlaneta.css';\r\n\r\nconst initialElements = [\r\n  { id: 'estadio', title: 'Estadio', icon: '🏟️' },\r\n  { id: 'parque', title: 'Parque', icon: '🏞️' },\r\n  { id: 'colegio', title: 'Colegio', icon: '🏫' },\r\n  { id: 'museo', title: 'Museo', icon: '🏛️' },\r\n  { id: 'teatro', title: 'Teatro', icon: '🎭' },\r\n  { id: 'centro_comercial', title: 'Centro Comercial', icon: '🏬' },\r\n  { id: 'biblioteca', title: 'Biblioteca', icon: '📚' }\r\n];\r\n\r\nconst sizes = ['small', 'medium', 'large'];\r\n\r\nconst generatePlanetZones = () => {\r\n  // Para este ejemplo, definimos zonas preestablecidas (por ejemplo, 4 regiones)\r\n  return [\r\n    { id: 'norte', label: 'Norte', placements: [] },\r\n    { id: 'sur', label: 'Sur', placements: [] },\r\n    { id: 'este', label: 'Este', placements: [] },\r\n    { id: 'oeste', label: 'Oeste', placements: [] }\r\n  ];\r\n};\r\n\r\nfunction MiPlaneta() {\r\n  const navigate = useNavigate();\r\n  const [elements] = useState(initialElements);\r\n  const [planetZones, setPlanetZones] = useState(generatePlanetZones());\r\n  const [zoom, setZoom] = useState(1);\r\n\r\n  // Verificar token y redirigir si no existe\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) navigate('/');\r\n  }, [navigate]);\r\n\r\n  const handleZoomChange = (e) => {\r\n    setZoom(parseFloat(e.target.value));\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination) return;\r\n    // Si el elemento viene del pool, creamos una nueva instancia\r\n    if (source.droppableId === 'pool' && destination.droppableId !== 'pool') {\r\n      // extraer id original\r\n      const originalId = draggableId.replace('pool-', '');\r\n      const element = elements.find(el => el.id === originalId);\r\n      if (!element) return;\r\n      // Se crea una instancia con tamaño por defecto (medium)\r\n      const instance = {\r\n        ...element,\r\n        instanceId: `${element.id}-${Date.now()}`,\r\n        size: 'medium',\r\n        // Se puede guardar la zona destino como posición (en este ejemplo, el id de la zona)\r\n        zone: destination.droppableId\r\n      };\r\n      const newZones = planetZones.map(zone => {\r\n        if (zone.id === destination.droppableId) {\r\n          return { ...zone, placements: [...zone.placements, instance] };\r\n        }\r\n        return zone;\r\n      });\r\n      setPlanetZones(newZones);\r\n      return;\r\n    }\r\n\r\n    // Movimiento dentro de una zona: reordenar\r\n    if (source.droppableId !== 'pool' && destination.droppableId !== 'pool' && source.droppableId === destination.droppableId) {\r\n      const newZones = planetZones.map(zone => {\r\n        if (zone.id === source.droppableId) {\r\n          const newPlacements = Array.from(zone.placements);\r\n          const [movedItem] = newPlacements.splice(source.index, 1);\r\n          newPlacements.splice(destination.index, 0, movedItem);\r\n          return { ...zone, placements: newPlacements };\r\n        }\r\n        return zone;\r\n      });\r\n      setPlanetZones(newZones);\r\n      return;\r\n    }\r\n    // (Opcional) permitir mover entre zonas si se desea\r\n  };\r\n\r\n  // Cambiar tamaño de un elemento: ciclos entre small, medium y large\r\n  const handleSizeChange = (zoneId, instanceId) => {\r\n    const newZones = planetZones.map(zone => {\r\n      if (zone.id === zoneId) {\r\n        const newPlacements = zone.placements.map(item => {\r\n          if (item.instanceId === instanceId) {\r\n            const currentIndex = sizes.indexOf(item.size);\r\n            const newSize = sizes[(currentIndex + 1) % sizes.length];\r\n            return { ...item, size: newSize };\r\n          }\r\n          return item;\r\n        });\r\n        return { ...zone, placements: newPlacements };\r\n      }\r\n      return zone;\r\n    });\r\n    setPlanetZones(newZones);\r\n  };\r\n\r\n  // Guardar configuración del planeta en el backend\r\n  const handleSavePlanet = async () => {\r\n    const token = localStorage.getItem('token');\r\n    // Transformamos la información para enviar: cada zona con sus placements\r\n    const payload = {\r\n      zoom,\r\n      zones: planetZones.map(zone => ({\r\n        zone: zone.id,\r\n        placements: zone.placements.map(item => ({\r\n          elementId: item.id,\r\n          title: item.title,\r\n          icon: item.icon,\r\n          size: item.size,\r\n          // Aquí podríamos enviar posición (en este ejemplo, la zona es la posición)\r\n          zone: zone.id\r\n        }))\r\n      }))\r\n    };\r\n    try {\r\n      await axios.post('http://localhost:5000/api/planet', payload, {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      alert('¡Tu planeta ha sido guardado!');\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error al guardar el planeta.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mi-planeta-container\">\r\n      <header className=\"mp-header\">\r\n        <div className=\"mp-header-left\">\r\n          <button className=\"back-dashboard-btn\" onClick={() => navigate('/dashboard')}>←</button>\r\n          <h1>Mi Planeta</h1>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"mp-instructions\">\r\n        <p>Este es TU PLANETA, llénalo con las cosas que más te gustan hacer</p>\r\n        <p>\r\n          Cada opción tiene tres tamaños diferentes. Elige el tamaño que mejor represente cuánto te gusta: \r\n          más grande si te encanta, mediano si te gusta, y pequeño si te gusta menos.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mp-controls\">\r\n        <label htmlFor=\"zoom-range\">Zoom del planeta:</label>\r\n        <input\r\n          type=\"range\"\r\n          id=\"zoom-range\"\r\n          min=\"0.5\"\r\n          max=\"2\"\r\n          step=\"0.1\"\r\n          value={zoom}\r\n          onChange={handleZoomChange}\r\n        />\r\n      </div>\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"mp-content\">\r\n          {/* Panel de elementos */}\r\n          <div className=\"mp-pool\">\r\n            <h2>Elementos</h2>\r\n            <Droppable droppableId=\"pool\">\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {elements.map((el, index) => (\r\n                    <Draggable\r\n                      key={`pool-${el.id}`}\r\n                      draggableId={`pool-${el.id}`}\r\n                      index={index}\r\n                    >\r\n                      {(providedDraggable) => (\r\n                        <div\r\n                          className=\"mp-element-card\"\r\n                          ref={providedDraggable.innerRef}\r\n                          {...providedDraggable.draggableProps}\r\n                          {...providedDraggable.dragHandleProps}\r\n                        >\r\n                          <span className=\"mp-element-icon\">{el.icon}</span>\r\n                          <span className=\"mp-element-title\">{el.title}</span>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          {/* Mapa del planeta */}\r\n          <div className=\"mp-planet-area\" style={{ transform: `scale(${zoom})` }}>\r\n            <h2>Tu Planeta</h2>\r\n            <div className=\"mp-zones\">\r\n              {planetZones.map(zone => (\r\n                <div key={zone.id} className=\"mp-zone\">\r\n                  <h3>{zone.id.toUpperCase()}</h3>\r\n                  <Droppable droppableId={zone.id}>\r\n                    {(provided) => (\r\n                      <div\r\n                        className=\"mp-zone-drop\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                      >\r\n                        {zone.placements.map((item, index) => (\r\n                          <Draggable key={item.instanceId} draggableId={item.instanceId} index={index}>\r\n                            {(providedDraggable) => (\r\n                              <div\r\n                                className={`mp-placed-element ${item.size}`}\r\n                                ref={providedDraggable.innerRef}\r\n                                {...providedDraggable.draggableProps}\r\n                                {...providedDraggable.dragHandleProps}\r\n                                onDoubleClick={() => handleSizeChange(zone.id, item.instanceId)}\r\n                              >\r\n                                <span className=\"mp-element-icon\">{item.icon}</span>\r\n                                <span className=\"mp-element-title\">{item.title}</span>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n\r\n      <div className=\"mp-actions\">\r\n        <button className=\"mp-save-btn\" onClick={handleSavePlanet}>Guardar mi planeta</button>\r\n      </div>\r\n\r\n      <footer className=\"mp-footer\">\r\n        <p>2025 © Iván Vela Campos</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MiPlaneta;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}