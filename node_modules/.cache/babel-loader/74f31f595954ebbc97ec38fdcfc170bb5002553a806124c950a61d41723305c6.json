{"ast":null,"code":"// src/components/PatientRoutines.js\nimport React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{ResponsiveContainer,PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar,LineChart,Line}from'recharts';import'../styles/therapistRoutines.css';// Categorías fijas para agrupar actividades\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ALL_CATEGORIES=['cuidado personal','actividades escolares','juego y tiempo libre','participación comunitaria','descanso y sueño'];// Mapa de activityId ➔ categoría\nconst categoryMap={futbol:'juego y tiempo libre',dibujos:'juego y tiempo libre',comics:'juego y tiempo libre',tarea:'actividades escolares',videojuegos:'juego y tiempo libre',helado:'juego y tiempo libre',parque:'participación comunitaria',banio:'cuidado personal',dormir:'descanso y sueño',musica:'juego y tiempo libre',bailar:'juego y tiempo libre',amigos:'participación comunitaria',bicicleta:'juego y tiempo libre',dibujar:'juego y tiempo libre',mascotas:'juego y tiempo libre',experimentos:'actividades escolares',cantar:'juego y tiempo libre',lego:'juego y tiempo libre',nadar:'cuidado personal',computadora:'juego y tiempo libre'};export default function PatientRoutines(){const{patientId}=useParams();// Datos crudos y filtrados\nconst[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);// Rango de fechas y día seleccionado\nconst[from,setFrom]=useState('');const[to,setTo]=useState('');const[selected,setSelected]=useState(null);// Métricas single-day y multi-day\nconst[metrics,setMetrics]=useState(null);const[multi,setMulti]=useState(null);// **NUEVOS** para comparación Miércoles vs Sábado\nconst[wedRecord,setWedRecord]=useState(null);const[satRecord,setSatRecord]=useState(null);const[comparisonData,setComparisonData]=useState([]);// **NUEVO** para fragmentación horaria\nconst[occupancyData,setOccupancyData]=useState([]);// Fetch inicial de resultados de la Máquina del Tiempo\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(_ref=>{let{data}=_ref;setResults(data);// Por defecto, rango última semana\nconst now=new Date();const weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// Filtrar según rango y extraer registros Miércoles / Sábado\nuseEffect(()=>{if(!from||!to)return;const f=new Date(from),t=new Date(to);t.setHours(23,59,59,999);const filt=results.filter(r=>{const d=new Date(r.createdAt);return d>=f&&d<=t;});setFiltered(filt);// Encontrar snapshotes de cada día\nsetWedRecord(filt.find(r=>r.day==='Miércoles')||null);setSatRecord(filt.find(r=>r.day==='Sábado')||null);},[results,from,to]);// Seleccionar día por defecto\nuseEffect(()=>{setSelected(filtered.length?filtered[0].createdAt:null);},[filtered]);// Cálculo de métricas para el día seleccionado\nuseEffect(()=>{if(!selected)return;const res=filtered.find(r=>r.createdAt===selected);if(!res)return;const slots=res.timeSlots||[];const acts=slots.flatMap(s=>s.activities||[]);const totalMin=acts.reduce((sum,a)=>sum+a.duration,0)||1;// Suma minutos por categoría\nconst catSum={};ALL_CATEGORIES.forEach(cat=>catSum[cat]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId];if(cat)catSum[cat]+=a.duration;});// 1. Distribución %\nconst distribution=ALL_CATEGORIES.map(name=>({name,value:+(catSum[name]/totalMin*100||0).toFixed(1)}));// 2. Horas por categoría\nconst hours=ALL_CATEGORIES.map(name=>({name,hours:+(catSum[name]/60).toFixed(2)}));// 3. Diversidad (# actividades distintas)\nconst diversity=new Set(acts.map(a=>a.activityId)).size;// 4. Consistencia (% franjas ocupadas de 24)\nconst occupiedSlots=slots.filter(s=>{var _s$activities;return((_s$activities=s.activities)===null||_s$activities===void 0?void 0:_s$activities.length)>0;}).length;const consistency=+(occupiedSlots/24*100).toFixed(1);// 5. Radar balance (reutiliza distribution)\nconst groupBalance=distribution;// 6. Índice de equilibrio\nconst N=distribution.length;const uniform=100/N;const distDiff=distribution.reduce((acc,d)=>acc+Math.abs(d.value-uniform),0)/2;const balanceIndex=+((100-distDiff)/100*100).toFixed(1);// 7. Top 3 actividades por tiempo\nconst actSum={};acts.forEach(a=>{actSum[a.activityId]=(actSum[a.activityId]||0)+a.duration;});const top3=Object.entries(actSum).sort((a,b)=>b[1]-a[1]).slice(0,3).map(_ref2=>{let[id,val]=_ref2;return{name:id,hours:+(val/60).toFixed(2)};});// 8. Horas de sueño\nconst sleepMin=catSum['descanso y sueño'];const sleepHours=+(sleepMin/60).toFixed(2);setMetrics({distribution,hours,diversity,consistency,groupBalance,balanceIndex,top3,sleepHours});},[selected,filtered]);// Cálculo de métricas multi-día (sleep trend, variabilidad)\nuseEffect(()=>{if(!filtered.length){setMulti(null);return;}// Sleep trend\nconst sleepData=filtered.map(r=>{const date=new Date(r.createdAt).toLocaleDateString();const sleepMin=r.timeSlots.reduce((sum,slot)=>{var _slot$activities;const e=(_slot$activities=slot.activities)===null||_slot$activities===void 0?void 0:_slot$activities.find(a=>a.activityId==='dormir');return sum+(e?e.duration:0);},0);return{date,hours:+(sleepMin/60).toFixed(2)};});// Variancia por categoría\nconst dayPercents=filtered.map(r=>{const acts=r.timeSlots.flatMap(s=>s.activities||[]);const total=acts.reduce((s,a)=>s+a.duration,0)||1;const sums={};ALL_CATEGORIES.forEach(cat=>sums[cat]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId];if(cat)sums[cat]+=a.duration;});return ALL_CATEGORIES.reduce((obj,cat)=>{obj[cat]=+(sums[cat]/total*100).toFixed(1);return obj;},{});});const categoryVariance=ALL_CATEGORIES.map(cat=>{const vals=dayPercents.map(d=>d[cat]);const mean=vals.reduce((a,b)=>a+b,0)/vals.length;const varr=vals.reduce((acc,v)=>acc+(v-mean)**2,0)/vals.length;return{category:cat,variance:+varr.toFixed(2)};});setMulti({sleepData,categoryVariance});},[filtered]);// **NUEVO**: preparar datos de comparación y fragmentación cuando tengamos Wed/Sat\nuseEffect(()=>{if(wedRecord&&satRecord){// Sumas por categoría\nconst sumByCat=record=>{const sums={};ALL_CATEGORIES.forEach(cat=>sums[cat]=0);(record.timeSlots||[]).flatMap(s=>s.activities||[]).forEach(a=>{const cat=categoryMap[a.activityId];if(cat)sums[cat]+=a.duration;});return sums;};const wedSum=sumByCat(wedRecord);const satSum=sumByCat(satRecord);// Datos para BarChart comparativo\nsetComparisonData(ALL_CATEGORIES.map(cat=>({category:cat,Miércoles:+(wedSum[cat]/60).toFixed(2),Sábado:+(satSum[cat]/60).toFixed(2)})));// Datos para fragmentación horaria (ocupado=1, libre=0)\nconst hours=Array.from({length:24},(_,i)=>{var _wedRecord$timeSlots$,_wedRecord$timeSlots$2,_satRecord$timeSlots$,_satRecord$timeSlots$2;const label=`${String(i).padStart(2,'0')}:00`;const wedOcc=(((_wedRecord$timeSlots$=wedRecord.timeSlots.find(s=>s.slot===label))===null||_wedRecord$timeSlots$===void 0?void 0:(_wedRecord$timeSlots$2=_wedRecord$timeSlots$.activities)===null||_wedRecord$timeSlots$2===void 0?void 0:_wedRecord$timeSlots$2.length)||0)>0?1:0;const satOcc=(((_satRecord$timeSlots$=satRecord.timeSlots.find(s=>s.slot===label))===null||_satRecord$timeSlots$===void 0?void 0:(_satRecord$timeSlots$2=_satRecord$timeSlots$.activities)===null||_satRecord$timeSlots$2===void 0?void 0:_satRecord$timeSlots$2.length)||0)>0?1:0;return{hour:label,Miércoles:wedOcc,Sábado:satOcc};});setOccupancyData(hours);}else{setComparisonData([]);setOccupancyData([]);}},[wedRecord,satRecord]);return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"D\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selected||'',onChange:e=>setSelected(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"N\\xFAmero de actividades distintas realizadas\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Porcentaje de franjas ocupadas\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Equilibrio: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.balanceIndex,\"%\"]})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Balance vs distribuci\\xF3n uniforme\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Sue\\xF1o (h): \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.sleepHours})]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Horas de sue\\xF1o\"})]})]}),metrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'][i%5]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.hours,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Balance de Categor\\xEDas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(RadarChart,{data:metrics.groupBalance,cx:\"50%\",cy:\"50%\",outerRadius:80,children:[/*#__PURE__*/_jsx(PolarGrid,{}),/*#__PURE__*/_jsx(PolarAngleAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(PolarRadiusAxis,{domain:[0,100]}),/*#__PURE__*/_jsx(Radar,{dataKey:\"value\",stroke:\"#82ca9d\",fill:\"#82ca9d\",fillOpacity:0.6}),/*#__PURE__*/_jsx(Tooltip,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top 3 Actividades\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.top3,layout:\"vertical\",margin:{top:10,right:30,left:50,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"name\",type:\"category\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#ffc658\"})]})})]})]}),multi&&/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tendencia de Sue\\xF1o\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:multi.sleepData,margin:{top:10,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"hours\",stroke:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Variabilidad por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:multi.categoryVariance,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"category\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"variance\",fill:\"#ff8042\"})]})})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comparativa Mi\\xE9rcoles vs S\\xE1bado\"}),comparisonData.length>0&&/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:comparisonData,margin:{top:20,right:30,left:0,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"category\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"Mi\\xE9rcoles\",fill:\"#82ca9d\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"S\\xE1bado\",fill:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Fragmentaci\\xF3n Horaria\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chart-description\",children:\"Cada hora: 1 = ocupado, 0 = libre. As\\xED se ven los huecos a lo largo del d\\xEDa.\"}),occupancyData.length>0&&/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:occupancyData,margin:{top:20,right:30,left:0,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"hour\"}),/*#__PURE__*/_jsx(YAxis,{allowDecimals:false,domain:[0,1]}),/*#__PURE__*/_jsx(Tooltip,{formatter:v=>v?'Ocupado':'Libre'}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"Mi\\xE9rcoles\",fill:\"#82ca9d\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"S\\xE1bado\",fill:\"#8884d8\"})]})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","ResponsiveContainer","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","LineChart","Line","jsx","_jsx","jsxs","_jsxs","ALL_CATEGORIES","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selected","setSelected","metrics","setMetrics","multi","setMulti","wedRecord","setWedRecord","satRecord","setSatRecord","comparisonData","setComparisonData","occupancyData","setOccupancyData","token","localStorage","getItem","get","headers","then","_ref","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","f","t","setHours","filt","filter","r","d","createdAt","find","day","length","res","slots","timeSlots","acts","flatMap","s","activities","totalMin","reduce","sum","a","duration","catSum","forEach","cat","activityId","distribution","map","name","value","toFixed","hours","diversity","Set","size","occupiedSlots","_s$activities","consistency","groupBalance","N","uniform","distDiff","acc","Math","abs","balanceIndex","actSum","top3","Object","entries","sort","b","_ref2","id","val","sleepMin","sleepHours","sleepData","date","toLocaleDateString","slot","_slot$activities","e","dayPercents","total","sums","obj","categoryVariance","vals","mean","varr","v","category","variance","sumByCat","record","wedSum","satSum","Miércoles","Sábado","Array","_","i","_wedRecord$timeSlots$","_wedRecord$timeSlots$2","_satRecord$timeSlots$","_satRecord$timeSlots$2","label","String","padStart","wedOcc","satOcc","hour","className","children","type","onChange","target","title","width","height","dataKey","nameKey","cx","cy","outerRadius","fill","margin","top","right","left","bottom","strokeDasharray","domain","stroke","fillOpacity","layout","allowDecimals","formatter"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["// src/components/PatientRoutines.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  ResponsiveContainer,\r\n  PieChart, Pie, Cell, Tooltip, Legend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  LineChart, Line\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Categorías fijas para agrupar actividades\r\nconst ALL_CATEGORIES = [\r\n  'cuidado personal',\r\n  'actividades escolares',\r\n  'juego y tiempo libre',\r\n  'participación comunitaria',\r\n  'descanso y sueño'\r\n];\r\n\r\n// Mapa de activityId ➔ categoría\r\nconst categoryMap = {\r\n  futbol: 'juego y tiempo libre',\r\n  dibujos: 'juego y tiempo libre',\r\n  comics: 'juego y tiempo libre',\r\n  tarea: 'actividades escolares',\r\n  videojuegos: 'juego y tiempo libre',\r\n  helado: 'juego y tiempo libre',\r\n  parque: 'participación comunitaria',\r\n  banio: 'cuidado personal',\r\n  dormir: 'descanso y sueño',\r\n  musica: 'juego y tiempo libre',\r\n  bailar: 'juego y tiempo libre',\r\n  amigos: 'participación comunitaria',\r\n  bicicleta: 'juego y tiempo libre',\r\n  dibujar: 'juego y tiempo libre',\r\n  mascotas: 'juego y tiempo libre',\r\n  experimentos: 'actividades escolares',\r\n  cantar: 'juego y tiempo libre',\r\n  lego: 'juego y tiempo libre',\r\n  nadar: 'cuidado personal',\r\n  computadora: 'juego y tiempo libre'\r\n};\r\n\r\nexport default function PatientRoutines() {\r\n  const { patientId } = useParams();\r\n\r\n  // Datos crudos y filtrados\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  // Rango de fechas y día seleccionado\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  // Métricas single-day y multi-day\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [multi, setMulti] = useState(null);\r\n\r\n  // **NUEVOS** para comparación Miércoles vs Sábado\r\n  const [wedRecord, setWedRecord] = useState(null);\r\n  const [satRecord, setSatRecord] = useState(null);\r\n  const [comparisonData, setComparisonData] = useState([]);\r\n\r\n  // **NUEVO** para fragmentación horaria\r\n  const [occupancyData, setOccupancyData] = useState([]);\r\n\r\n  // Fetch inicial de resultados de la Máquina del Tiempo\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    })\r\n    .then(({ data }) => {\r\n      setResults(data);\r\n      // Por defecto, rango última semana\r\n      const now = new Date();\r\n      const weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    })\r\n    .catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // Filtrar según rango y extraer registros Miércoles / Sábado\r\n  useEffect(() => {\r\n    if (!from || !to) return;\r\n    const f = new Date(from), t = new Date(to);\r\n    t.setHours(23,59,59,999);\r\n    const filt = results.filter(r => {\r\n      const d = new Date(r.createdAt);\r\n      return d >= f && d <= t;\r\n    });\r\n    setFiltered(filt);\r\n    // Encontrar snapshotes de cada día\r\n    setWedRecord(filt.find(r => r.day === 'Miércoles') || null);\r\n    setSatRecord(filt.find(r => r.day === 'Sábado') || null);\r\n  }, [results, from, to]);\r\n\r\n  // Seleccionar día por defecto\r\n  useEffect(() => {\r\n    setSelected(filtered.length ? filtered[0].createdAt : null);\r\n  }, [filtered]);\r\n\r\n  // Cálculo de métricas para el día seleccionado\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    const res = filtered.find(r => r.createdAt === selected);\r\n    if (!res) return;\r\n\r\n    const slots = res.timeSlots || [];\r\n    const acts = slots.flatMap(s => s.activities || []);\r\n    const totalMin = acts.reduce((sum,a) => sum + a.duration, 0) || 1;\r\n\r\n    // Suma minutos por categoría\r\n    const catSum = {};\r\n    ALL_CATEGORIES.forEach(cat => catSum[cat] = 0);\r\n    acts.forEach(a => {\r\n      const cat = categoryMap[a.activityId];\r\n      if (cat) catSum[cat] += a.duration;\r\n    });\r\n\r\n    // 1. Distribución %\r\n    const distribution = ALL_CATEGORIES.map(name => ({\r\n      name,\r\n      value: +((catSum[name] / totalMin * 100) || 0).toFixed(1)\r\n    }));\r\n\r\n    // 2. Horas por categoría\r\n    const hours = ALL_CATEGORIES.map(name => ({\r\n      name,\r\n      hours: +(catSum[name] / 60).toFixed(2)\r\n    }));\r\n\r\n    // 3. Diversidad (# actividades distintas)\r\n    const diversity = new Set(acts.map(a => a.activityId)).size;\r\n\r\n    // 4. Consistencia (% franjas ocupadas de 24)\r\n    const occupiedSlots = slots.filter(s => s.activities?.length > 0).length;\r\n    const consistency = +((occupiedSlots / 24 * 100).toFixed(1));\r\n\r\n    // 5. Radar balance (reutiliza distribution)\r\n    const groupBalance = distribution;\r\n\r\n    // 6. Índice de equilibrio\r\n    const N = distribution.length;\r\n    const uniform = 100 / N;\r\n    const distDiff = distribution.reduce((acc,d) =>\r\n      acc + Math.abs(d.value - uniform), 0) / 2;\r\n    const balanceIndex = +((100 - distDiff) / 100 * 100).toFixed(1);\r\n\r\n    // 7. Top 3 actividades por tiempo\r\n    const actSum = {};\r\n    acts.forEach(a => {\r\n      actSum[a.activityId] = (actSum[a.activityId]||0) + a.duration;\r\n    });\r\n    const top3 = Object.entries(actSum)\r\n      .sort((a,b) => b[1] - a[1]).slice(0,3)\r\n      .map(([id,val]) => ({ name: id, hours: +(val/60).toFixed(2) }));\r\n\r\n    // 8. Horas de sueño\r\n    const sleepMin = catSum['descanso y sueño'];\r\n    const sleepHours = +(sleepMin / 60).toFixed(2);\r\n\r\n    setMetrics({\r\n      distribution, hours, diversity, consistency,\r\n      groupBalance, balanceIndex, top3, sleepHours\r\n    });\r\n  }, [selected, filtered]);\r\n\r\n  // Cálculo de métricas multi-día (sleep trend, variabilidad)\r\n  useEffect(() => {\r\n    if (!filtered.length) {\r\n      setMulti(null);\r\n      return;\r\n    }\r\n    // Sleep trend\r\n    const sleepData = filtered.map(r => {\r\n      const date = new Date(r.createdAt).toLocaleDateString();\r\n      const sleepMin = r.timeSlots.reduce((sum, slot) => {\r\n        const e = slot.activities?.find(a => a.activityId === 'dormir');\r\n        return sum + (e ? e.duration : 0);\r\n      }, 0);\r\n      return { date, hours: +(sleepMin/60).toFixed(2) };\r\n    });\r\n    // Variancia por categoría\r\n    const dayPercents = filtered.map(r => {\r\n      const acts = r.timeSlots.flatMap(s => s.activities || []);\r\n      const total = acts.reduce((s,a)=>s+a.duration,0)||1;\r\n      const sums = {}; ALL_CATEGORIES.forEach(cat => sums[cat]=0);\r\n      acts.forEach(a => {\r\n        const cat = categoryMap[a.activityId];\r\n        if (cat) sums[cat] += a.duration;\r\n      });\r\n      return ALL_CATEGORIES.reduce((obj,cat) => {\r\n        obj[cat] = +(sums[cat]/total*100).toFixed(1);\r\n        return obj;\r\n      }, {});\r\n    });\r\n    const categoryVariance = ALL_CATEGORIES.map(cat => {\r\n      const vals = dayPercents.map(d => d[cat]);\r\n      const mean = vals.reduce((a,b)=>a+b,0)/vals.length;\r\n      const varr = vals.reduce((acc,v)=>acc+(v-mean)**2,0)/vals.length;\r\n      return { category: cat, variance: +varr.toFixed(2) };\r\n    });\r\n    setMulti({ sleepData, categoryVariance });\r\n  }, [filtered]);\r\n\r\n  // **NUEVO**: preparar datos de comparación y fragmentación cuando tengamos Wed/Sat\r\n  useEffect(() => {\r\n    if (wedRecord && satRecord) {\r\n      // Sumas por categoría\r\n      const sumByCat = record => {\r\n        const sums = {};\r\n        ALL_CATEGORIES.forEach(cat => sums[cat] = 0);\r\n        (record.timeSlots||[]).flatMap(s => s.activities||[]).forEach(a => {\r\n          const cat = categoryMap[a.activityId];\r\n          if (cat) sums[cat] += a.duration;\r\n        });\r\n        return sums;\r\n      };\r\n      const wedSum = sumByCat(wedRecord);\r\n      const satSum = sumByCat(satRecord);\r\n\r\n      // Datos para BarChart comparativo\r\n      setComparisonData(\r\n        ALL_CATEGORIES.map(cat => ({\r\n          category: cat,\r\n          Miércoles: +(wedSum[cat]/60).toFixed(2),\r\n          Sábado:    +(satSum[cat]/60).toFixed(2)\r\n        }))\r\n      );\r\n\r\n      // Datos para fragmentación horaria (ocupado=1, libre=0)\r\n      const hours = Array.from({ length: 24 }, (_,i) => {\r\n        const label = `${String(i).padStart(2,'0')}:00`;\r\n        const wedOcc = (wedRecord.timeSlots.find(s => s.slot===label)?.activities?.length || 0) > 0 ? 1 : 0;\r\n        const satOcc = (satRecord.timeSlots.find(s => s.slot===label)?.activities?.length || 0) > 0 ? 1 : 0;\r\n        return { hour: label, Miércoles: wedOcc, Sábado: satOcc };\r\n      });\r\n      setOccupancyData(hours);\r\n\r\n    } else {\r\n      setComparisonData([]);\r\n      setOccupancyData([]);\r\n    }\r\n  }, [wedRecord, satRecord]);\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      {/* Header de navegación */}\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      {/* Filtros de fecha y selección de día */}\r\n      <section className=\"filter-section\">\r\n        <label>Desde:\r\n          <input type=\"date\" value={from} onChange={e => setFrom(e.target.value)} />\r\n        </label>\r\n        <label>Hasta:\r\n          <input type=\"date\" value={to} onChange={e => setTo(e.target.value)} />\r\n        </label>\r\n        <label>Día:\r\n          <select value={selected||''} onChange={e => setSelected(e.target.value)}>\r\n            {filtered.map(r => {\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {/* Single-day metrics */}\r\n      {metrics && (\r\n        <div className=\"metrics-grid\">\r\n          <div className=\"metric-card\">\r\n            <span>Diversidad: <strong>{metrics.diversity}</strong></span>\r\n            <i className=\"fa fa-info-circle info-icon\" title=\"Número de actividades distintas realizadas\"></i>\r\n          </div>\r\n          <div className=\"metric-card\">\r\n            <span>Consistencia: <strong>{metrics.consistency}%</strong></span>\r\n            <i className=\"fa fa-info-circle info-icon\" title=\"Porcentaje de franjas ocupadas\"></i>\r\n          </div>\r\n          <div className=\"metric-card\">\r\n            <span>Equilibrio: <strong>{metrics.balanceIndex}%</strong></span>\r\n            <i className=\"fa fa-info-circle info-icon\" title=\"Balance vs distribución uniforme\"></i>\r\n          </div>\r\n          <div className=\"metric-card\">\r\n            <span>Sueño (h): <strong>{metrics.sleepHours}</strong></span>\r\n            <i className=\"fa fa-info-circle info-icon\" title=\"Horas de sueño\"></i>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Single-day charts */}\r\n      {metrics && (\r\n        <div className=\"charts-grid\">\r\n          {/* Distribución % */}\r\n          <div className=\"chart-block\">\r\n            <h3>Distribución % por Categoría</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={metrics.distribution}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\" cy=\"50%\"\r\n                  outerRadius={80}\r\n                  label\r\n                >\r\n                  {metrics.distribution.map((_,i) =>\r\n                    <Cell key={i} fill={['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'][i%5]} />\r\n                  )}\r\n                </Pie>\r\n                <Tooltip /><Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Horas por categoría */}\r\n          <div className=\"chart-block\">\r\n            <h3>Horas por Categoría</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <BarChart data={metrics.hours} margin={{ top:20,right:30,left:0,bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"hours\" fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Radar balance */}\r\n          <div className=\"chart-block\">\r\n            <h3>Balance de Categorías</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <RadarChart data={metrics.groupBalance} cx=\"50%\" cy=\"50%\" outerRadius={80}>\r\n                <PolarGrid />\r\n                <PolarAngleAxis dataKey=\"name\" />\r\n                <PolarRadiusAxis domain={[0,100]} />\r\n                <Radar dataKey=\"value\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6}/>\r\n                <Tooltip />\r\n              </RadarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Top 3 actividades */}\r\n          <div className=\"chart-block full-width\">\r\n            <h3>Top 3 Actividades</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart\r\n                data={metrics.top3}\r\n                layout=\"vertical\"\r\n                margin={{ top:10,right:30,left:50,bottom:5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis type=\"number\"/>\r\n                <YAxis dataKey=\"name\" type=\"category\"/>\r\n                <Tooltip/>\r\n                <Bar dataKey=\"hours\" fill=\"#ffc658\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Multi-day metrics */}\r\n      {multi && (\r\n        <div className=\"charts-grid\">\r\n          {/* Tendencia de sueño */}\r\n          <div className=\"chart-block\">\r\n            <h3>Tendencia de Sueño</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={multi.sleepData} margin={{ top:10,right:30,left:0,bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"date\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Line type=\"monotone\" dataKey=\"hours\" stroke=\"#8884d8\" />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          {/* Variabilidad por categoría */}\r\n          <div className=\"chart-block\">\r\n            <h3>Variabilidad por Categoría</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart data={multi.categoryVariance} margin={{ top:20,right:30,left:0,bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"category\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Bar dataKey=\"variance\" fill=\"#ff8042\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* **NUEVO**: Comparativa Miércoles vs Sábado */}\r\n      <section className=\"chart-block full-width\">\r\n        <h3>Comparativa Miércoles vs Sábado</h3>\r\n        {comparisonData.length > 0 && (\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={comparisonData} margin={{ top:20,right:30,left:0,bottom:5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\"/>\r\n              <XAxis dataKey=\"category\"/>\r\n              <YAxis/>\r\n              <Tooltip/>\r\n              <Legend />\r\n              <Bar dataKey=\"Miércoles\" fill=\"#82ca9d\" />\r\n              <Bar dataKey=\"Sábado\"    fill=\"#8884d8\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n      </section>\r\n\r\n      {/* **NUEVO**: Fragmentación Horaria */}\r\n      <section className=\"chart-block full-width\">\r\n        <h3>Fragmentación Horaria</h3>\r\n        <p className=\"chart-description\">\r\n          Cada hora: 1 = ocupado, 0 = libre. Así se ven los huecos a lo largo del día.\r\n        </p>\r\n        {occupancyData.length > 0 && (\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={occupancyData} margin={{ top:20,right:30,left:0,bottom:5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\"/>\r\n              <XAxis dataKey=\"hour\"/>\r\n              <YAxis allowDecimals={false} domain={[0,1]}/>\r\n              <Tooltip formatter={v => v ? 'Ocupado' : 'Libre'} />\r\n              <Legend />\r\n              <Bar dataKey=\"Miércoles\" fill=\"#82ca9d\" />\r\n              <Bar dataKey=\"Sábado\"    fill=\"#8884d8\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,IAAI,KAAQ,kBAAkB,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OACEC,mBAAmB,CACnBC,QAAQ,CAAEC,GAAG,CAAEC,IAAI,CAAEC,OAAO,CAAEC,MAAM,CACpCC,QAAQ,CAAEC,GAAG,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAa,CAC1CC,UAAU,CAAEC,SAAS,CAAEC,cAAc,CAAEC,eAAe,CAAEC,KAAK,CAC7DC,SAAS,CAAEC,IAAI,KACV,UAAU,CACjB,MAAO,iCAAiC,CAExC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAG,CACrB,kBAAkB,CAClB,uBAAuB,CACvB,sBAAsB,CACtB,2BAA2B,CAC3B,kBAAkB,CACnB,CAED;AACA,KAAM,CAAAC,WAAW,CAAG,CAClBC,MAAM,CAAE,sBAAsB,CAC9BC,OAAO,CAAE,sBAAsB,CAC/BC,MAAM,CAAE,sBAAsB,CAC9BC,KAAK,CAAE,uBAAuB,CAC9BC,WAAW,CAAE,sBAAsB,CACnCC,MAAM,CAAE,sBAAsB,CAC9BC,MAAM,CAAE,2BAA2B,CACnCC,KAAK,CAAE,kBAAkB,CACzBC,MAAM,CAAE,kBAAkB,CAC1BC,MAAM,CAAE,sBAAsB,CAC9BC,MAAM,CAAE,sBAAsB,CAC9BC,MAAM,CAAE,2BAA2B,CACnCC,SAAS,CAAE,sBAAsB,CACjCC,OAAO,CAAE,sBAAsB,CAC/BC,QAAQ,CAAE,sBAAsB,CAChCC,YAAY,CAAE,uBAAuB,CACrCC,MAAM,CAAE,sBAAsB,CAC9BC,IAAI,CAAE,sBAAsB,CAC5BC,KAAK,CAAE,kBAAkB,CACzBC,WAAW,CAAE,sBACf,CAAC,CAED,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CACxC,KAAM,CAAEC,SAAU,CAAC,CAAGhD,SAAS,CAAC,CAAC,CAEjC;AACA,KAAM,CAACiD,OAAO,CAAEC,UAAU,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACqD,QAAQ,CAAEC,WAAW,CAAC,CAAGtD,QAAQ,CAAC,EAAE,CAAC,CAC5C;AACA,KAAM,CAACuD,IAAI,CAAEC,OAAO,CAAC,CAAGxD,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACyD,EAAE,CAAEC,KAAK,CAAC,CAAG1D,QAAQ,CAAC,EAAE,CAAC,CAChC,KAAM,CAAC2D,QAAQ,CAAEC,WAAW,CAAC,CAAG5D,QAAQ,CAAC,IAAI,CAAC,CAE9C;AACA,KAAM,CAAC6D,OAAO,CAAEC,UAAU,CAAC,CAAG9D,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC+D,KAAK,CAAEC,QAAQ,CAAC,CAAGhE,QAAQ,CAAC,IAAI,CAAC,CAExC;AACA,KAAM,CAACiE,SAAS,CAAEC,YAAY,CAAC,CAAGlE,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACmE,SAAS,CAAEC,YAAY,CAAC,CAAGpE,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACqE,cAAc,CAAEC,iBAAiB,CAAC,CAAGtE,QAAQ,CAAC,EAAE,CAAC,CAExD;AACA,KAAM,CAACuE,aAAa,CAAEC,gBAAgB,CAAC,CAAGxE,QAAQ,CAAC,EAAE,CAAC,CAEtD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwE,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3CvE,KAAK,CAACwE,GAAG,CAAC,uBAAuB1B,SAAS,EAAE,CAAE,CAC5C2B,OAAO,CAAE,CAAE,cAAc,CAAEJ,KAAM,CACnC,CAAC,CAAC,CACDK,IAAI,CAACC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACb3B,UAAU,CAAC4B,IAAI,CAAC,CAChB;AACA,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAD,IAAI,CAACD,GAAG,CAAC,CAC7BE,OAAO,CAACC,OAAO,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAClC7B,OAAO,CAAC2B,OAAO,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1C7B,KAAK,CAACuB,GAAG,CAACK,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACtC,CAAC,CAAC,CACDC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CACvB,CAAC,CAAE,CAACxC,SAAS,CAAC,CAAC,CAEf;AACAjD,SAAS,CAAC,IAAM,CACd,GAAI,CAACsD,IAAI,EAAI,CAACE,EAAE,CAAE,OAClB,KAAM,CAAAkC,CAAC,CAAG,GAAI,CAAAT,IAAI,CAAC3B,IAAI,CAAC,CAAEqC,CAAC,CAAG,GAAI,CAAAV,IAAI,CAACzB,EAAE,CAAC,CAC1CmC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CACxB,KAAM,CAAAC,IAAI,CAAG3C,OAAO,CAAC4C,MAAM,CAACC,CAAC,EAAI,CAC/B,KAAM,CAAAC,CAAC,CAAG,GAAI,CAAAf,IAAI,CAACc,CAAC,CAACE,SAAS,CAAC,CAC/B,MAAO,CAAAD,CAAC,EAAIN,CAAC,EAAIM,CAAC,EAAIL,CAAC,CACzB,CAAC,CAAC,CACFtC,WAAW,CAACwC,IAAI,CAAC,CACjB;AACA5B,YAAY,CAAC4B,IAAI,CAACK,IAAI,CAACH,CAAC,EAAIA,CAAC,CAACI,GAAG,GAAK,WAAW,CAAC,EAAI,IAAI,CAAC,CAC3DhC,YAAY,CAAC0B,IAAI,CAACK,IAAI,CAACH,CAAC,EAAIA,CAAC,CAACI,GAAG,GAAK,QAAQ,CAAC,EAAI,IAAI,CAAC,CAC1D,CAAC,CAAE,CAACjD,OAAO,CAAEI,IAAI,CAAEE,EAAE,CAAC,CAAC,CAEvB;AACAxD,SAAS,CAAC,IAAM,CACd2D,WAAW,CAACP,QAAQ,CAACgD,MAAM,CAAGhD,QAAQ,CAAC,CAAC,CAAC,CAAC6C,SAAS,CAAG,IAAI,CAAC,CAC7D,CAAC,CAAE,CAAC7C,QAAQ,CAAC,CAAC,CAEd;AACApD,SAAS,CAAC,IAAM,CACd,GAAI,CAAC0D,QAAQ,CAAE,OACf,KAAM,CAAA2C,GAAG,CAAGjD,QAAQ,CAAC8C,IAAI,CAACH,CAAC,EAAIA,CAAC,CAACE,SAAS,GAAKvC,QAAQ,CAAC,CACxD,GAAI,CAAC2C,GAAG,CAAE,OAEV,KAAM,CAAAC,KAAK,CAAGD,GAAG,CAACE,SAAS,EAAI,EAAE,CACjC,KAAM,CAAAC,IAAI,CAAGF,KAAK,CAACG,OAAO,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,EAAI,EAAE,CAAC,CACnD,KAAM,CAAAC,QAAQ,CAAGJ,IAAI,CAACK,MAAM,CAAC,CAACC,GAAG,CAACC,CAAC,GAAKD,GAAG,CAAGC,CAAC,CAACC,QAAQ,CAAE,CAAC,CAAC,EAAI,CAAC,CAEjE;AACA,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjBvF,cAAc,CAACwF,OAAO,CAACC,GAAG,EAAIF,MAAM,CAACE,GAAG,CAAC,CAAG,CAAC,CAAC,CAC9CX,IAAI,CAACU,OAAO,CAACH,CAAC,EAAI,CAChB,KAAM,CAAAI,GAAG,CAAGxF,WAAW,CAACoF,CAAC,CAACK,UAAU,CAAC,CACrC,GAAID,GAAG,CAAEF,MAAM,CAACE,GAAG,CAAC,EAAIJ,CAAC,CAACC,QAAQ,CACpC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAK,YAAY,CAAG3F,cAAc,CAAC4F,GAAG,CAACC,IAAI,GAAK,CAC/CA,IAAI,CACJC,KAAK,CAAE,CAAC,CAAEP,MAAM,CAACM,IAAI,CAAC,CAAGX,QAAQ,CAAG,GAAG,EAAK,CAAC,EAAEa,OAAO,CAAC,CAAC,CAC1D,CAAC,CAAC,CAAC,CAEH;AACA,KAAM,CAAAC,KAAK,CAAGhG,cAAc,CAAC4F,GAAG,CAACC,IAAI,GAAK,CACxCA,IAAI,CACJG,KAAK,CAAE,CAAC,CAACT,MAAM,CAACM,IAAI,CAAC,CAAG,EAAE,EAAEE,OAAO,CAAC,CAAC,CACvC,CAAC,CAAC,CAAC,CAEH;AACA,KAAM,CAAAE,SAAS,CAAG,GAAI,CAAAC,GAAG,CAACpB,IAAI,CAACc,GAAG,CAACP,CAAC,EAAIA,CAAC,CAACK,UAAU,CAAC,CAAC,CAACS,IAAI,CAE3D;AACA,KAAM,CAAAC,aAAa,CAAGxB,KAAK,CAACR,MAAM,CAACY,CAAC,OAAAqB,aAAA,OAAI,EAAAA,aAAA,CAAArB,CAAC,CAACC,UAAU,UAAAoB,aAAA,iBAAZA,aAAA,CAAc3B,MAAM,EAAG,CAAC,GAAC,CAACA,MAAM,CACxE,KAAM,CAAA4B,WAAW,CAAG,CAAE,CAACF,aAAa,CAAG,EAAE,CAAG,GAAG,EAAEL,OAAO,CAAC,CAAC,CAAE,CAE5D;AACA,KAAM,CAAAQ,YAAY,CAAGZ,YAAY,CAEjC;AACA,KAAM,CAAAa,CAAC,CAAGb,YAAY,CAACjB,MAAM,CAC7B,KAAM,CAAA+B,OAAO,CAAG,GAAG,CAAGD,CAAC,CACvB,KAAM,CAAAE,QAAQ,CAAGf,YAAY,CAACR,MAAM,CAAC,CAACwB,GAAG,CAACrC,CAAC,GACzCqC,GAAG,CAAGC,IAAI,CAACC,GAAG,CAACvC,CAAC,CAACwB,KAAK,CAAGW,OAAO,CAAC,CAAE,CAAC,CAAC,CAAG,CAAC,CAC3C,KAAM,CAAAK,YAAY,CAAG,CAAC,CAAC,CAAC,GAAG,CAAGJ,QAAQ,EAAI,GAAG,CAAG,GAAG,EAAEX,OAAO,CAAC,CAAC,CAAC,CAE/D;AACA,KAAM,CAAAgB,MAAM,CAAG,CAAC,CAAC,CACjBjC,IAAI,CAACU,OAAO,CAACH,CAAC,EAAI,CAChB0B,MAAM,CAAC1B,CAAC,CAACK,UAAU,CAAC,CAAG,CAACqB,MAAM,CAAC1B,CAAC,CAACK,UAAU,CAAC,EAAE,CAAC,EAAIL,CAAC,CAACC,QAAQ,CAC/D,CAAC,CAAC,CACF,KAAM,CAAA0B,IAAI,CAAGC,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC,CAChCI,IAAI,CAAC,CAAC9B,CAAC,CAAC+B,CAAC,GAAKA,CAAC,CAAC,CAAC,CAAC,CAAG/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAACzB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACrCgC,GAAG,CAACyB,KAAA,MAAC,CAACC,EAAE,CAACC,GAAG,CAAC,CAAAF,KAAA,OAAM,CAAExB,IAAI,CAAEyB,EAAE,CAAEtB,KAAK,CAAE,CAAC,CAACuB,GAAG,CAAC,EAAE,EAAExB,OAAO,CAAC,CAAC,CAAE,CAAC,EAAC,CAAC,CAEjE;AACA,KAAM,CAAAyB,QAAQ,CAAGjC,MAAM,CAAC,kBAAkB,CAAC,CAC3C,KAAM,CAAAkC,UAAU,CAAG,CAAC,CAACD,QAAQ,CAAG,EAAE,EAAEzB,OAAO,CAAC,CAAC,CAAC,CAE9C5D,UAAU,CAAC,CACTwD,YAAY,CAAEK,KAAK,CAAEC,SAAS,CAAEK,WAAW,CAC3CC,YAAY,CAAEO,YAAY,CAAEE,IAAI,CAAES,UACpC,CAAC,CAAC,CACJ,CAAC,CAAE,CAACzF,QAAQ,CAAEN,QAAQ,CAAC,CAAC,CAExB;AACApD,SAAS,CAAC,IAAM,CACd,GAAI,CAACoD,QAAQ,CAACgD,MAAM,CAAE,CACpBrC,QAAQ,CAAC,IAAI,CAAC,CACd,OACF,CACA;AACA,KAAM,CAAAqF,SAAS,CAAGhG,QAAQ,CAACkE,GAAG,CAACvB,CAAC,EAAI,CAClC,KAAM,CAAAsD,IAAI,CAAG,GAAI,CAAApE,IAAI,CAACc,CAAC,CAACE,SAAS,CAAC,CAACqD,kBAAkB,CAAC,CAAC,CACvD,KAAM,CAAAJ,QAAQ,CAAGnD,CAAC,CAACQ,SAAS,CAACM,MAAM,CAAC,CAACC,GAAG,CAAEyC,IAAI,GAAK,KAAAC,gBAAA,CACjD,KAAM,CAAAC,CAAC,EAAAD,gBAAA,CAAGD,IAAI,CAAC5C,UAAU,UAAA6C,gBAAA,iBAAfA,gBAAA,CAAiBtD,IAAI,CAACa,CAAC,EAAIA,CAAC,CAACK,UAAU,GAAK,QAAQ,CAAC,CAC/D,MAAO,CAAAN,GAAG,EAAI2C,CAAC,CAAGA,CAAC,CAACzC,QAAQ,CAAG,CAAC,CAAC,CACnC,CAAC,CAAE,CAAC,CAAC,CACL,MAAO,CAAEqC,IAAI,CAAE3B,KAAK,CAAE,CAAC,CAACwB,QAAQ,CAAC,EAAE,EAAEzB,OAAO,CAAC,CAAC,CAAE,CAAC,CACnD,CAAC,CAAC,CACF;AACA,KAAM,CAAAiC,WAAW,CAAGtG,QAAQ,CAACkE,GAAG,CAACvB,CAAC,EAAI,CACpC,KAAM,CAAAS,IAAI,CAAGT,CAAC,CAACQ,SAAS,CAACE,OAAO,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,EAAI,EAAE,CAAC,CACzD,KAAM,CAAAgD,KAAK,CAAGnD,IAAI,CAACK,MAAM,CAAC,CAACH,CAAC,CAACK,CAAC,GAAGL,CAAC,CAACK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CACnD,KAAM,CAAA4C,IAAI,CAAG,CAAC,CAAC,CAAElI,cAAc,CAACwF,OAAO,CAACC,GAAG,EAAIyC,IAAI,CAACzC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC3DX,IAAI,CAACU,OAAO,CAACH,CAAC,EAAI,CAChB,KAAM,CAAAI,GAAG,CAAGxF,WAAW,CAACoF,CAAC,CAACK,UAAU,CAAC,CACrC,GAAID,GAAG,CAAEyC,IAAI,CAACzC,GAAG,CAAC,EAAIJ,CAAC,CAACC,QAAQ,CAClC,CAAC,CAAC,CACF,MAAO,CAAAtF,cAAc,CAACmF,MAAM,CAAC,CAACgD,GAAG,CAAC1C,GAAG,GAAK,CACxC0C,GAAG,CAAC1C,GAAG,CAAC,CAAG,CAAC,CAACyC,IAAI,CAACzC,GAAG,CAAC,CAACwC,KAAK,CAAC,GAAG,EAAElC,OAAO,CAAC,CAAC,CAAC,CAC5C,MAAO,CAAAoC,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACR,CAAC,CAAC,CACF,KAAM,CAAAC,gBAAgB,CAAGpI,cAAc,CAAC4F,GAAG,CAACH,GAAG,EAAI,CACjD,KAAM,CAAA4C,IAAI,CAAGL,WAAW,CAACpC,GAAG,CAACtB,CAAC,EAAIA,CAAC,CAACmB,GAAG,CAAC,CAAC,CACzC,KAAM,CAAA6C,IAAI,CAAGD,IAAI,CAAClD,MAAM,CAAC,CAACE,CAAC,CAAC+B,CAAC,GAAG/B,CAAC,CAAC+B,CAAC,CAAC,CAAC,CAAC,CAACiB,IAAI,CAAC3D,MAAM,CAClD,KAAM,CAAA6D,IAAI,CAAGF,IAAI,CAAClD,MAAM,CAAC,CAACwB,GAAG,CAAC6B,CAAC,GAAG7B,GAAG,CAAC,CAAC6B,CAAC,CAACF,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC3D,MAAM,CAChE,MAAO,CAAE+D,QAAQ,CAAEhD,GAAG,CAAEiD,QAAQ,CAAE,CAACH,IAAI,CAACxC,OAAO,CAAC,CAAC,CAAE,CAAC,CACtD,CAAC,CAAC,CACF1D,QAAQ,CAAC,CAAEqF,SAAS,CAAEU,gBAAiB,CAAC,CAAC,CAC3C,CAAC,CAAE,CAAC1G,QAAQ,CAAC,CAAC,CAEd;AACApD,SAAS,CAAC,IAAM,CACd,GAAIgE,SAAS,EAAIE,SAAS,CAAE,CAC1B;AACA,KAAM,CAAAmG,QAAQ,CAAGC,MAAM,EAAI,CACzB,KAAM,CAAAV,IAAI,CAAG,CAAC,CAAC,CACflI,cAAc,CAACwF,OAAO,CAACC,GAAG,EAAIyC,IAAI,CAACzC,GAAG,CAAC,CAAG,CAAC,CAAC,CAC5C,CAACmD,MAAM,CAAC/D,SAAS,EAAE,EAAE,EAAEE,OAAO,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,EAAE,EAAE,CAAC,CAACO,OAAO,CAACH,CAAC,EAAI,CACjE,KAAM,CAAAI,GAAG,CAAGxF,WAAW,CAACoF,CAAC,CAACK,UAAU,CAAC,CACrC,GAAID,GAAG,CAAEyC,IAAI,CAACzC,GAAG,CAAC,EAAIJ,CAAC,CAACC,QAAQ,CAClC,CAAC,CAAC,CACF,MAAO,CAAA4C,IAAI,CACb,CAAC,CACD,KAAM,CAAAW,MAAM,CAAGF,QAAQ,CAACrG,SAAS,CAAC,CAClC,KAAM,CAAAwG,MAAM,CAAGH,QAAQ,CAACnG,SAAS,CAAC,CAElC;AACAG,iBAAiB,CACf3C,cAAc,CAAC4F,GAAG,CAACH,GAAG,GAAK,CACzBgD,QAAQ,CAAEhD,GAAG,CACbsD,SAAS,CAAE,CAAC,CAACF,MAAM,CAACpD,GAAG,CAAC,CAAC,EAAE,EAAEM,OAAO,CAAC,CAAC,CAAC,CACvCiD,MAAM,CAAK,CAAC,CAACF,MAAM,CAACrD,GAAG,CAAC,CAAC,EAAE,EAAEM,OAAO,CAAC,CAAC,CACxC,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,KAAK,CAAGiD,KAAK,CAACrH,IAAI,CAAC,CAAE8C,MAAM,CAAE,EAAG,CAAC,CAAE,CAACwE,CAAC,CAACC,CAAC,GAAK,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,qBAAA,CAAAC,sBAAA,CAChD,KAAM,CAAAC,KAAK,CAAG,GAAGC,MAAM,CAACN,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAC/C,KAAM,CAAAC,MAAM,CAAG,CAAC,EAAAP,qBAAA,CAAA9G,SAAS,CAACuC,SAAS,CAACL,IAAI,CAACQ,CAAC,EAAIA,CAAC,CAAC6C,IAAI,GAAG2B,KAAK,CAAC,UAAAJ,qBAAA,kBAAAC,sBAAA,CAA7CD,qBAAA,CAA+CnE,UAAU,UAAAoE,sBAAA,iBAAzDA,sBAAA,CAA2D3E,MAAM,GAAI,CAAC,EAAI,CAAC,CAAG,CAAC,CAAG,CAAC,CACnG,KAAM,CAAAkF,MAAM,CAAG,CAAC,EAAAN,qBAAA,CAAA9G,SAAS,CAACqC,SAAS,CAACL,IAAI,CAACQ,CAAC,EAAIA,CAAC,CAAC6C,IAAI,GAAG2B,KAAK,CAAC,UAAAF,qBAAA,kBAAAC,sBAAA,CAA7CD,qBAAA,CAA+CrE,UAAU,UAAAsE,sBAAA,iBAAzDA,sBAAA,CAA2D7E,MAAM,GAAI,CAAC,EAAI,CAAC,CAAG,CAAC,CAAG,CAAC,CACnG,MAAO,CAAEmF,IAAI,CAAEL,KAAK,CAAET,SAAS,CAAEY,MAAM,CAAEX,MAAM,CAAEY,MAAO,CAAC,CAC3D,CAAC,CAAC,CACF/G,gBAAgB,CAACmD,KAAK,CAAC,CAEzB,CAAC,IAAM,CACLrD,iBAAiB,CAAC,EAAE,CAAC,CACrBE,gBAAgB,CAAC,EAAE,CAAC,CACtB,CACF,CAAC,CAAE,CAACP,SAAS,CAAEE,SAAS,CAAC,CAAC,CAE1B,mBACEzC,KAAA,QAAK+J,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAEjChK,KAAA,WAAQ+J,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eACjClK,IAAA,CAACrB,IAAI,EAACsD,EAAE,CAAC,qBAAqB,CAAAiI,QAAA,CAAC,eAAQ,CAAM,CAAC,cAC9ClK,IAAA,OAAAkK,QAAA,CAAI,4BAAuB,CAAI,CAAC,EAC1B,CAAC,cAGThK,KAAA,YAAS+J,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eACjChK,KAAA,UAAAgK,QAAA,EAAO,QACL,cAAAlK,IAAA,UAAOmK,IAAI,CAAC,MAAM,CAAClE,KAAK,CAAElE,IAAK,CAACqI,QAAQ,CAAElC,CAAC,EAAIlG,OAAO,CAACkG,CAAC,CAACmC,MAAM,CAACpE,KAAK,CAAE,CAAE,CAAC,EACrE,CAAC,cACR/F,KAAA,UAAAgK,QAAA,EAAO,QACL,cAAAlK,IAAA,UAAOmK,IAAI,CAAC,MAAM,CAAClE,KAAK,CAAEhE,EAAG,CAACmI,QAAQ,CAAElC,CAAC,EAAIhG,KAAK,CAACgG,CAAC,CAACmC,MAAM,CAACpE,KAAK,CAAE,CAAE,CAAC,EACjE,CAAC,cACR/F,KAAA,UAAAgK,QAAA,EAAO,SACL,cAAAlK,IAAA,WAAQiG,KAAK,CAAE9D,QAAQ,EAAE,EAAG,CAACiI,QAAQ,CAAElC,CAAC,EAAI9F,WAAW,CAAC8F,CAAC,CAACmC,MAAM,CAACpE,KAAK,CAAE,CAAAiE,QAAA,CACrErI,QAAQ,CAACkE,GAAG,CAACvB,CAAC,EAAI,CACjB,KAAM,CAAAC,CAAC,CAAG,GAAI,CAAAf,IAAI,CAACc,CAAC,CAACE,SAAS,CAAC,CAACqD,kBAAkB,CAAC,CAAC,CACpD,mBAAO/H,IAAA,WAA0BiG,KAAK,CAAEzB,CAAC,CAACE,SAAU,CAAAwF,QAAA,CAAEzF,CAAC,EAAnCD,CAAC,CAACE,SAA0C,CAAC,CACnE,CAAC,CAAC,CACI,CAAC,EACJ,CAAC,EACD,CAAC,CAGTrC,OAAO,eACNnC,KAAA,QAAK+J,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BhK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhK,KAAA,SAAAgK,QAAA,EAAM,cAAY,cAAAlK,IAAA,WAAAkK,QAAA,CAAS7H,OAAO,CAAC+D,SAAS,CAAS,CAAC,EAAM,CAAC,cAC7DpG,IAAA,MAAGiK,SAAS,CAAC,6BAA6B,CAACK,KAAK,CAAC,+CAA4C,CAAI,CAAC,EAC/F,CAAC,cACNpK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhK,KAAA,SAAAgK,QAAA,EAAM,gBAAc,cAAAhK,KAAA,WAAAgK,QAAA,EAAS7H,OAAO,CAACoE,WAAW,CAAC,GAAC,EAAQ,CAAC,EAAM,CAAC,cAClEzG,IAAA,MAAGiK,SAAS,CAAC,6BAA6B,CAACK,KAAK,CAAC,gCAAgC,CAAI,CAAC,EACnF,CAAC,cACNpK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhK,KAAA,SAAAgK,QAAA,EAAM,cAAY,cAAAhK,KAAA,WAAAgK,QAAA,EAAS7H,OAAO,CAAC4E,YAAY,CAAC,GAAC,EAAQ,CAAC,EAAM,CAAC,cACjEjH,IAAA,MAAGiK,SAAS,CAAC,6BAA6B,CAACK,KAAK,CAAC,qCAAkC,CAAI,CAAC,EACrF,CAAC,cACNpK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhK,KAAA,SAAAgK,QAAA,EAAM,gBAAW,cAAAlK,IAAA,WAAAkK,QAAA,CAAS7H,OAAO,CAACuF,UAAU,CAAS,CAAC,EAAM,CAAC,cAC7D5H,IAAA,MAAGiK,SAAS,CAAC,6BAA6B,CAACK,KAAK,CAAC,mBAAgB,CAAI,CAAC,EACnE,CAAC,EACH,CACN,CAGAjI,OAAO,eACNnC,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1BhK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlK,IAAA,OAAAkK,QAAA,CAAI,oCAA4B,CAAI,CAAC,cACrClK,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACpB,QAAQ,EAAAoL,QAAA,eACPlK,IAAA,CAACjB,GAAG,EACFyE,IAAI,CAAEnB,OAAO,CAACyD,YAAa,CAC3B2E,OAAO,CAAC,OAAO,CACfC,OAAO,CAAC,MAAM,CACdC,EAAE,CAAC,KAAK,CAACC,EAAE,CAAC,KAAK,CACjBC,WAAW,CAAE,EAAG,CAChBlB,KAAK,MAAAO,QAAA,CAEJ7H,OAAO,CAACyD,YAAY,CAACC,GAAG,CAAC,CAACsD,CAAC,CAACC,CAAC,gBAC5BtJ,IAAA,CAAChB,IAAI,EAAS8L,IAAI,CAAE,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAACxB,CAAC,CAAC,CAAC,CAAE,EAAlEA,CAAoE,CACjF,CAAC,CACE,CAAC,cACNtJ,IAAA,CAACf,OAAO,GAAE,CAAC,cAAAe,IAAA,CAACd,MAAM,GAAE,CAAC,EACb,CAAC,CACQ,CAAC,EACnB,CAAC,cAGNgB,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlK,IAAA,OAAAkK,QAAA,CAAI,wBAAmB,CAAI,CAAC,cAC5BlK,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACf,QAAQ,EAACqE,IAAI,CAAEnB,OAAO,CAAC8D,KAAM,CAAC4E,MAAM,CAAE,CAAEC,GAAG,CAAC,EAAE,CAACC,KAAK,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAE,CAAE,CAAAjB,QAAA,eACzElK,IAAA,CAACT,aAAa,EAAC6L,eAAe,CAAC,KAAK,CAAE,CAAC,cACvCpL,IAAA,CAACX,KAAK,EAACoL,OAAO,CAAC,MAAM,CAAE,CAAC,cACxBzK,IAAA,CAACV,KAAK,GAAE,CAAC,cACTU,IAAA,CAACf,OAAO,GAAE,CAAC,cACXe,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,OAAO,CAACK,IAAI,CAAC,SAAS,CAAE,CAAC,EAC9B,CAAC,CACQ,CAAC,EACnB,CAAC,cAGN5K,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlK,IAAA,OAAAkK,QAAA,CAAI,0BAAqB,CAAI,CAAC,cAC9BlK,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACV,UAAU,EAACgE,IAAI,CAAEnB,OAAO,CAACqE,YAAa,CAACiE,EAAE,CAAC,KAAK,CAACC,EAAE,CAAC,KAAK,CAACC,WAAW,CAAE,EAAG,CAAAX,QAAA,eACxElK,IAAA,CAACP,SAAS,GAAE,CAAC,cACbO,IAAA,CAACN,cAAc,EAAC+K,OAAO,CAAC,MAAM,CAAE,CAAC,cACjCzK,IAAA,CAACL,eAAe,EAAC0L,MAAM,CAAE,CAAC,CAAC,CAAC,GAAG,CAAE,CAAE,CAAC,cACpCrL,IAAA,CAACJ,KAAK,EAAC6K,OAAO,CAAC,OAAO,CAACa,MAAM,CAAC,SAAS,CAACR,IAAI,CAAC,SAAS,CAACS,WAAW,CAAE,GAAI,CAAC,CAAC,cAC1EvL,IAAA,CAACf,OAAO,GAAE,CAAC,EACD,CAAC,CACM,CAAC,EACnB,CAAC,cAGNiB,KAAA,QAAK+J,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrClK,IAAA,OAAAkK,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BlK,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACf,QAAQ,EACPqE,IAAI,CAAEnB,OAAO,CAAC8E,IAAK,CACnBqE,MAAM,CAAC,UAAU,CACjBT,MAAM,CAAE,CAAEC,GAAG,CAAC,EAAE,CAACC,KAAK,CAAC,EAAE,CAACC,IAAI,CAAC,EAAE,CAACC,MAAM,CAAC,CAAE,CAAE,CAAAjB,QAAA,eAE7ClK,IAAA,CAACT,aAAa,EAAC6L,eAAe,CAAC,KAAK,CAAC,CAAC,cACtCpL,IAAA,CAACX,KAAK,EAAC8K,IAAI,CAAC,QAAQ,CAAC,CAAC,cACtBnK,IAAA,CAACV,KAAK,EAACmL,OAAO,CAAC,MAAM,CAACN,IAAI,CAAC,UAAU,CAAC,CAAC,cACvCnK,IAAA,CAACf,OAAO,GAAC,CAAC,cACVe,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,OAAO,CAACK,IAAI,CAAC,SAAS,CAAE,CAAC,EAC9B,CAAC,CACQ,CAAC,EACnB,CAAC,EACH,CACN,CAGAvI,KAAK,eACJrC,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1BhK,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlK,IAAA,OAAAkK,QAAA,CAAI,uBAAkB,CAAI,CAAC,cAC3BlK,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACL,SAAS,EAAC2D,IAAI,CAAEjB,KAAK,CAACsF,SAAU,CAACkD,MAAM,CAAE,CAAEC,GAAG,CAAC,EAAE,CAACC,KAAK,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAE,CAAE,CAAAjB,QAAA,eAC5ElK,IAAA,CAACT,aAAa,EAAC6L,eAAe,CAAC,KAAK,CAAC,CAAC,cACtCpL,IAAA,CAACX,KAAK,EAACoL,OAAO,CAAC,MAAM,CAAC,CAAC,cACvBzK,IAAA,CAACV,KAAK,GAAC,CAAC,cACRU,IAAA,CAACf,OAAO,GAAC,CAAC,cACVe,IAAA,CAACF,IAAI,EAACqK,IAAI,CAAC,UAAU,CAACM,OAAO,CAAC,OAAO,CAACa,MAAM,CAAC,SAAS,CAAE,CAAC,EAChD,CAAC,CACO,CAAC,EACnB,CAAC,cAGNpL,KAAA,QAAK+J,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlK,IAAA,OAAAkK,QAAA,CAAI,+BAA0B,CAAI,CAAC,cACnClK,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACf,QAAQ,EAACqE,IAAI,CAAEjB,KAAK,CAACgG,gBAAiB,CAACwC,MAAM,CAAE,CAAEC,GAAG,CAAC,EAAE,CAACC,KAAK,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAE,CAAE,CAAAjB,QAAA,eAClFlK,IAAA,CAACT,aAAa,EAAC6L,eAAe,CAAC,KAAK,CAAE,CAAC,cACvCpL,IAAA,CAACX,KAAK,EAACoL,OAAO,CAAC,UAAU,CAAC,CAAC,cAC3BzK,IAAA,CAACV,KAAK,GAAC,CAAC,cACRU,IAAA,CAACf,OAAO,GAAC,CAAC,cACVe,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,UAAU,CAACK,IAAI,CAAC,SAAS,CAAE,CAAC,EACjC,CAAC,CACQ,CAAC,EACnB,CAAC,EACH,CACN,cAGD5K,KAAA,YAAS+J,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACzClK,IAAA,OAAAkK,QAAA,CAAI,uCAA+B,CAAI,CAAC,CACvCrH,cAAc,CAACgC,MAAM,CAAG,CAAC,eACxB7E,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACf,QAAQ,EAACqE,IAAI,CAAEX,cAAe,CAACkI,MAAM,CAAE,CAAEC,GAAG,CAAC,EAAE,CAACC,KAAK,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAE,CAAE,CAAAjB,QAAA,eAC1ElK,IAAA,CAACT,aAAa,EAAC6L,eAAe,CAAC,KAAK,CAAC,CAAC,cACtCpL,IAAA,CAACX,KAAK,EAACoL,OAAO,CAAC,UAAU,CAAC,CAAC,cAC3BzK,IAAA,CAACV,KAAK,GAAC,CAAC,cACRU,IAAA,CAACf,OAAO,GAAC,CAAC,cACVe,IAAA,CAACd,MAAM,GAAE,CAAC,cACVc,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,cAAW,CAACK,IAAI,CAAC,SAAS,CAAE,CAAC,cAC1C9K,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,WAAQ,CAAIK,IAAI,CAAC,SAAS,CAAE,CAAC,EAClC,CAAC,CACQ,CACtB,EACM,CAAC,cAGV5K,KAAA,YAAS+J,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACzClK,IAAA,OAAAkK,QAAA,CAAI,0BAAqB,CAAI,CAAC,cAC9BlK,IAAA,MAAGiK,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,oFAEjC,CAAG,CAAC,CACHnH,aAAa,CAAC8B,MAAM,CAAG,CAAC,eACvB7E,IAAA,CAACnB,mBAAmB,EAAC0L,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAN,QAAA,cAC5ChK,KAAA,CAACf,QAAQ,EAACqE,IAAI,CAAET,aAAc,CAACgI,MAAM,CAAE,CAAEC,GAAG,CAAC,EAAE,CAACC,KAAK,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAE,CAAE,CAAAjB,QAAA,eACzElK,IAAA,CAACT,aAAa,EAAC6L,eAAe,CAAC,KAAK,CAAC,CAAC,cACtCpL,IAAA,CAACX,KAAK,EAACoL,OAAO,CAAC,MAAM,CAAC,CAAC,cACvBzK,IAAA,CAACV,KAAK,EAACmM,aAAa,CAAE,KAAM,CAACJ,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,cAC7CrL,IAAA,CAACf,OAAO,EAACyM,SAAS,CAAE/C,CAAC,EAAIA,CAAC,CAAG,SAAS,CAAG,OAAQ,CAAE,CAAC,cACpD3I,IAAA,CAACd,MAAM,GAAE,CAAC,cACVc,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,cAAW,CAACK,IAAI,CAAC,SAAS,CAAE,CAAC,cAC1C9K,IAAA,CAACZ,GAAG,EAACqL,OAAO,CAAC,WAAQ,CAAIK,IAAI,CAAC,SAAS,CAAE,CAAC,EAClC,CAAC,CACQ,CACtB,EACM,CAAC,EACP,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}