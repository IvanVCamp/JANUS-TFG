{"ast":null,"code":"// src/components/TherapistPatientTemplatesDetail.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import{useParams,Link}from'react-router-dom';import'../styles/routineTemplates.css';import'../styles/detailsTemplate.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TherapistPatientTemplatesDetail(){const{patientId}=useParams();const[patient,setPatient]=useState(null);const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchAll=async()=>{const token=localStorage.getItem('token');if(!token){setError('No autenticado');setLoading(false);return;}try{// 1) Datos del paciente\nconst{data:patients}=await axios.get('/api/therapist/patients',{headers:{'x-auth-token':token}});const p=patients.find(px=>px._id===patientId);if(!p)throw new Error('Paciente no encontrado');setPatient(p);// 2) Instancias de plantillas asignadas\nconst{data:insts}=await axios.get(`/api/routines/instances/${patientId}`,{headers:{'x-auth-token':token}});setInstances(Array.isArray(insts)?insts:[]);}catch(err){var _err$response,_err$response$data;console.error(err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||err.message);}finally{setLoading(false);}};fetchAll();},[patientId]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando detalles\\u2026\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:error});if(!patient)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page therapist-detail-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container detail-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/templates\",className:\"back-link\",children:\"\\u2190 Volver a plantillas\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Estado de plantillas: \",patient.nombre,\" \",patient.apellidos]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"patient-info\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",patient.email]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fecha de Nac.:\"}),\" \",new Date(patient.fechaNacimiento).toLocaleDateString()]})]}),instances.map(inst=>{var _tpl$tags;const tpl=inst.template;const total=tpl.activities.length;const done=inst.completedActivities.length;const pct=Math.round(done/total*100);return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card detail-card\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"tpl-title\",children:tpl.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:tpl.description}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar small\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-filled\",style:{width:`${pct}%`}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"progress-text\",children:[done,\"/\",total,\" completadas (\",pct,\"%)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"tags-container\",children:(_tpl$tags=tpl.tags)===null||_tpl$tags===void 0?void 0:_tpl$tags.map(tag=>/*#__PURE__*/_jsx(\"span\",{className:\"tag-badge\",children:tag},tag))}),/*#__PURE__*/_jsxs(\"div\",{className:`challenge-indicator level-${tpl.challengeLevel}`,children:[\"Nivel de reto: \",tpl.challengeLevel]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta detail-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-calendar\"}),\" Asignada: \",new Date(inst.createdAt).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-clock-o\"}),\" Duraci\\xF3n: \",tpl.duration,\" min\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-refresh\"}),\" \\xDAltima actualizaci\\xF3n: \",new Date(inst.updatedAt||inst.createdAt).toLocaleString()]})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"activities-detailed-list\",children:tpl.activities.map((act,i)=>{var _inst$notes$i,_inst$notes;const completed=inst.completedActivities.includes(i);// Si el backend guarda notas en inst.notes:\nconst note=(_inst$notes$i=(_inst$notes=inst.notes)===null||_inst$notes===void 0?void 0:_inst$notes[i])!==null&&_inst$notes$i!==void 0?_inst$notes$i:'Sin notas';return/*#__PURE__*/_jsxs(\"li\",{className:`activity-detail-item ${completed?'completed':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"activity-main\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:completed,readOnly:true}),/*#__PURE__*/_jsx(\"span\",{className:\"activity-name\",children:act.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-info-icons\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-clock-o\"}),\" \",act.minutes,\" min\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-star\"}),\" \",act.challenge]})]})]}),act.desc&&/*#__PURE__*/_jsx(\"p\",{className:\"activity-desc\",children:act.desc}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-notes-readonly\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Notas del paciente:\"}),\" \",note]})]},i);})})]},inst._id);})]})});}","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Link","jsx","_jsx","jsxs","_jsxs","TherapistPatientTemplatesDetail","patientId","patient","setPatient","instances","setInstances","loading","setLoading","error","setError","fetchAll","token","localStorage","getItem","data","patients","get","headers","p","find","px","_id","Error","insts","Array","isArray","err","_err$response","_err$response$data","console","response","msg","message","children","className","to","nombre","apellidos","email","Date","fechaNacimiento","toLocaleDateString","map","inst","_tpl$tags","tpl","template","total","activities","length","done","completedActivities","pct","Math","round","name","description","style","width","tags","tag","challengeLevel","createdAt","duration","updatedAt","toLocaleString","act","i","_inst$notes$i","_inst$notes","completed","includes","note","notes","type","checked","readOnly","minutes","challenge","desc"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TherapistTemplatesDetail.js"],"sourcesContent":["// src/components/TherapistPatientTemplatesDetail.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport '../styles/routineTemplates.css';\r\nimport '../styles/detailsTemplate.css';\r\n\r\nexport default function TherapistPatientTemplatesDetail() {\r\n  const { patientId } = useParams();\r\n  const [patient, setPatient]       = useState(null);\r\n  const [instances, setInstances]   = useState([]);\r\n  const [loading, setLoading]       = useState(true);\r\n  const [error, setError]           = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError('No autenticado');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        // 1) Datos del paciente\r\n        const { data: patients } = await axios.get('/api/therapist/patients', {\r\n          headers: { 'x-auth-token': token }\r\n        });\r\n        const p = patients.find(px => px._id === patientId);\r\n        if (!p) throw new Error('Paciente no encontrado');\r\n        setPatient(p);\r\n\r\n        // 2) Instancias de plantillas asignadas\r\n        const { data: insts } = await axios.get(\r\n          `/api/routines/instances/${patientId}`,\r\n          { headers: { 'x-auth-token': token } }\r\n        );\r\n        setInstances(Array.isArray(insts) ? insts : []);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(err.response?.data?.msg || err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, [patientId]);\r\n\r\n  if (loading) return <p>Cargando detalles…</p>;\r\n  if (error)   return <p className=\"error-msg\">{error}</p>;\r\n  if (!patient) return null;\r\n\r\n  return (\r\n    <div className=\"routine-templates-page therapist-detail-page\">\r\n      <div className=\"tpl-container detail-container\">\r\n        <div className=\"detail-header\">\r\n          <Link to=\"/therapist/templates\" className=\"back-link\">\r\n            ← Volver a plantillas\r\n          </Link>\r\n          <h1>\r\n            Estado de plantillas: {patient.nombre} {patient.apellidos}\r\n          </h1>\r\n        </div>\r\n\r\n        {/* Info Paciente */}\r\n        <section className=\"patient-info\">\r\n          <div><strong>Email:</strong> {patient.email}</div>\r\n          <div><strong>Fecha de Nac.:</strong> {new Date(patient.fechaNacimiento).toLocaleDateString()}</div>\r\n        </section>\r\n\r\n        {/* Para cada plantilla asignada */}\r\n        {instances.map(inst => {\r\n          const tpl     = inst.template;\r\n          const total   = tpl.activities.length;\r\n          const done    = inst.completedActivities.length;\r\n          const pct     = Math.round((done/total)*100);\r\n          return (\r\n            <div key={inst._id} className=\"tpl-card detail-card\">\r\n              <h2 className=\"tpl-title\">{tpl.name}</h2>\r\n              <p className=\"tpl-desc\">{tpl.description}</p>\r\n\r\n              {/* Progreso */}\r\n              <div className=\"progress-bar small\">\r\n                <div className=\"progress-filled\" style={{width:`${pct}%`}} />\r\n              </div>\r\n              <p className=\"progress-text\">\r\n                {done}/{total} completadas ({pct}%)\r\n              </p>\r\n\r\n              {/* Badges */}\r\n              <div className=\"tags-container\">\r\n                {tpl.tags?.map(tag => (\r\n                  <span key={tag} className=\"tag-badge\">{tag}</span>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Reto */}\r\n              <div className={`challenge-indicator level-${tpl.challengeLevel}`}>\r\n                Nivel de reto: {tpl.challengeLevel}\r\n              </div>\r\n\r\n              {/* Metadatos */}\r\n              <div className=\"tpl-meta detail-meta\">\r\n                <div><i className=\"fa fa-calendar\"></i> Asignada: {new Date(inst.createdAt).toLocaleDateString()}</div>\r\n                <div><i className=\"fa fa-clock-o\"></i> Duración: {tpl.duration} min</div>\r\n                <div><i className=\"fa fa-refresh\"></i> Última actualización: {new Date(inst.updatedAt||inst.createdAt).toLocaleString()}</div>\r\n              </div>\r\n\r\n              {/* Actividades */}\r\n              <ul className=\"activities-detailed-list\">\r\n                {tpl.activities.map((act, i) => {\r\n                  const completed = inst.completedActivities.includes(i);\r\n                  // Si el backend guarda notas en inst.notes:\r\n                  const note = inst.notes?.[i] ?? 'Sin notas';\r\n                  return (\r\n                    <li key={i} className={`activity-detail-item ${completed ? 'completed' : ''}`}>\r\n                      <div className=\"activity-main\">\r\n                        <label>\r\n                          <input type=\"checkbox\" checked={completed} readOnly />\r\n                          <span className=\"activity-name\">{act.name}</span>\r\n                        </label>\r\n                        <div className=\"activity-info-icons\">\r\n                          <span><i className=\"fa fa-clock-o\"></i> {act.minutes} min</span>\r\n                          <span><i className=\"fa fa-star\"></i> {act.challenge}</span>\r\n                        </div>\r\n                      </div>\r\n                      {act.desc && <p className=\"activity-desc\">{act.desc}</p>}\r\n                      <div className=\"activity-notes-readonly\">\r\n                        <strong>Notas del paciente:</strong> {note}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}