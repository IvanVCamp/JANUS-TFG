{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import axios from'axios';import'../styles/emotionsDiary.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function decodeJwt(token){try{const b64=token.split('.')[1].replace(/-/g,'+').replace(/_/g,'/');return JSON.parse(atob(b64));}catch{return{};}}function EmotionsDiary(){const navigate=useNavigate();const location=useLocation();// Determinamos el modo (snapshot vs interactivo) leyendo la query \"patientId\"\nconst searchParams=new URLSearchParams(location.search);const queryPatientId=searchParams.get('patientId');const isViewMode=Boolean(queryPatientId);// Estados para el modo interactivo\nconst[activities,setActivities]=useState([]);const[ratings,setRatings]=useState({});// Estado para el modo snapshot (diario guardado)\nconst[snapshotDiary,setSnapshotDiary]=useState(null);const[userRole,setUserRole]=useState(null);// Niveles de felicidad para el termómetro\nconst levels=[{value:1,label:'Nada feliz',emoji:'😞'},{value:2,label:'Poco feliz',emoji:'🙁'},{value:3,label:'Neutral',emoji:'😐'},{value:4,label:'Feliz',emoji:'🙂'},{value:5,label:'Muy feliz',emoji:'😄'}];// Verificar que exista token; sino, redirige al login\nuseEffect(()=>{var _payload$user;const token=localStorage.getItem('token');if(!token){navigate('/');return;}const payload=decodeJwt(token);setUserRole(((_payload$user=payload.user)===null||_payload$user===void 0?void 0:_payload$user.role)||payload.role);},[navigate]);// Si estamos en modo snapshot, obtenemos el último diario guardado\nuseEffect(()=>{if(isViewMode){const fetchSnapshotDiary=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get(`https://localhost:8080/api/emotions?patientId=${queryPatientId}`,{headers:{'x-auth-token':token}});if(response.data&&response.data.length>0){// Tomamos el diario más reciente (el primero)\nsetSnapshotDiary(response.data[0]);}}catch(error){console.error(\"Error al obtener el diario de emociones guardado:\",error);}};fetchSnapshotDiary();}else{// En modo interactivo, cargamos las actividades a partir de los resultados de la Máquina del Tiempo\nconst token=localStorage.getItem('token');axios.get('http://localhost:8080/api/game',{headers:{'x-auth-token':token}}).then(response=>{const gameResults=response.data;const activityMap={};gameResults.forEach(result=>{if(result.timeSlots){result.timeSlots.forEach(slot=>{if(slot.activities){slot.activities.forEach(act=>{if(!activityMap[act.activityId]){activityMap[act.activityId]={activityId:act.activityId,title:act.title,icon:act.icon};}});}});}});setActivities(Object.values(activityMap));}).catch(error=>{console.error(\"Error al cargar actividades:\",error);});}},[isViewMode,queryPatientId]);// Función para cambiar el rating en modo interactivo\nconst handleRatingChange=(activityId,rating)=>{setRatings(prev=>({...prev,[activityId]:rating}));};// Función para enviar el diario (guardar) en modo interactivo\nconst handleSubmitDiary=async()=>{const token=localStorage.getItem('token');const payload={diary:activities.map(act=>({activityId:act.activityId,title:act.title,icon:act.icon,rating:ratings[act.activityId]||3// Valor por defecto: neutral\n}))};try{await axios.post('/api/emotions',payload,{headers:{'x-auth-token':token}});alert('¡Tu diario de emociones ha sido guardado!');navigate('/dashboard');}catch(error){console.error(\"Error al guardar el diario:\",error);alert('Error al guardar el diario de emociones.');}};const handleGoBack=()=>{if(isViewMode){// en snapshot, venimos desde /therapist/patients\nnavigate('/therapist/patients');}else{// en interactivo, paciente vuelve a /dashboard\nnavigate(userRole==='terapeuta'?'/therapist/patients':'/dashboard');}};// Renderizado condicional según el modo: Snapshot (Vista) o Interactivo (Paciente)\nif(isViewMode){// Modo Snapshot: Se muestra el diario de emociones guardado de forma estática\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"diario-emociones-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"de-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"de-header-left\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-dashboard-btn\",onClick:handleGoBack,children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Diario de Emociones - \\xDAltimo Guardado\"})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"de-main\",children:[/*#__PURE__*/_jsx(\"section\",{className:\"de-intro\",children:/*#__PURE__*/_jsx(\"p\",{children:\"A continuaci\\xF3n se muestra el estado de tu diario de emociones guardado.\"})}),/*#__PURE__*/_jsx(\"section\",{className:\"de-activities\",children:snapshotDiary&&snapshotDiary.diary&&snapshotDiary.diary.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"activities-grid\",children:snapshotDiary.diary.map((entry,index)=>{const level=levels.find(l=>l.value===entry.rating);return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-icon\",children:entry.icon}),/*#__PURE__*/_jsx(\"div\",{className:\"activity-title\",children:entry.title}),/*#__PURE__*/_jsx(\"div\",{className:\"activity-thermometer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"thermo-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"thermo-emoji\",children:level?level.emoji:''}),/*#__PURE__*/_jsx(\"span\",{className:\"thermo-label\",children:level?level.label:''})]})})]},index);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No se encontr\\xF3 un diario guardado.\"})})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"de-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"2025 \\xA9 Iv\\xE1n Vela Campos\"})})]});}// Modo interactivo: El paciente puede seleccionar los ratings y guardar el diario\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"diario-emociones-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"de-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"de-header-left\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-dashboard-btn\",onClick:handleGoBack,children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Diario de Emociones\"})]})}),/*#__PURE__*/_jsxs(\"main\",{className:\"de-main\",children:[/*#__PURE__*/_jsx(\"section\",{className:\"de-intro\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xBFC\\xF3mo te sientes con lo bien que haces estas actividades?\"})}),/*#__PURE__*/_jsx(\"section\",{className:\"de-activities\",children:activities.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No hay actividades registradas en tu M\\xE1quina del Tiempo.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"activities-grid\",children:activities.map(act=>/*#__PURE__*/_jsxs(\"div\",{className:\"activity-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-icon\",children:act.icon}),/*#__PURE__*/_jsx(\"div\",{className:\"activity-title\",children:act.title}),/*#__PURE__*/_jsx(\"div\",{className:\"activity-thermometer\",children:levels.map(level=>/*#__PURE__*/_jsxs(\"button\",{className:`thermo-btn ${ratings[act.activityId]===level.value?'selected':''}`,onClick:()=>handleRatingChange(act.activityId,level.value),children:[/*#__PURE__*/_jsx(\"span\",{className:\"thermo-emoji\",children:level.emoji}),/*#__PURE__*/_jsx(\"span\",{className:\"thermo-label\",children:level.label})]},level.value))})]},act.activityId))})}),/*#__PURE__*/_jsx(\"section\",{className:\"de-submit\",children:/*#__PURE__*/_jsx(\"button\",{className:\"de-submit-btn\",onClick:handleSubmitDiary,children:\"Guardar Diario\"})})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"de-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"2025 \\xA9 Iv\\xE1n Vela Campos\"})})]});}export default EmotionsDiary;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","jsx","_jsx","jsxs","_jsxs","decodeJwt","token","b64","split","replace","JSON","parse","atob","EmotionsDiary","navigate","location","searchParams","URLSearchParams","search","queryPatientId","get","isViewMode","Boolean","activities","setActivities","ratings","setRatings","snapshotDiary","setSnapshotDiary","userRole","setUserRole","levels","value","label","emoji","_payload$user","localStorage","getItem","payload","user","role","fetchSnapshotDiary","response","headers","data","length","error","console","then","gameResults","activityMap","forEach","result","timeSlots","slot","act","activityId","title","icon","Object","values","catch","handleRatingChange","rating","prev","handleSubmitDiary","diary","map","post","alert","handleGoBack","className","children","onClick","entry","index","level","find","l"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/EmotionsDiary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/emotionsDiary.css';\r\n\r\nfunction decodeJwt(token) {\r\n  try {\r\n    const b64    = token.split('.')[1].replace(/-/g,'+').replace(/_/g,'/');\r\n    return JSON.parse(atob(b64));\r\n  } catch {\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction EmotionsDiary() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  // Determinamos el modo (snapshot vs interactivo) leyendo la query \"patientId\"\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const queryPatientId = searchParams.get('patientId');\r\n  const isViewMode = Boolean(queryPatientId);\r\n\r\n  // Estados para el modo interactivo\r\n  const [activities, setActivities] = useState([]);\r\n  const [ratings, setRatings] = useState({});\r\n\r\n  // Estado para el modo snapshot (diario guardado)\r\n  const [snapshotDiary, setSnapshotDiary] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n\r\n  // Niveles de felicidad para el termómetro\r\n  const levels = [\r\n    { value: 1, label: 'Nada feliz', emoji: '😞' },\r\n    { value: 2, label: 'Poco feliz', emoji: '🙁' },\r\n    { value: 3, label: 'Neutral', emoji: '😐' },\r\n    { value: 4, label: 'Feliz', emoji: '🙂' },\r\n    { value: 5, label: 'Muy feliz', emoji: '😄' }\r\n  ];\r\n\r\n  // Verificar que exista token; sino, redirige al login\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    const payload = decodeJwt(token);\r\n    setUserRole(payload.user?.role || payload.role);\r\n  }, [navigate]);\r\n  // Si estamos en modo snapshot, obtenemos el último diario guardado\r\n  useEffect(() => {\r\n    if (isViewMode) {\r\n      const fetchSnapshotDiary = async () => {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          const response = await axios.get(`https://localhost:8080/api/emotions?patientId=${queryPatientId}`, {\r\n            headers: { 'x-auth-token': token }\r\n          });\r\n          if (response.data && response.data.length > 0) {\r\n            // Tomamos el diario más reciente (el primero)\r\n            setSnapshotDiary(response.data[0]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error al obtener el diario de emociones guardado:\", error);\r\n        }\r\n      };\r\n      fetchSnapshotDiary();\r\n    } else {\r\n      // En modo interactivo, cargamos las actividades a partir de los resultados de la Máquina del Tiempo\r\n      const token = localStorage.getItem('token');\r\n      axios\r\n        .get('http://localhost:8080/api/game', { headers: { 'x-auth-token': token } })\r\n        .then(response => {\r\n          const gameResults = response.data;\r\n          const activityMap = {};\r\n          gameResults.forEach(result => {\r\n            if (result.timeSlots) {\r\n              result.timeSlots.forEach(slot => {\r\n                if (slot.activities) {\r\n                  slot.activities.forEach(act => {\r\n                    if (!activityMap[act.activityId]) {\r\n                      activityMap[act.activityId] = {\r\n                        activityId: act.activityId,\r\n                        title: act.title,\r\n                        icon: act.icon\r\n                      };\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n          setActivities(Object.values(activityMap));\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error al cargar actividades:\", error);\r\n        });\r\n    }\r\n  }, [isViewMode, queryPatientId]);\r\n\r\n  // Función para cambiar el rating en modo interactivo\r\n  const handleRatingChange = (activityId, rating) => {\r\n    setRatings(prev => ({ ...prev, [activityId]: rating }));\r\n  };\r\n\r\n  // Función para enviar el diario (guardar) en modo interactivo\r\n  const handleSubmitDiary = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const payload = {\r\n      diary: activities.map(act => ({\r\n        activityId: act.activityId,\r\n        title: act.title,\r\n        icon: act.icon,\r\n        rating: ratings[act.activityId] || 3 // Valor por defecto: neutral\r\n      }))\r\n    };\r\n    try {\r\n      await axios.post('/api/emotions', payload, {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      alert('¡Tu diario de emociones ha sido guardado!');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error(\"Error al guardar el diario:\", error);\r\n      alert('Error al guardar el diario de emociones.');\r\n    }\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    if (isViewMode) {\r\n      // en snapshot, venimos desde /therapist/patients\r\n      navigate('/therapist/patients');\r\n    } else {\r\n      // en interactivo, paciente vuelve a /dashboard\r\n      navigate(userRole === 'terapeuta' ? '/therapist/patients' : '/dashboard');\r\n    }\r\n  };\r\n\r\n  // Renderizado condicional según el modo: Snapshot (Vista) o Interactivo (Paciente)\r\n  if (isViewMode) {\r\n    // Modo Snapshot: Se muestra el diario de emociones guardado de forma estática\r\n    return (\r\n      <div className=\"diario-emociones-container\">\r\n        <header className=\"de-header\">\r\n          <div className=\"de-header-left\">\r\n            <button\r\n              className=\"back-dashboard-btn\"\r\n              onClick={handleGoBack}\r\n            >←</button>            \r\n            <h1>Diario de Emociones - Último Guardado</h1>\r\n          </div>\r\n        </header>\r\n        <main className=\"de-main\">\r\n          <section className=\"de-intro\">\r\n            <p>A continuación se muestra el estado de tu diario de emociones guardado.</p>\r\n          </section>\r\n          <section className=\"de-activities\">\r\n            {snapshotDiary && snapshotDiary.diary && snapshotDiary.diary.length > 0 ? (\r\n              <div className=\"activities-grid\">\r\n                {snapshotDiary.diary.map((entry, index) => {\r\n                  const level = levels.find(l => l.value === entry.rating);\r\n                  return (\r\n                    <div key={index} className=\"activity-card\">\r\n                      <div className=\"activity-icon\">{entry.icon}</div>\r\n                      <div className=\"activity-title\">{entry.title}</div>\r\n                      <div className=\"activity-thermometer\">\r\n                        <div className=\"thermo-display\">\r\n                          <span className=\"thermo-emoji\">{level ? level.emoji : ''}</span>\r\n                          <span className=\"thermo-label\">{level ? level.label : ''}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <p>No se encontró un diario guardado.</p>\r\n            )}\r\n          </section>\r\n        </main>\r\n        <footer className=\"de-footer\">\r\n          <p>2025 © Iván Vela Campos</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Modo interactivo: El paciente puede seleccionar los ratings y guardar el diario\r\n  return (\r\n    <div className=\"diario-emociones-container\">\r\n      <header className=\"de-header\">\r\n        <div className=\"de-header-left\">\r\n          <button\r\n            className=\"back-dashboard-btn\"\r\n            onClick={handleGoBack}\r\n          >←</button>         \r\n          <h1>Diario de Emociones</h1>\r\n        </div>\r\n      </header>\r\n      <main className=\"de-main\">\r\n        <section className=\"de-intro\">\r\n          <p>¿Cómo te sientes con lo bien que haces estas actividades?</p>\r\n        </section>\r\n        <section className=\"de-activities\">\r\n          {activities.length === 0 ? (\r\n            <p>No hay actividades registradas en tu Máquina del Tiempo.</p>\r\n          ) : (\r\n            <div className=\"activities-grid\">\r\n              {activities.map(act => (\r\n                <div key={act.activityId} className=\"activity-card\">\r\n                  <div className=\"activity-icon\">{act.icon}</div>\r\n                  <div className=\"activity-title\">{act.title}</div>\r\n                  <div className=\"activity-thermometer\">\r\n                    {levels.map(level => (\r\n                      <button\r\n                        key={level.value}\r\n                        className={`thermo-btn ${ratings[act.activityId] === level.value ? 'selected' : ''}`}\r\n                        onClick={() => handleRatingChange(act.activityId, level.value)}\r\n                      >\r\n                        <span className=\"thermo-emoji\">{level.emoji}</span>\r\n                        <span className=\"thermo-label\">{level.label}</span>\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n        <section className=\"de-submit\">\r\n          <button className=\"de-submit-btn\" onClick={handleSubmitDiary}>Guardar Diario</button>\r\n        </section>\r\n      </main>\r\n      <footer className=\"de-footer\">\r\n        <p>2025 © Iván Vela Campos</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmotionsDiary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}