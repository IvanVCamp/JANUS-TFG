{"ast":null,"code":"import axios from'axios';const API_URL='/api/auth';const authService={login:async credentials=>{// 1) Hacemos la petición de login\nconst response=await axios.post(`${API_URL}/login`,credentials);// 2) Guardamos en localStorage SOLO si viene un objeto válido\nif(response.data&&typeof response.data==='object'){var _response$data$user;// Asumimos que tu API devuelve { user: {…}, token: '…' } o directamente el user\nconst toStore=(_response$data$user=response.data.user)!==null&&_response$data$user!==void 0?_response$data$user:response.data;localStorage.setItem('user',JSON.stringify(toStore));}return response;},register:userData=>axios.post(`${API_URL}/register`,userData),forgotPassword:email=>axios.post(`${API_URL}/forgot-password`,{email}),resetPassword:data=>axios.put(`${API_URL}/reset-password`,data),// Nuevo método seguro para leer el usuario\ngetCurrentUser:()=>{const raw=localStorage.getItem('user');if(!raw)return null;try{return JSON.parse(raw);}catch(err){console.warn('authService: usuario corrupto en localStorage:',raw);localStorage.removeItem('user');return null;}},logout:()=>{localStorage.removeItem('user');}};export default authService;","map":{"version":3,"names":["axios","API_URL","authService","login","credentials","response","post","data","_response$data$user","toStore","user","localStorage","setItem","JSON","stringify","register","userData","forgotPassword","email","resetPassword","put","getCurrentUser","raw","getItem","parse","err","console","warn","removeItem","logout"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/auth';\r\n\r\nconst authService = {\r\n  login: async (credentials) => {\r\n    // 1) Hacemos la petición de login\r\n    const response = await axios.post(`${API_URL}/login`, credentials);\r\n    // 2) Guardamos en localStorage SOLO si viene un objeto válido\r\n    if (response.data && typeof response.data === 'object') {\r\n      // Asumimos que tu API devuelve { user: {…}, token: '…' } o directamente el user\r\n      const toStore = response.data.user ?? response.data;\r\n      localStorage.setItem('user', JSON.stringify(toStore));\r\n    }\r\n    return response;\r\n  },\r\n\r\n  register: (userData) =>\r\n    axios.post(`${API_URL}/register`, userData),\r\n\r\n  forgotPassword: (email) =>\r\n    axios.post(`${API_URL}/forgot-password`, { email }),\r\n\r\n  resetPassword: (data) =>\r\n    axios.put(`${API_URL}/reset-password`, data),\r\n\r\n  // Nuevo método seguro para leer el usuario\r\n  getCurrentUser: () => {\r\n    const raw = localStorage.getItem('user');\r\n    if (!raw) return null;\r\n    try {\r\n      return JSON.parse(raw);\r\n    } catch (err) {\r\n      console.warn('authService: usuario corrupto en localStorage:', raw);\r\n      localStorage.removeItem('user');\r\n      return null;\r\n    }\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,WAAW,CAE3B,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5B;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,CAAEG,WAAW,CAAC,CAClE;AACA,GAAIC,QAAQ,CAACE,IAAI,EAAI,MAAO,CAAAF,QAAQ,CAACE,IAAI,GAAK,QAAQ,CAAE,KAAAC,mBAAA,CACtD;AACA,KAAM,CAAAC,OAAO,EAAAD,mBAAA,CAAGH,QAAQ,CAACE,IAAI,CAACG,IAAI,UAAAF,mBAAA,UAAAA,mBAAA,CAAIH,QAAQ,CAACE,IAAI,CACnDI,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAAC,CAAC,CACvD,CACA,MAAO,CAAAJ,QAAQ,CACjB,CAAC,CAEDU,QAAQ,CAAGC,QAAQ,EACjBhB,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,CAAEe,QAAQ,CAAC,CAE7CC,cAAc,CAAGC,KAAK,EACpBlB,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,kBAAkB,CAAE,CAAEiB,KAAM,CAAC,CAAC,CAErDC,aAAa,CAAGZ,IAAI,EAClBP,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,iBAAiB,CAAEM,IAAI,CAAC,CAE9C;AACAc,cAAc,CAAEA,CAAA,GAAM,CACpB,KAAM,CAAAC,GAAG,CAAGX,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC,CACxC,GAAI,CAACD,GAAG,CAAE,MAAO,KAAI,CACrB,GAAI,CACF,MAAO,CAAAT,IAAI,CAACW,KAAK,CAACF,GAAG,CAAC,CACxB,CAAE,MAAOG,GAAG,CAAE,CACZC,OAAO,CAACC,IAAI,CAAC,gDAAgD,CAAEL,GAAG,CAAC,CACnEX,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC,CAC/B,MAAO,KAAI,CACb,CACF,CAAC,CAEDC,MAAM,CAAEA,CAAA,GAAM,CACZlB,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC,CACjC,CACF,CAAC,CAED,cAAe,CAAA1B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}