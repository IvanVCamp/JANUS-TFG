{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{ResponsiveContainer,PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar,LineChart,Line,RadialBarChart,RadialBar}from'recharts';import'../styles/therapistRoutines.css';// Fixed list of categories (in lowercase)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ALL_CATEGORIES=['cuidado personal','actividades escolares','juego y tiempo libre','participación comunitaria','descanso y sueño'];// Map activityId ➔ category\nconst categoryMap={futbol:'juego y tiempo libre',dibujos:'juego y tiempo libre',comics:'juego y tiempo libre',tarea:'actividades escolares',videojuegos:'juego y tiempo libre',helado:'juego y tiempo libre',parque:'participación comunitaria',banio:'cuidado personal',dormir:'descanso y sueño',musica:'juego y tiempo libre',bailar:'juego y tiempo libre',amigos:'participación comunitaria',bicicleta:'juego y tiempo libre',dibujar:'juego y tiempo libre',mascotas:'juego y tiempo libre',experimentos:'actividades escolares',cantar:'juego y tiempo libre',lego:'juego y tiempo libre',nadar:'cuidado personal',computadora:'juego y tiempo libre'};export default function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selected,setSelected]=useState(null);const[metrics,setMetrics]=useState(null);const[multi,setMulti]=useState(null);// Fetch all game results for patient\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(_ref=>{let{data}=_ref;setResults(data);const now=new Date();const weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// Filter results by date range\nuseEffect(()=>{if(!from||!to)return;const f=new Date(from),t=new Date(to);t.setHours(23,59,59,999);setFiltered(results.filter(r=>{const d=new Date(r.createdAt);return d>=f&&d<=t;}));},[results,from,to]);// Default select first available day\nuseEffect(()=>{setSelected(filtered.length?filtered[0].createdAt:null);},[filtered]);// Compute metrics for selected day\nuseEffect(()=>{if(!selected)return;const res=filtered.find(r=>r.createdAt===selected);if(!res)return;const slots=res.timeSlots||[];const acts=slots.flatMap(s=>s.activities||[]);const totalMin=acts.reduce((sum,a)=>sum+a.duration,0)||1;// 1. Fragmentation: count contiguous occupied blocks\nlet fragments=0,inBlock=false;slots.forEach(s=>{const occupied=s.activities&&s.activities.length>0;if(occupied&&!inBlock){fragments++;inBlock=true;}else if(!occupied&&inBlock){inBlock=false;}});// 2. Sum minutes per category\nconst catSum={};ALL_CATEGORIES.forEach(cat=>catSum[cat]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId];if(cat)catSum[cat]+=a.duration;});// 3. Distribution % by category\nconst distribution=ALL_CATEGORIES.map(name=>({name,value:+(catSum[name]/totalMin*100||0).toFixed(1)}));// 4. Hours by category\nconst hours=ALL_CATEGORIES.map(name=>({name,hours:+(catSum[name]/60).toFixed(2)}));// 5. Diversity (# unique activities)\nconst diversity=new Set(acts.map(a=>a.activityId)).size;// 6. Consistency (% slots occupied)\nconst occupiedSlots=slots.filter(s=>{var _s$activities;return((_s$activities=s.activities)===null||_s$activities===void 0?void 0:_s$activities.length)>0;}).length;const consistency=+(occupiedSlots/24*100).toFixed(1);// 7. Balance index (inverse entropy)\nconst uniform=100/distribution.length;const distDiff=distribution.reduce((acc,d)=>acc+Math.abs(d.value-uniform),0)/2;const balanceIndex=+((100-distDiff)/100*100).toFixed(1);// 8. Top 3 activities by time\nconst actSum={};acts.forEach(a=>{actSum[a.activityId]=(actSum[a.activityId]||0)+a.duration;});const top3=Object.entries(actSum).sort((a,b)=>b[1]-a[1]).slice(0,3).map(_ref2=>{let[id,val]=_ref2;return{name:id,hours:+(val/60).toFixed(2)};});// 9. Sleep hours\nconst sleepHours=+(catSum['descanso y sueño']/60).toFixed(2);setMetrics({distribution,hours,diversity,consistency,balanceIndex,top3,sleepHours,fragmentation:fragments});},[selected,filtered]);// Compute multi-day metrics\nuseEffect(()=>{if(!filtered.length){setMulti(null);return;}// Sleep trend over days\nconst sleepData=filtered.map(r=>{const date=new Date(r.createdAt).toLocaleDateString();const sleepMin=r.timeSlots.reduce((sum,slot)=>{var _slot$activities;const entry=(_slot$activities=slot.activities)===null||_slot$activities===void 0?void 0:_slot$activities.find(a=>a.activityId==='dormir');return sum+(entry?entry.duration:0);},0);return{date,hours:+(sleepMin/60).toFixed(2)};});// Category variance\nconst dayPercents=filtered.map(r=>{const acts=r.timeSlots.flatMap(s=>s.activities||[]);const total=acts.reduce((sum,a)=>sum+a.duration,0)||1;const sums={};ALL_CATEGORIES.forEach(cat=>sums[cat]=0);acts.forEach(a=>{const cat=categoryMap[a.activityId];if(cat)sums[cat]+=a.duration;});return ALL_CATEGORIES.reduce((obj,cat)=>{obj[cat]=+(sums[cat]/total*100).toFixed(1);return obj;},{});});const categoryVariance=ALL_CATEGORIES.map(cat=>{const vals=dayPercents.map(d=>d[cat]);const mean=vals.reduce((a,b)=>a+b,0)/vals.length;const varr=vals.reduce((acc,v)=>acc+(v-mean)**2,0)/vals.length;return{category:cat,variance:+varr.toFixed(2)};});setMulti({sleepData,categoryVariance});},[filtered]);return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"D\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selected||'',onChange:e=>setSelected(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"N\\xFAmero de actividades diferentes.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Porcentaje de franjas ocupadas.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Equilibrio: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.balanceIndex,\"%\"]}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Equilibrio respecto a distribuci\\xF3n uniforme.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Sue\\xF1o (h): \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.sleepHours}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Horas dedicadas a descanso.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Fragmentaci\\xF3n: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.fragmentation}),\" bloques\",/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-info-circle info-icon\",title:\"Bloques separados de actividad.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\xCDndice de Fragmentaci\\xF3n\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(RadialBarChart,{startAngle:90,endAngle:-270,data:[{name:'Fragmentos',value:metrics.fragmentation}],innerRadius:\"80%\",outerRadius:\"100%\",children:[/*#__PURE__*/_jsx(RadialBar,{minAngle:15,background:true,clockWise:true,dataKey:\"value\",label:{position:'inside',formatter:()=>`${metrics.fragmentation}`},fill:\"#82ca9d\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"bottom\",iconSize:8})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'][i%5]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.hours,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Balance de Categor\\xEDas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(RadarChart,{data:metrics.distribution,cx:\"50%\",cy:\"50%\",outerRadius:80,children:[/*#__PURE__*/_jsx(PolarGrid,{}),/*#__PURE__*/_jsx(PolarAngleAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(PolarRadiusAxis,{domain:[0,100]}),/*#__PURE__*/_jsx(Radar,{dataKey:\"value\",stroke:\"#82ca9d\",fill:\"#82ca9d\",fillOpacity:0.6}),/*#__PURE__*/_jsx(Tooltip,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top 3 Actividades\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.top3,layout:\"vertical\",margin:{top:10,right:30,left:50,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"name\",type:\"category\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#ffc658\"})]})})]})]})]}),multi&&/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tendencia de Sue\\xF1o\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:multi.sleepData,margin:{top:10,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"hours\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Variabilidad por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:multi.categoryVariance,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"category\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"variance\",fill:\"#ff8042\"})]})})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","ResponsiveContainer","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","LineChart","Line","RadialBarChart","RadialBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ALL_CATEGORIES","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selected","setSelected","metrics","setMetrics","multi","setMulti","token","localStorage","getItem","get","headers","then","_ref","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","f","t","setHours","filter","r","d","createdAt","length","res","find","slots","timeSlots","acts","flatMap","s","activities","totalMin","reduce","sum","a","duration","fragments","inBlock","forEach","occupied","catSum","cat","activityId","distribution","map","name","value","toFixed","hours","diversity","Set","size","occupiedSlots","_s$activities","consistency","uniform","distDiff","acc","Math","abs","balanceIndex","actSum","top3","Object","entries","sort","b","_ref2","id","val","sleepHours","fragmentation","sleepData","date","toLocaleDateString","sleepMin","slot","_slot$activities","entry","dayPercents","total","sums","obj","categoryVariance","vals","mean","varr","v","category","variance","className","children","type","onChange","e","target","title","width","height","startAngle","endAngle","innerRadius","outerRadius","minAngle","background","clockWise","dataKey","label","position","formatter","fill","verticalAlign","iconSize","nameKey","cx","cy","_","i","margin","top","right","left","bottom","strokeDasharray","domain","stroke","fillOpacity","layout"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  ResponsiveContainer,\r\n  PieChart, Pie, Cell, Tooltip, Legend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  LineChart, Line,\r\n  RadialBarChart, RadialBar\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Fixed list of categories (in lowercase)\r\nconst ALL_CATEGORIES = [\r\n  'cuidado personal',\r\n  'actividades escolares',\r\n  'juego y tiempo libre',\r\n  'participación comunitaria',\r\n  'descanso y sueño'\r\n];\r\n\r\n// Map activityId ➔ category\r\nconst categoryMap = {\r\n  futbol: 'juego y tiempo libre',\r\n  dibujos: 'juego y tiempo libre',\r\n  comics: 'juego y tiempo libre',\r\n  tarea: 'actividades escolares',\r\n  videojuegos: 'juego y tiempo libre',\r\n  helado: 'juego y tiempo libre',\r\n  parque: 'participación comunitaria',\r\n  banio: 'cuidado personal',\r\n  dormir: 'descanso y sueño',\r\n  musica: 'juego y tiempo libre',\r\n  bailar: 'juego y tiempo libre',\r\n  amigos: 'participación comunitaria',\r\n  bicicleta: 'juego y tiempo libre',\r\n  dibujar: 'juego y tiempo libre',\r\n  mascotas: 'juego y tiempo libre',\r\n  experimentos: 'actividades escolares',\r\n  cantar: 'juego y tiempo libre',\r\n  lego: 'juego y tiempo libre',\r\n  nadar: 'cuidado personal',\r\n  computadora: 'juego y tiempo libre'\r\n};\r\n\r\nexport default function PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [multi, setMulti] = useState(null);\r\n\r\n  // Fetch all game results for patient\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    }).then(({ data }) => {\r\n      setResults(data);\r\n      const now = new Date();\r\n      const weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    }).catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // Filter results by date range\r\n  useEffect(() => {\r\n    if (!from || !to) return;\r\n    const f = new Date(from), t = new Date(to);\r\n    t.setHours(23,59,59,999);\r\n    setFiltered(results.filter(r => {\r\n      const d = new Date(r.createdAt);\r\n      return d >= f && d <= t;\r\n    }));\r\n  }, [results, from, to]);\r\n\r\n  // Default select first available day\r\n  useEffect(() => {\r\n    setSelected(filtered.length ? filtered[0].createdAt : null);\r\n  }, [filtered]);\r\n\r\n  // Compute metrics for selected day\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    const res = filtered.find(r => r.createdAt === selected);\r\n    if (!res) return;\r\n\r\n    const slots = res.timeSlots || [];\r\n    const acts = slots.flatMap(s => s.activities || []);\r\n    const totalMin = acts.reduce((sum,a) => sum + a.duration, 0) || 1;\r\n\r\n    // 1. Fragmentation: count contiguous occupied blocks\r\n    let fragments = 0, inBlock = false;\r\n    slots.forEach(s => {\r\n      const occupied = (s.activities && s.activities.length > 0);\r\n      if (occupied && !inBlock) {\r\n        fragments++;\r\n        inBlock = true;\r\n      } else if (!occupied && inBlock) {\r\n        inBlock = false;\r\n      }\r\n    });\r\n\r\n    // 2. Sum minutes per category\r\n    const catSum = {};\r\n    ALL_CATEGORIES.forEach(cat => catSum[cat] = 0);\r\n    acts.forEach(a => {\r\n      const cat = categoryMap[a.activityId];\r\n      if (cat) catSum[cat] += a.duration;\r\n    });\r\n\r\n    // 3. Distribution % by category\r\n    const distribution = ALL_CATEGORIES.map(name => ({\r\n      name,\r\n      value: +((catSum[name] / totalMin * 100) || 0).toFixed(1)\r\n    }));\r\n\r\n    // 4. Hours by category\r\n    const hours = ALL_CATEGORIES.map(name => ({\r\n      name,\r\n      hours: +(catSum[name] / 60).toFixed(2)\r\n    }));\r\n\r\n    // 5. Diversity (# unique activities)\r\n    const diversity = new Set(acts.map(a => a.activityId)).size;\r\n\r\n    // 6. Consistency (% slots occupied)\r\n    const occupiedSlots = slots.filter(s => s.activities?.length > 0).length;\r\n    const consistency = +((occupiedSlots / 24 * 100).toFixed(1));\r\n\r\n    // 7. Balance index (inverse entropy)\r\n    const uniform = 100 / distribution.length;\r\n    const distDiff = distribution.reduce((acc,d) =>\r\n      acc + Math.abs(d.value - uniform), 0) / 2;\r\n    const balanceIndex = +((100 - distDiff) / 100 * 100).toFixed(1);\r\n\r\n    // 8. Top 3 activities by time\r\n    const actSum = {};\r\n    acts.forEach(a => {\r\n      actSum[a.activityId] = (actSum[a.activityId]||0) + a.duration;\r\n    });\r\n    const top3 = Object.entries(actSum)\r\n      .sort((a,b) => b[1] - a[1]).slice(0,3)\r\n      .map(([id,val]) => ({ name: id, hours: +(val/60).toFixed(2) }));\r\n\r\n    // 9. Sleep hours\r\n    const sleepHours = +(catSum['descanso y sueño'] / 60).toFixed(2);\r\n\r\n    setMetrics({\r\n      distribution,\r\n      hours,\r\n      diversity,\r\n      consistency,\r\n      balanceIndex,\r\n      top3,\r\n      sleepHours,\r\n      fragmentation: fragments\r\n    });\r\n  }, [selected, filtered]);\r\n\r\n  // Compute multi-day metrics\r\n  useEffect(() => {\r\n    if (!filtered.length) {\r\n      setMulti(null);\r\n      return;\r\n    }\r\n    // Sleep trend over days\r\n    const sleepData = filtered.map(r => {\r\n      const date = new Date(r.createdAt).toLocaleDateString();\r\n      const sleepMin = r.timeSlots.reduce((sum, slot) => {\r\n        const entry = slot.activities?.find(a => a.activityId === 'dormir');\r\n        return sum + (entry ? entry.duration : 0);\r\n      }, 0);\r\n      return { date, hours: +(sleepMin/60).toFixed(2) };\r\n    });\r\n    // Category variance\r\n    const dayPercents = filtered.map(r => {\r\n      const acts = r.timeSlots.flatMap(s => s.activities || []);\r\n      const total = acts.reduce((sum,a)=>sum+a.duration,0)||1;\r\n      const sums = {};\r\n      ALL_CATEGORIES.forEach(cat => sums[cat]=0);\r\n      acts.forEach(a => {\r\n        const cat = categoryMap[a.activityId];\r\n        if (cat) sums[cat] += a.duration;\r\n      });\r\n      return ALL_CATEGORIES.reduce((obj,cat) => {\r\n        obj[cat] = +(sums[cat]/total*100).toFixed(1);\r\n        return obj;\r\n      }, {});\r\n    });\r\n    const categoryVariance = ALL_CATEGORIES.map(cat => {\r\n      const vals = dayPercents.map(d => d[cat]);\r\n      const mean = vals.reduce((a,b)=>a+b,0)/vals.length;\r\n      const varr = vals.reduce((acc,v)=>acc+(v-mean)**2,0)/vals.length;\r\n      return { category: cat, variance: +varr.toFixed(2) };\r\n    });\r\n    setMulti({ sleepData, categoryVariance });\r\n  }, [filtered]);\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <label>Desde:<input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} /></label>\r\n        <label>Hasta:<input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} /></label>\r\n        <label>Día:\r\n          <select value={selected||''} onChange={e=>setSelected(e.target.value)}>\r\n            {filtered.map(r => {\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {metrics && (\r\n        <>\r\n          <div className=\"metrics-grid\">\r\n            <div className=\"metric-card\">\r\n              Diversidad: <strong>{metrics.diversity}</strong>\r\n              <i className=\"fa fa-info-circle info-icon\" title=\"Número de actividades diferentes.\" />\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              Consistencia: <strong>{metrics.consistency}%</strong>\r\n              <i className=\"fa fa-info-circle info-icon\" title=\"Porcentaje de franjas ocupadas.\" />\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              Equilibrio: <strong>{metrics.balanceIndex}%</strong>\r\n              <i className=\"fa fa-info-circle info-icon\" title=\"Equilibrio respecto a distribución uniforme.\" />\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              Sueño (h): <strong>{metrics.sleepHours}</strong>\r\n              <i className=\"fa fa-info-circle info-icon\" title=\"Horas dedicadas a descanso.\" />\r\n            </div>\r\n            <div className=\"metric-card\">\r\n              Fragmentación: <strong>{metrics.fragmentation}</strong> bloques\r\n              <i className=\"fa fa-info-circle info-icon\" title=\"Bloques separados de actividad.\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"charts-grid\">\r\n            <div className=\"chart-block\">\r\n              <h3>Índice de Fragmentación</h3>\r\n              <ResponsiveContainer width=\"100%\" height={200}>\r\n                <RadialBarChart\r\n                  startAngle={90}\r\n                  endAngle={-270}\r\n                  data={[{ name: 'Fragmentos', value: metrics.fragmentation }]}\r\n                  innerRadius=\"80%\"\r\n                  outerRadius=\"100%\"\r\n                >\r\n                  <RadialBar\r\n                    minAngle={15}\r\n                    background\r\n                    clockWise\r\n                    dataKey=\"value\"\r\n                    label={{ position: 'inside', formatter: () => `${metrics.fragmentation}` }}\r\n                    fill=\"#82ca9d\"\r\n                  />\r\n                  <Tooltip />\r\n                  <Legend verticalAlign=\"bottom\" iconSize={8} />\r\n                </RadialBarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block\">\r\n              <h3>Distribución % por Categoría</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={metrics.distribution}\r\n                    dataKey=\"value\"\r\n                    nameKey=\"name\"\r\n                    cx=\"50%\" cy=\"50%\"\r\n                    outerRadius={80}\r\n                    label\r\n                  >\r\n                    {metrics.distribution.map((_,i) =>\r\n                      <Cell key={i} fill={['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'][i%5]} />\r\n                    )}\r\n                  </Pie>\r\n                  <Tooltip /><Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block\">\r\n              <h3>Horas por Categoría</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart data={metrics.hours} margin={{ top:20, right:30, left:0, bottom:0 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                  <XAxis dataKey=\"name\"/>\r\n                  <YAxis/>\r\n                  <Tooltip/>\r\n                  <Bar dataKey=\"hours\" fill=\"#8884d8\"/>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block\">\r\n              <h3>Balance de Categorías</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <RadarChart data={metrics.distribution} cx=\"50%\" cy=\"50%\" outerRadius={80}>\r\n                  <PolarGrid/>\r\n                  <PolarAngleAxis dataKey=\"name\"/>\r\n                  <PolarRadiusAxis domain={[0,100]}/>\r\n                  <Radar dataKey=\"value\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6}/>\r\n                  <Tooltip/>\r\n                </RadarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block full-width\">\r\n              <h3>Top 3 Actividades</h3>\r\n              <ResponsiveContainer width=\"100%\" height={200}>\r\n                <BarChart data={metrics.top3} layout=\"vertical\" margin={{ top:10, right:30, left:50, bottom:5 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                  <XAxis type=\"number\"/>\r\n                  <YAxis dataKey=\"name\" type=\"category\"/>\r\n                  <Tooltip/>\r\n                  <Bar dataKey=\"hours\" fill=\"#ffc658\"/>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {multi && (\r\n        <div className=\"charts-grid\">\r\n          <div className=\"chart-block\">\r\n            <h3>Tendencia de Sueño</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={multi.sleepData} margin={{ top:10, right:30, left:0, bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"date\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Line type=\"monotone\" dataKey=\"hours\"/>\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          <div className=\"chart-block\">\r\n            <h3>Variabilidad por Categoría</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart data={multi.categoryVariance} margin={{ top:20, right:30, left:0, bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"category\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Bar dataKey=\"variance\" fill=\"#ff8042\"/>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}