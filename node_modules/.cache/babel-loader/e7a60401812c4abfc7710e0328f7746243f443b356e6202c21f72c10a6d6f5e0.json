{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import axios from'axios';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,LineChart,Line,PieChart,Pie,Cell}from'recharts';import queryString from'query-string';import'../styles/therapistRoutines.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CATEGORY_COLORS={Personal:'#8884d8',Estudio:'#82ca9d',Terapia:'#ffc658',Ocio:'#ff8042',Otro:'#8dd1e1'};export default function PatientRoutines(){const{patientId}=queryString.parse(window.location.search);const[gameResults,setGameResults]=useState([]);//  fetch últimos 7 resultados\nuseEffect(()=>{axios.get(`/api/game?patientId=${patientId}`).then(res=>setGameResults(res.data.slice(0,7).reverse())).catch(console.error);},[patientId]);/** \r\n   *  Preparar datos diarios: sumar minutos por categoría y total\r\n   */const dailyStats=useMemo(()=>{return gameResults.map(gr=>{const dayLabel=new Date(gr.createdAt).toLocaleDateString('es-ES',{day:'numeric',month:'short'});const byCat={};let total=0;gr.timeSlots.forEach(slot=>{slot.activities.forEach(act=>{byCat[act.title]=(byCat[act.title]||0)+act.duration;// Asignar categoría según act.title? Para simplificar:\nconst cat=act.category||'Otro';byCat[cat]=(byCat[cat]||0)+act.duration;total+=act.duration;});});return{day:dayLabel,...byCat,total};});},[gameResults]);// 1. Distribución por categoría / día (stacked bar)\nconst stackData=useMemo(()=>{return dailyStats.map(ds=>{const entry={day:ds.day};Object.keys(CATEGORY_COLORS).forEach(cat=>{entry[cat]=ds[cat]||0;});return entry;});},[dailyStats]);// 2. Tendencia (líneas)\n// reutiliza stackData\n// 3. Heatmap de horas punta\nconst heatmap=useMemo(()=>{// matriz 7 días × 24 horas\nconst mat=Array(7).fill(0).map(()=>Array(24).fill(0));gameResults.forEach((gr,di)=>{gr.timeSlots.forEach(slot=>{const h=parseInt(slot.slot.slice(0,2),10);const count=slot.activities.reduce((sum,a)=>sum+a.duration,0);mat[di][h]+=count;});});return mat;},[gameResults]);// 4. Diversidad de actividades\nconst diversity=useMemo(()=>{const setActs=new Set();gameResults.forEach(gr=>gr.timeSlots.forEach(slot=>slot.activities.forEach(a=>setActs.add(a.activityId))));return setActs.size;},[gameResults]);// 5. Ratio productivo vs recreativo\nconst ratio=useMemo(()=>{const prodCats=['Estudio','Terapia'];const recCats=['Ocio','Personal','Otro'];let prod=0,rec=0;gameResults.forEach(gr=>gr.timeSlots.forEach(slot=>slot.activities.forEach(a=>{const cat=a.category||'Otro';if(prodCats.includes(cat))prod+=a.duration;else rec+=a.duration;})));const total=prod+rec;return total>0?[{name:'Productivo',value:prod},{name:'Recreativo',value:rec}]:[];},[gameResults]);// 6. Consistencia diaria (desviación estándar)\nconst consistency=useMemo(()=>{const totals=dailyStats.map(ds=>ds.total);const mean=totals.reduce((a,b)=>a+b,0)/totals.length||0;const variance=totals.reduce((a,b)=>a+(b-mean)**2,0)/(totals.length||1);return Math.sqrt(variance).toFixed(1);},[dailyStats]);// 7. Tiempo medio por actividad\nconst meanByActivity=useMemo(()=>{const sums={},counts={};gameResults.forEach(gr=>gr.timeSlots.forEach(slot=>slot.activities.forEach(a=>{sums[a.title]=(sums[a.title]||0)+a.duration;counts[a.title]=(counts[a.title]||0)+1;})));return Object.keys(sums).map(title=>({title,avg:Math.round(sums[title]/counts[title])})).sort((a,b)=>b.avg-a.avg);},[gameResults]);// 8. Completitud planificación\nconst completeness=useMemo(()=>{const maxSlots=gameResults.length*24;let used=0;gameResults.forEach(gr=>gr.timeSlots.forEach(slot=>{if(slot.activities.length>0)used++;}));return(used/maxSlots*100).toFixed(0);},[gameResults]);// 9. Carga semanal (horas totales / semana)\n// Asumimos 7 días; gráfica de barras totales\nconst weeklyLoad=useMemo(()=>{return dailyStats.map(ds=>({day:ds.day,hours:+(ds.total/60).toFixed(1)}));},[dailyStats]);// Colores para pie\nconst PIE_COLORS=['#8884d8','#82ca9d'];return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Equilibrio Ocupacional\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Actividades distintas\"}),/*#__PURE__*/_jsx(\"p\",{children:diversity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Std. diaria (min)\"}),/*#__PURE__*/_jsx(\"p\",{children:consistency})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kpi-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Completez planning\"}),/*#__PURE__*/_jsxs(\"p\",{children:[completeness,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"1. Distribuci\\xF3n diaria por categor\\xEDa (min)\"}),/*#__PURE__*/_jsxs(BarChart,{width:800,height:300,data:stackData,margin:{top:20,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"day\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),Object.keys(CATEGORY_COLORS).map(cat=>/*#__PURE__*/_jsx(Bar,{dataKey:cat,stackId:\"a\",fill:CATEGORY_COLORS[cat]},cat))]})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"2. Tendencia semanal por categor\\xEDa\"}),/*#__PURE__*/_jsxs(LineChart,{width:800,height:300,data:stackData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"day\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),Object.keys(CATEGORY_COLORS).map(cat=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:cat,stroke:CATEGORY_COLORS[cat]},cat))]})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"3. Horas punta (min por hora)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-labels\",children:[/*#__PURE__*/_jsx(\"div\",{}),Array.from({length:24},(_,h)=>/*#__PURE__*/_jsx(\"div\",{children:String(h).padStart(2,'0')},h))]}),heatmap.map((row,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"heatmap-day\",children:i===0?'Hace 6d':i===6?'Hoy':`-${6-i}d`}),row.map((val,h)=>{const alpha=Math.min(1,val/60);return/*#__PURE__*/_jsx(\"div\",{className:\"heatmap-cell\",style:{backgroundColor:`rgba(40, 116, 166, ${alpha})`}},h);})]},i))]})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"5. Productivo vs Recreativo\"}),/*#__PURE__*/_jsxs(PieChart,{width:400,height:300,children:[/*#__PURE__*/_jsx(Pie,{data:ratio,dataKey:\"value\",nameKey:\"name\",innerRadius:60,outerRadius:100,fill:\"#8884d8\",label:true,children:ratio.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:PIE_COLORS[i]},i))}),/*#__PURE__*/_jsx(Tooltip,{})]})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"9. Carga semanal (h/d\\xEDa)\"}),/*#__PURE__*/_jsxs(BarChart,{width:600,height:250,data:weeklyLoad,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"day\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#82ca9d\"})]})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"7. Tiempo medio por actividad (min)\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"mean-activity-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Actividad\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Media (min)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:meanByActivity.map(a=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:a.title}),/*#__PURE__*/_jsx(\"td\",{children:a.avg})]},a.title))})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChart","Line","PieChart","Pie","Cell","queryString","jsx","_jsx","jsxs","_jsxs","CATEGORY_COLORS","Personal","Estudio","Terapia","Ocio","Otro","PatientRoutines","patientId","parse","window","location","search","gameResults","setGameResults","get","then","res","data","slice","reverse","catch","console","error","dailyStats","map","gr","dayLabel","Date","createdAt","toLocaleDateString","day","month","byCat","total","timeSlots","forEach","slot","activities","act","title","duration","cat","category","stackData","ds","entry","Object","keys","heatmap","mat","Array","fill","di","h","parseInt","count","reduce","sum","a","diversity","setActs","Set","add","activityId","size","ratio","prodCats","recCats","prod","rec","includes","name","value","consistency","totals","mean","b","length","variance","Math","sqrt","toFixed","meanByActivity","sums","counts","avg","round","sort","completeness","maxSlots","used","weeklyLoad","hours","PIE_COLORS","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","type","stroke","from","_","String","padStart","row","i","val","alpha","min","style","backgroundColor","nameKey","innerRadius","outerRadius","label"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n         LineChart, Line, PieChart, Pie, Cell } from 'recharts';\r\nimport queryString from 'query-string';\r\nimport '../styles/therapistRoutines.css';\r\n\r\nconst CATEGORY_COLORS = {\r\n  Personal: '#8884d8',\r\n  Estudio:  '#82ca9d',\r\n  Terapia:  '#ffc658',\r\n  Ocio:     '#ff8042',\r\n  Otro:     '#8dd1e1'\r\n};\r\n\r\nexport default function PatientRoutines() {\r\n  const { patientId } = queryString.parse(window.location.search);\r\n  const [gameResults, setGameResults] = useState([]);\r\n\r\n  //  fetch últimos 7 resultados\r\n  useEffect(() => {\r\n    axios.get(`/api/game?patientId=${patientId}`)\r\n      .then(res => setGameResults(res.data.slice(0,7).reverse()))\r\n      .catch(console.error);\r\n  }, [patientId]);\r\n\r\n  /** \r\n   *  Preparar datos diarios: sumar minutos por categoría y total\r\n   */\r\n  const dailyStats = useMemo(() => {\r\n    return gameResults.map(gr => {\r\n      const dayLabel = new Date(gr.createdAt).toLocaleDateString('es-ES', { day:'numeric', month:'short' });\r\n      const byCat = {};\r\n      let total = 0;\r\n      gr.timeSlots.forEach(slot => {\r\n        slot.activities.forEach(act => {\r\n          byCat[act.title] = (byCat[act.title] || 0) + act.duration;\r\n          // Asignar categoría según act.title? Para simplificar:\r\n          const cat = act.category || 'Otro';\r\n          byCat[cat] = (byCat[cat] || 0) + act.duration;\r\n          total += act.duration;\r\n        });\r\n      });\r\n      return { day: dayLabel, ...byCat, total };\r\n    });\r\n  }, [gameResults]);\r\n\r\n  // 1. Distribución por categoría / día (stacked bar)\r\n  const stackData = useMemo(() => {\r\n    return dailyStats.map(ds => {\r\n      const entry = { day: ds.day };\r\n      Object.keys(CATEGORY_COLORS).forEach(cat => {\r\n        entry[cat] = ds[cat] || 0;\r\n      });\r\n      return entry;\r\n    });\r\n  }, [dailyStats]);\r\n\r\n  // 2. Tendencia (líneas)\r\n  // reutiliza stackData\r\n\r\n  // 3. Heatmap de horas punta\r\n  const heatmap = useMemo(() => {\r\n    // matriz 7 días × 24 horas\r\n    const mat = Array(7).fill(0).map(() => Array(24).fill(0));\r\n    gameResults.forEach((gr, di) => {\r\n      gr.timeSlots.forEach(slot => {\r\n        const h = parseInt(slot.slot.slice(0,2),10);\r\n        const count = slot.activities.reduce((sum, a) => sum + a.duration, 0);\r\n        mat[di][h] += count;\r\n      });\r\n    });\r\n    return mat;\r\n  }, [gameResults]);\r\n\r\n  // 4. Diversidad de actividades\r\n  const diversity = useMemo(() => {\r\n    const setActs = new Set();\r\n    gameResults.forEach(gr =>\r\n      gr.timeSlots.forEach(slot =>\r\n        slot.activities.forEach(a => setActs.add(a.activityId))\r\n      )\r\n    );\r\n    return setActs.size;\r\n  }, [gameResults]);\r\n\r\n  // 5. Ratio productivo vs recreativo\r\n  const ratio = useMemo(() => {\r\n    const prodCats = ['Estudio','Terapia'];\r\n    const recCats  = ['Ocio','Personal','Otro'];\r\n    let prod=0, rec=0;\r\n    gameResults.forEach(gr =>\r\n      gr.timeSlots.forEach(slot =>\r\n        slot.activities.forEach(a => {\r\n          const cat = a.category || 'Otro';\r\n          if (prodCats.includes(cat)) prod += a.duration;\r\n          else rec += a.duration;\r\n        })\r\n      )\r\n    );\r\n    const total = prod + rec;\r\n    return total>0 ? [{ name:'Productivo', value:prod },{ name:'Recreativo', value:rec }] : [];\r\n  }, [gameResults]);\r\n\r\n  // 6. Consistencia diaria (desviación estándar)\r\n  const consistency = useMemo(() => {\r\n    const totals = dailyStats.map(ds => ds.total);\r\n    const mean = totals.reduce((a,b)=>a+b,0)/totals.length || 0;\r\n    const variance = totals.reduce((a,b)=>a+(b-mean)**2,0) / (totals.length||1);\r\n    return Math.sqrt(variance).toFixed(1);\r\n  }, [dailyStats]);\r\n\r\n  // 7. Tiempo medio por actividad\r\n  const meanByActivity = useMemo(() => {\r\n    const sums = {}, counts = {};\r\n    gameResults.forEach(gr =>\r\n      gr.timeSlots.forEach(slot =>\r\n        slot.activities.forEach(a => {\r\n          sums[a.title] = (sums[a.title]||0) + a.duration;\r\n          counts[a.title] = (counts[a.title]||0) + 1;\r\n        })\r\n      )\r\n    );\r\n    return Object.keys(sums).map(title => ({\r\n      title,\r\n      avg: Math.round(sums[title]/counts[title])\r\n    })).sort((a,b)=>b.avg-a.avg);\r\n  }, [gameResults]);\r\n\r\n  // 8. Completitud planificación\r\n  const completeness = useMemo(() => {\r\n    const maxSlots = gameResults.length * 24;\r\n    let used = 0;\r\n    gameResults.forEach(gr =>\r\n      gr.timeSlots.forEach(slot => {\r\n        if (slot.activities.length>0) used++;\r\n      })\r\n    );\r\n    return ((used / maxSlots)*100).toFixed(0);\r\n  }, [gameResults]);\r\n\r\n  // 9. Carga semanal (horas totales / semana)\r\n  // Asumimos 7 días; gráfica de barras totales\r\n  const weeklyLoad = useMemo(() => {\r\n    return dailyStats.map(ds => ({ day: ds.day, hours: +(ds.total/60).toFixed(1) }));\r\n  }, [dailyStats]);\r\n\r\n  // Colores para pie\r\n  const PIE_COLORS = ['#8884d8','#82ca9d'];\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <h1>Equilibrio Ocupacional</h1>\r\n\r\n      {/* KPIs */}\r\n      <div className=\"kpi-row\">\r\n        <div className=\"kpi-card\">\r\n          <h3>Actividades distintas</h3>\r\n          <p>{diversity}</p>\r\n        </div>\r\n        <div className=\"kpi-card\">\r\n          <h3>Std. diaria (min)</h3>\r\n          <p>{consistency}</p>\r\n        </div>\r\n        <div className=\"kpi-card\">\r\n          <h3>Completez planning</h3>\r\n          <p>{completeness}%</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 1. Distribución por categoría */}\r\n      <section>\r\n        <h2>1. Distribución diaria por categoría (min)</h2>\r\n        <BarChart\r\n          width={800} height={300} data={stackData}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\"/>\r\n          <XAxis dataKey=\"day\"/>\r\n          <YAxis/>\r\n          <Tooltip/>\r\n          <Legend/>\r\n          {Object.keys(CATEGORY_COLORS).map(cat => (\r\n            <Bar key={cat} dataKey={cat} stackId=\"a\" fill={CATEGORY_COLORS[cat]} />\r\n          ))}\r\n        </BarChart>\r\n      </section>\r\n\r\n      {/* 2. Tendencia */}\r\n      <section>\r\n        <h2>2. Tendencia semanal por categoría</h2>\r\n        <LineChart width={800} height={300} data={stackData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\"/>\r\n          <XAxis dataKey=\"day\"/>\r\n          <YAxis/>\r\n          <Tooltip/>\r\n          <Legend/>\r\n          {Object.keys(CATEGORY_COLORS).map(cat => (\r\n            <Line key={cat} type=\"monotone\" dataKey={cat} stroke={CATEGORY_COLORS[cat]} />\r\n          ))}\r\n        </LineChart>\r\n      </section>\r\n\r\n      {/* 3. Heatmap horas punta */}\r\n      <section>\r\n        <h2>3. Horas punta (min por hora)</h2>\r\n        <div className=\"heatmap\">\r\n          <div className=\"heatmap-labels\">\r\n            <div></div>\r\n            {Array.from({length:24},(_,h)=><div key={h}>{String(h).padStart(2,'0')}</div>)}\r\n          </div>\r\n          {heatmap.map((row, i) => (\r\n            <div className=\"heatmap-row\" key={i}>\r\n              <div className=\"heatmap-day\">{i===0?'Hace 6d':i===6?'Hoy':`-${6-i}d`}</div>\r\n              {row.map((val,h) => {\r\n                const alpha = Math.min(1, val/60); \r\n                return (\r\n                  <div key={h}\r\n                    className=\"heatmap-cell\"\r\n                    style={{ backgroundColor: `rgba(40, 116, 166, ${alpha})` }}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* 5. Ratio productivo vs recreativo */}\r\n      <section>\r\n        <h2>5. Productivo vs Recreativo</h2>\r\n        <PieChart width={400} height={300}>\r\n          <Pie\r\n            data={ratio}\r\n            dataKey=\"value\"\r\n            nameKey=\"name\"\r\n            innerRadius={60}\r\n            outerRadius={100}\r\n            fill=\"#8884d8\"\r\n            label\r\n          >\r\n            {ratio.map((_,i)=><Cell key={i} fill={PIE_COLORS[i]} />)}\r\n          </Pie>\r\n          <Tooltip/>\r\n        </PieChart>\r\n      </section>\r\n\r\n      {/* 9. Carga semanal */}\r\n      <section>\r\n        <h2>9. Carga semanal (h/día)</h2>\r\n        <BarChart width={600} height={250} data={weeklyLoad}>\r\n          <CartesianGrid strokeDasharray=\"3 3\"/>\r\n          <XAxis dataKey=\"day\"/>\r\n          <YAxis/>\r\n          <Tooltip/>\r\n          <Bar dataKey=\"hours\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n      </section>\r\n\r\n      {/* 7. Tiempo medio por actividad */}\r\n      <section>\r\n        <h2>7. Tiempo medio por actividad (min)</h2>\r\n        <table className=\"mean-activity-table\">\r\n          <thead>\r\n            <tr><th>Actividad</th><th>Media (min)</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {meanByActivity.map(a=>(\r\n              <tr key={a.title}>\r\n                <td>{a.title}</td>\r\n                <td>{a.avg}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}