{"ast":null,"code":"// src/pages/PatientTemplatesPage.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'../styles/routineTemplates.css';import{FaCheckCircle,FaRegCircle}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientTemplatesPage(){var _payload,_payload$user;const navigate=useNavigate();const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Leer token y user id del JWT\nconst token=localStorage.getItem('token');let payload=null;try{payload=JSON.parse(atob(token.split('.')[1]));// decodifica JWT\n}catch{}const patientId=(_payload=payload)===null||_payload===void 0?void 0:(_payload$user=_payload.user)===null||_payload$user===void 0?void 0:_payload$user.id;const headers={'Content-Type':'application/json','x-auth-token':token};useEffect(()=>{if(!token||!patientId){navigate('/login');return;}(async()=>{try{const res=await fetch(`/api/routines/instances/${patientId}`,{headers});if(res.status===401){navigate('/login');return;}if(!res.ok){throw new Error(`Error ${res.status}`);}const data=await res.json();// data: [{ _id, template: { name, description, activities }, completed: [bool...] }, …]\nsetInstances(data);}catch(err){console.error(err);setError(err.message);}finally{setLoading(false);}})();},[navigate,patientId,token]);// Marca una actividad como completada\nconst toggleActivity=async(instanceId,idx)=>{try{const res=await fetch(`/api/routines/instances/${instanceId}/activities/${idx}`,{method:'POST',headers});if(!res.ok)throw new Error(`HTTP ${res.status}`);// Actualizar estado localmente\nsetInstances(insts=>insts.map(inst=>{if(inst._id!==instanceId)return inst;const comp=[...inst.completed];comp[idx]=!comp[idx];return{...inst,completed:comp};}));}catch(err){console.error('Error marcando actividad:',err);alert('No se pudo actualizar el estado de la actividad');}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando rutinas\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsxs(\"div\",{className:\"patient-assigns\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Rutinas Asignadas\"}),instances.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83E\\uDD14 A\\xFAn no tienes rutinas asignadas.\"}):instances.map(inst=>{const{_id,template,completed=[]}=inst;// Si todas las actividades completadas, estilo “completado”\nconst allDone=template.activities.every((_,i)=>completed[i]);const cardClass=allDone?'assign-card status-completed':'assign-card';return/*#__PURE__*/_jsxs(\"div\",{className:cardClass,children:[/*#__PURE__*/_jsx(\"h3\",{children:template.name}),/*#__PURE__*/_jsx(\"small\",{children:template.description}),/*#__PURE__*/_jsx(\"ul\",{className:\"assign-list\",children:template.activities.map((act,idx)=>/*#__PURE__*/_jsxs(\"li\",{className:\"assign-item\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"activity-toggle\",onClick:()=>toggleActivity(_id,idx),title:completed[idx]?'Marcar como pendiente':'Marcar como completada',children:completed[idx]?/*#__PURE__*/_jsx(FaCheckCircle,{}):/*#__PURE__*/_jsx(FaRegCircle,{})}),/*#__PURE__*/_jsxs(\"span\",{className:completed[idx]?'activity-completed':'',children:[act.name,\" (\",act.minutes,\" min)\"]})]},idx))}),/*#__PURE__*/_jsx(\"div\",{className:\"assign-actions\",children:allDone?/*#__PURE__*/_jsx(\"span\",{children:\"\\u2705 Rutina completada\"}):/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDD52 Pendiente\"})})]},_id);})]});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FaCheckCircle","FaRegCircle","jsx","_jsx","jsxs","_jsxs","PatientTemplatesPage","_payload","_payload$user","navigate","instances","setInstances","loading","setLoading","error","setError","token","localStorage","getItem","payload","JSON","parse","atob","split","patientId","user","id","headers","res","fetch","status","ok","Error","data","json","err","console","message","toggleActivity","instanceId","idx","method","insts","map","inst","_id","comp","completed","alert","className","children","length","template","allDone","activities","every","_","i","cardClass","name","description","act","onClick","title","minutes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientTemplatesPage.js"],"sourcesContent":["// src/pages/PatientTemplatesPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate }                from 'react-router-dom';\r\nimport '../styles/routineTemplates.css';\r\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\r\n\r\nexport default function PatientTemplatesPage() {\r\n  const navigate = useNavigate();\r\n  const [instances, setInstances] = useState([]);\r\n  const [loading, setLoading]     = useState(true);\r\n  const [error, setError]         = useState(null);\r\n\r\n  // Leer token y user id del JWT\r\n  const token = localStorage.getItem('token');\r\n  let payload = null;\r\n  try {\r\n    payload = JSON.parse(atob(token.split('.')[1])); // decodifica JWT\r\n  } catch {}\r\n  const patientId = payload?.user?.id;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': token\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!token || !patientId) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `/api/routines/instances/${patientId}`,\r\n          { headers }\r\n        );\r\n        if (res.status === 401) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        if (!res.ok) {\r\n          throw new Error(`Error ${res.status}`);\r\n        }\r\n        const data = await res.json();\r\n        // data: [{ _id, template: { name, description, activities }, completed: [bool...] }, …]\r\n        setInstances(data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [navigate, patientId, token]);\r\n\r\n  // Marca una actividad como completada\r\n  const toggleActivity = async (instanceId, idx) => {\r\n    try {\r\n      const res = await fetch(\r\n        `/api/routines/instances/${instanceId}/activities/${idx}`,\r\n        {\r\n          method: 'POST',\r\n          headers\r\n        }\r\n      );\r\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n      // Actualizar estado localmente\r\n      setInstances(insts =>\r\n        insts.map(inst => {\r\n          if (inst._id !== instanceId) return inst;\r\n          const comp = [...inst.completed];\r\n          comp[idx] = !comp[idx];\r\n          return { ...inst, completed: comp };\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.error('Error marcando actividad:', err);\r\n      alert('No se pudo actualizar el estado de la actividad');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargando rutinas…</div>;\r\n  if (error)   return <div className=\"tpl-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"patient-assigns\">\r\n      <h1>Mis Rutinas Asignadas</h1>\r\n\r\n      {instances.length === 0 ? (\r\n        <p>🤔 Aún no tienes rutinas asignadas.</p>\r\n      ) : (\r\n        instances.map(inst => {\r\n          const { _id, template, completed = [] } = inst;\r\n          // Si todas las actividades completadas, estilo “completado”\r\n          const allDone = template.activities.every((_, i) => completed[i]);\r\n          const cardClass = allDone\r\n            ? 'assign-card status-completed'\r\n            : 'assign-card';\r\n\r\n          return (\r\n            <div key={_id} className={cardClass}>\r\n              <h3>{template.name}</h3>\r\n              <small>{template.description}</small>\r\n\r\n              <ul className=\"assign-list\">\r\n                {template.activities.map((act, idx) => (\r\n                  <li key={idx} className=\"assign-item\">\r\n                    <button\r\n                      className=\"activity-toggle\"\r\n                      onClick={() => toggleActivity(_id, idx)}\r\n                      title={\r\n                        completed[idx]\r\n                          ? 'Marcar como pendiente'\r\n                          : 'Marcar como completada'\r\n                      }\r\n                    >\r\n                      {completed[idx]\r\n                        ? <FaCheckCircle />\r\n                        : <FaRegCircle />}\r\n                    </button>\r\n                    <span\r\n                      className={\r\n                        completed[idx]\r\n                          ? 'activity-completed'\r\n                          : ''\r\n                      }\r\n                    >\r\n                      {act.name} ({act.minutes} min)\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"assign-actions\">\r\n                {allDone\r\n                  ? <span>✅ Rutina completada</span>\r\n                  : <span>🕒 Pendiente</span>}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}