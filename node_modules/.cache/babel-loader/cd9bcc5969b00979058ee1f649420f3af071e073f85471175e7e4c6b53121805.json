{"ast":null,"code":"// src/components/TherapistTemplates.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import'../styles/routineTemplates.css';// Diseño base de tarjetas :contentReference[oaicite:2]{index=2}:contentReference[oaicite:3]{index=3}\nimport'../styles/detailsTemplate.css';// Nuevos estilos para modal y detalle\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TherapistTemplates(){const[patients,setPatients]=useState([]);const[instancesByPatient,setInstancesByPatient]=useState({});const[loading,setLoading]=useState(true);const[selectedPatient,setSelectedPatient]=useState(null);const token=localStorage.getItem('token');// Calcula progreso global: % completado entre todas las actividades\nconst computeGlobalProgress=instances=>{const totals=instances.reduce((acc,inst)=>acc+inst.template.activities.length,0);const completed=instances.reduce((acc,inst)=>acc+inst.completedActivities.length,0);return totals?Math.round(completed/totals*100):0;};useEffect(()=>{const fetchAll=async()=>{try{// 1) Traer lista de pacientes\nconst{data:pats}=await axios.get('/api/therapist/patients',{headers:{'x-auth-token':token}});setPatients(pats);// 2) Para cada paciente, traer instancias asignadas (templates)\nconst map={};await Promise.all(pats.map(async p=>{const{data:insts}=await axios.get(`/api/routines/instances/${p._id}`,{headers:{'x-auth-token':token}});map[p._id]=insts;}));setInstancesByPatient(map);}catch(err){console.error('Error cargando pacientes o instancias',err);}finally{setLoading(false);}};fetchAll();},[token]);if(loading)return/*#__PURE__*/_jsx(\"p\",{className:\"tpl-container\",children:\"Cargando datos\\u2026\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tpl-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Estado de Plantillas por Paciente\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid\",children:patients.filter(p=>{var _instancesByPatient$p;return((_instancesByPatient$p=instancesByPatient[p._id])===null||_instancesByPatient$p===void 0?void 0:_instancesByPatient$p.length)>0;}).map(p=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card patient-card\",onClick:()=>setSelectedPatient(p),children:[/*#__PURE__*/_jsxs(\"h2\",{children:[p.nombre,\" \",p.apellidos]}),/*#__PURE__*/_jsxs(\"p\",{className:\"tpl-desc\",children:[instancesByPatient[p._id].length,\" plantilla(s) asignada(s)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"tpl-meta\",children:[\"Progreso: \",computeGlobalProgress(instancesByPatient[p._id]),\"% completado\"]})]},p._id))}),selectedPatient&&/*#__PURE__*/_jsx(PatientDetailModal,{patient:selectedPatient,instances:instancesByPatient[selectedPatient._id],onClose:()=>setSelectedPatient(null)})]});}// Componente modal para detalle de un paciente\nfunction PatientDetailModal(_ref){let{patient,instances,onClose}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-modal-content\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"patient-detail-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[patient.nombre,\" \",patient.apellidos]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:onClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",patient.email]}),instances.map(inst=>{const completedSet=new Set(inst.completedActivities.map(Number));return/*#__PURE__*/_jsxs(\"section\",{className:\"template-group\",children:[/*#__PURE__*/_jsx(\"h3\",{children:inst.template.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"template-meta\",children:[\"Asignada: \",new Date(inst.createdAt).toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),\"\\xDAltima actualizaci\\xF3n: \",new Date(inst.updatedAt).toLocaleString()]}),inst.template.activities.map((act,idx)=>{var _inst$activityNotes;return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-tuple\",children:[/*#__PURE__*/_jsx(\"div\",{className:`status-indicator ${completedSet.has(idx)?'completed':'pending'}`}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-details\",children:[/*#__PURE__*/_jsx(\"h4\",{children:act.title}),act.description&&/*#__PURE__*/_jsx(\"p\",{className:\"activity-desc\",children:act.description}),'activityNotes'in inst&&/*#__PURE__*/_jsxs(\"p\",{className:\"activity-notes\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Notas:\"}),\" \",((_inst$activityNotes=inst.activityNotes)===null||_inst$activityNotes===void 0?void 0:_inst$activityNotes[idx])||'—']}),/*#__PURE__*/_jsxs(\"p\",{className:\"activity-meta\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Estado:\"}),\" \",completedSet.has(idx)?'Completada':'Pendiente']})]})]},idx);})]},inst._id);})]})});}","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","TherapistTemplates","patients","setPatients","instancesByPatient","setInstancesByPatient","loading","setLoading","selectedPatient","setSelectedPatient","token","localStorage","getItem","computeGlobalProgress","instances","totals","reduce","acc","inst","template","activities","length","completed","completedActivities","Math","round","fetchAll","data","pats","get","headers","map","Promise","all","p","insts","_id","err","console","error","className","children","filter","_instancesByPatient$p","onClick","nombre","apellidos","PatientDetailModal","patient","onClose","_ref","email","completedSet","Set","Number","name","Date","createdAt","toLocaleString","updatedAt","act","idx","_inst$activityNotes","has","title","description","activityNotes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TherapistTemplatesDetail.js"],"sourcesContent":["// src/components/TherapistTemplates.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/routineTemplates.css';               // Diseño base de tarjetas :contentReference[oaicite:2]{index=2}:contentReference[oaicite:3]{index=3}\r\nimport '../styles/detailsTemplate.css';      // Nuevos estilos para modal y detalle\r\n\r\nexport default function TherapistTemplates() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [instancesByPatient, setInstancesByPatient] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Calcula progreso global: % completado entre todas las actividades\r\n  const computeGlobalProgress = instances => {\r\n    const totals = instances.reduce((acc, inst) => acc + inst.template.activities.length, 0);\r\n    const completed = instances.reduce((acc, inst) => acc + inst.completedActivities.length, 0);\r\n    return totals ? Math.round((completed / totals) * 100) : 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // 1) Traer lista de pacientes\r\n        const { data: pats } = await axios.get('/api/therapist/patients', {\r\n          headers: { 'x-auth-token': token }\r\n        });\r\n        setPatients(pats);\r\n\r\n        // 2) Para cada paciente, traer instancias asignadas (templates)\r\n        const map = {};\r\n        await Promise.all(pats.map(async p => {\r\n          const { data: insts } = await axios.get(`/api/routines/instances/${p._id}`, {\r\n            headers: { 'x-auth-token': token }\r\n          });\r\n          map[p._id] = insts;\r\n        }));\r\n        setInstancesByPatient(map);\r\n      } catch (err) {\r\n        console.error('Error cargando pacientes o instancias', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, [token]);\r\n\r\n  if (loading) return <p className=\"tpl-container\">Cargando datos…</p>;\r\n\r\n  return (\r\n    <div className=\"tpl-container\">\r\n      <div className=\"tpl-header\">\r\n        <h1>Estado de Plantillas por Paciente</h1>\r\n      </div>\r\n      <div className=\"tpl-grid\">\r\n        {patients\r\n          .filter(p => instancesByPatient[p._id]?.length > 0)\r\n          .map(p => (\r\n            <div\r\n              key={p._id}\r\n              className=\"tpl-card patient-card\"\r\n              onClick={() => setSelectedPatient(p)}\r\n            >\r\n              <h2>{p.nombre} {p.apellidos}</h2>\r\n              <p className=\"tpl-desc\">\r\n                {instancesByPatient[p._id].length} plantilla(s) asignada(s)\r\n              </p>\r\n              <p className=\"tpl-meta\">\r\n                Progreso: {computeGlobalProgress(instancesByPatient[p._id])}% completado\r\n              </p>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      {selectedPatient && (\r\n        <PatientDetailModal\r\n          patient={selectedPatient}\r\n          instances={instancesByPatient[selectedPatient._id]}\r\n          onClose={() => setSelectedPatient(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente modal para detalle de un paciente\r\nfunction PatientDetailModal({ patient, instances, onClose }) {\r\n  return (\r\n    <div className=\"tpl-modal-overlay\">\r\n      <div className=\"tpl-modal-content\">\r\n        <header className=\"patient-detail-header\">\r\n          <h2>{patient.nombre} {patient.apellidos}</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>&times;</button>\r\n        </header>\r\n        <p><strong>Email:</strong> {patient.email}</p>\r\n\r\n        {instances.map(inst => {\r\n          const completedSet = new Set(inst.completedActivities.map(Number));\r\n          return (\r\n            <section key={inst._id} className=\"template-group\">\r\n              <h3>{inst.template.name}</h3>\r\n              <p className=\"template-meta\">\r\n                Asignada: {new Date(inst.createdAt).toLocaleString()}<br/>\r\n                Última actualización: {new Date(inst.updatedAt).toLocaleString()}\r\n              </p>\r\n\r\n              {inst.template.activities.map((act, idx) => (\r\n                <div key={idx} className=\"activity-tuple\">\r\n                  <div\r\n                    className={`status-indicator ${completedSet.has(idx) ? 'completed' : 'pending'}`}\r\n                  />\r\n                  <div className=\"activity-details\">\r\n                    <h4>{act.title}</h4>\r\n                    {act.description && <p className=\"activity-desc\">{act.description}</p>}\r\n                    {'activityNotes' in inst && (\r\n                      <p className=\"activity-notes\">\r\n                        <strong>Notas:</strong> {inst.activityNotes?.[idx] || '—'}\r\n                      </p>\r\n                    )}\r\n                    <p className=\"activity-meta\">\r\n                      <strong>Estado:</strong> {completedSet.has(idx) ? 'Completada' : 'Pendiente'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </section>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}