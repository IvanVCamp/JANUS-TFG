{"ast":null,"code":"// src/pages/RoutineTemplatesPage.js\nimport React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import{FaTrash,FaEdit}from'react-icons/fa';import axios from'axios';import'../styles/routineTemplates.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function RoutineTemplatesPage(){const[templates,setTemplates]=useState([]);const[patients,setPatients]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[assignments,setAssignments]=useState({});const[modalData,setModalData]=useState({visible:false,loading:false,error:null,patient:null,instance:null});const navigate=useNavigate();const token=localStorage.getItem('token');const headers={'Content-Type':'application/json','x-auth-token':token};// Fetch inicial de plantillas, pacientes y assignments\nuseEffect(()=>{if(!token){navigate('/login');setLoading(false);return;}Promise.all([fetch('/api/routines/templates',{headers}),fetch('/api/therapist/patients',{headers})]).then(async _ref=>{let[resTpl,resPat]=_ref;if(resTpl.status===401||resPat.status===401){alert('Sesión expirada. Vuelve a iniciar sesión.');navigate('/login');return;}const dataTpl=await resTpl.json();const dataPat=await resPat.json();if(!Array.isArray(dataTpl)||!Array.isArray(dataPat)){throw new Error('Respuesta inesperada del servidor');}setTemplates(dataTpl);setPatients(dataPat);// Para cada plantilla, cargamos las instancias ya asignadas\nconst resp=await Promise.all(dataTpl.map(async tpl=>{const{data:insts}=await axios.get(`/api/routines/instances/template/${tpl._id}`,{headers});return[tpl._id,insts];}));setAssignments(Object.fromEntries(resp));}).catch(err=>{console.error(err);setError(err.message);}).finally(()=>setLoading(false));},[navigate,token]);// Drag & drop handlers\nconst onDragStart=(e,item,type)=>{e.dataTransfer.setData('application/json',JSON.stringify({type,item}));e.dataTransfer.effectAllowed='copyMove';};const allowDrop=e=>e.preventDefault();const handleDrop=useCallback((e,zone)=>{e.preventDefault();const{type,item}=JSON.parse(e.dataTransfer.getData('application/json'));// eliminar plantilla\nif(zone==='trash'&&type==='template'){setTemplates(ts=>ts.filter(t=>t._id!==item._id));fetch(`/api/routines/templates/${item._id}`,{method:'DELETE',headers}).catch(console.error);}// duplicar plantilla\nelse if(zone==='duplicate'&&type==='template'){const payload={name:item.name+' (copia)',description:item.description,category:item.category,tags:item.tags,duration:item.duration,reminder:item.reminder,activities:item.activities.map(a=>({name:a.name,desc:a.desc,challenge:a.challenge,minutes:a.minutes}))};fetch('/api/routines/templates',{method:'POST',headers,body:JSON.stringify(payload)}).then(res=>{if(!res.ok)return res.text().then(txt=>{throw new Error(txt);});return res.json();}).then(newTpl=>setTemplates(ts=>[newTpl,...ts])).catch(err=>{console.error('Error duplicando plantilla:',err);alert('No se pudo duplicar: '+err.message);});}// asignar a paciente\nelse if(zone.startsWith('assign-')&&type==='template'){const patientId=zone.split('-')[1];fetch('/api/routines/instances',{method:'POST',headers,body:JSON.stringify({templateId:item._id,patientId})}).then(res=>{if(!res.ok)throw new Error(`HTTP ${res.status}`);alert(`Plantilla «${item.name}» asignada a paciente ${patientId}`);}).catch(err=>{console.error('Error asignando plantilla:',err);alert('No se pudo asignar: '+err.message);});}},[token]);// Abre modal con detalle de un paciente para una plantilla dada\nconst openPatientDetail=async(patient,templateId)=>{setModalData({visible:true,loading:true,error:null,patient,instance:null});try{const{data}=await axios.get(`/api/routines/instances/${patient._id}`,{headers});const list=Array.isArray(data)?data:data.instances||[];const inst=list.find(i=>i.template._id===templateId);if(!inst)throw new Error('No existe asignación para este paciente.');setModalData(mod=>({...mod,instance:inst,loading:false}));}catch(err){console.error(err);setModalData(mod=>{var _err$response,_err$response$data;return{...mod,loading:false,error:((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||err.message};});}};const closeModal=()=>{setModalData({visible:false,loading:false,error:null,patient:null,instance:null});};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"tpl-container\",children:\"Cargando plantillas\\u2026\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"routine-templates-page therapist-templates-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Mis Plantillas\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-new\",onClick:()=>navigate('/therapist/templates/new'),children:\"\\uD83D\\uDCC4 Nueva plantilla\"})]}),templates.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:\"\\uD83E\\uDD14 A\\xFAn no se han creado plantillas\"}):templates.map(tpl=>/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-card\",draggable:true,onDragStart:e=>onDragStart(e,tpl,'template'),children:[/*#__PURE__*/_jsx(FaEdit,{className:\"icon-edit\",onClick:()=>navigate(`/therapist/templates/${tpl._id}/edit`)}),/*#__PURE__*/_jsx(\"h2\",{children:tpl.name}),/*#__PURE__*/_jsx(\"p\",{className:\"tpl-desc\",children:tpl.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tpl-meta\",children:[tpl.activities.length,\" actividades\"]}),/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:'2rem'},children:\"Pacientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tpl-grid patient-grid\",children:patients.map(p=>/*#__PURE__*/_jsxs(\"div\",{className:\"patient-card\",onDragOver:allowDrop,onDrop:e=>handleDrop(e,`assign-${p._id}`),onClick:()=>openPatientDetail(p,tpl._id),children:[/*#__PURE__*/_jsx(\"img\",{src:p.avatar,alt:p.name,className:\"patient-avatar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"patient-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:p.name}),/*#__PURE__*/_jsx(\"span\",{className:\"patient-email\",children:p.email})]})]},p._id))})]},tpl._id)),modalData.visible&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop\",onClick:closeModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:closeModal,children:\"\\xD7\"}),modalData.loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Cargando detalle\\u2026\"}),modalData.error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-msg\",children:modalData.error}),modalData.instance&&(()=>{const inst=modalData.instance;const tpl=inst.template;const total=tpl.activities.length;const done=inst.completedActivities.length;const pct=Math.round(done/total*100);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[modalData.patient.name,\" \\u2014 \",tpl.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{margin:'0.5rem 0'},children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-filled\",style:{width:`${pct}%`}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"progress-text\",children:[done,\" de \",total,\" actividades completadas (\",pct,\"%)\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"tpl-activities-list\",children:tpl.activities.map((act,i)=>{const doneAct=inst.completedActivities.includes(i);return/*#__PURE__*/_jsxs(\"li\",{className:\"activity-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"activity-toggle\",children:doneAct?'✔️':'◻️'}),/*#__PURE__*/_jsx(\"span\",{className:doneAct?'completed':'',children:act.name}),/*#__PURE__*/_jsxs(\"small\",{className:\"activity-meta\",children:[act.minutes,\" min | Nivel \",act.challenge]})]},i);})})]});})()]})})]})});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","FaTrash","FaEdit","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RoutineTemplatesPage","templates","setTemplates","patients","setPatients","loading","setLoading","error","setError","assignments","setAssignments","modalData","setModalData","visible","patient","instance","navigate","token","localStorage","getItem","headers","Promise","all","fetch","then","_ref","resTpl","resPat","status","alert","dataTpl","json","dataPat","Array","isArray","Error","resp","map","tpl","data","insts","get","_id","Object","fromEntries","catch","err","console","message","finally","onDragStart","e","item","type","dataTransfer","setData","JSON","stringify","effectAllowed","allowDrop","preventDefault","handleDrop","zone","parse","getData","ts","filter","t","method","payload","name","description","category","tags","duration","reminder","activities","a","desc","challenge","minutes","body","res","ok","text","txt","newTpl","startsWith","patientId","split","templateId","openPatientDetail","list","instances","inst","find","i","template","mod","_err$response","_err$response$data","response","msg","closeModal","className","children","onClick","length","draggable","style","marginTop","p","onDragOver","onDrop","src","avatar","alt","email","stopPropagation","total","done","completedActivities","pct","Math","round","margin","width","act","doneAct","includes"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TherapistTemplates.js"],"sourcesContent":["// src/pages/RoutineTemplatesPage.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaTrash, FaEdit } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport '../styles/routineTemplates.css';\r\n\r\nexport default function RoutineTemplatesPage() {\r\n  const [templates, setTemplates]     = useState([]);\r\n  const [patients, setPatients]       = useState([]);\r\n  const [loading, setLoading]         = useState(true);\r\n  const [error, setError]             = useState(null);\r\n  const [assignments, setAssignments] = useState({});\r\n\r\n  const [modalData, setModalData] = useState({\r\n    visible:  false,\r\n    loading:  false,\r\n    error:    null,\r\n    patient:  null,\r\n    instance: null\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const token    = localStorage.getItem('token');\r\n  const headers  = { 'Content-Type': 'application/json', 'x-auth-token': token };\r\n\r\n  // Fetch inicial de plantillas, pacientes y assignments\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/login');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    Promise.all([\r\n      fetch('/api/routines/templates',   { headers }),\r\n      fetch('/api/therapist/patients',   { headers })\r\n    ])\r\n      .then(async ([resTpl, resPat]) => {\r\n        if (resTpl.status === 401 || resPat.status === 401) {\r\n          alert('Sesión expirada. Vuelve a iniciar sesión.');\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        const dataTpl = await resTpl.json();\r\n        const dataPat = await resPat.json();\r\n        if (!Array.isArray(dataTpl) || !Array.isArray(dataPat)) {\r\n          throw new Error('Respuesta inesperada del servidor');\r\n        }\r\n\r\n        setTemplates(dataTpl);\r\n        setPatients(dataPat);\r\n\r\n        // Para cada plantilla, cargamos las instancias ya asignadas\r\n        const resp = await Promise.all(\r\n          dataTpl.map(async tpl => {\r\n            const { data: insts } = await axios.get(\r\n              `/api/routines/instances/template/${tpl._id}`,\r\n              { headers }\r\n            );\r\n            return [tpl._id, insts];\r\n          })\r\n        );\r\n        setAssignments(Object.fromEntries(resp));\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        setError(err.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [navigate, token]);\r\n\r\n  // Drag & drop handlers\r\n  const onDragStart = (e, item, type) => {\r\n    e.dataTransfer.setData('application/json', JSON.stringify({ type, item }));\r\n    e.dataTransfer.effectAllowed = 'copyMove';\r\n  };\r\n  const allowDrop = e => e.preventDefault();\r\n\r\n  const handleDrop = useCallback((e, zone) => {\r\n    e.preventDefault();\r\n    const { type, item } = JSON.parse(e.dataTransfer.getData('application/json'));\r\n\r\n    // eliminar plantilla\r\n    if (zone === 'trash' && type === 'template') {\r\n      setTemplates(ts => ts.filter(t => t._id !== item._id));\r\n      fetch(`/api/routines/templates/${item._id}`, { method: 'DELETE', headers })\r\n        .catch(console.error);\r\n    }\r\n    // duplicar plantilla\r\n    else if (zone === 'duplicate' && type === 'template') {\r\n      const payload = {\r\n        name:       item.name + ' (copia)',\r\n        description:item.description,\r\n        category:   item.category,\r\n        tags:       item.tags,\r\n        duration:   item.duration,\r\n        reminder:   item.reminder,\r\n        activities: item.activities.map(a => ({\r\n          name:      a.name,\r\n          desc:      a.desc,\r\n          challenge: a.challenge,\r\n          minutes:   a.minutes\r\n        }))\r\n      };\r\n      fetch('/api/routines/templates', {\r\n        method: 'POST', headers, body: JSON.stringify(payload)\r\n      })\r\n        .then(res => {\r\n          if (!res.ok) return res.text().then(txt => { throw new Error(txt) });\r\n          return res.json();\r\n        })\r\n        .then(newTpl => setTemplates(ts => [newTpl, ...ts]))\r\n        .catch(err => {\r\n          console.error('Error duplicando plantilla:', err);\r\n          alert('No se pudo duplicar: ' + err.message);\r\n        });\r\n    }\r\n    // asignar a paciente\r\n    else if (zone.startsWith('assign-') && type === 'template') {\r\n      const patientId = zone.split('-')[1];\r\n      fetch('/api/routines/instances', {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify({ templateId: item._id, patientId })\r\n      })\r\n        .then(res => {\r\n          if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n          alert(`Plantilla «${item.name}» asignada a paciente ${patientId}`);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error asignando plantilla:', err);\r\n          alert('No se pudo asignar: ' + err.message);\r\n        });\r\n    }\r\n  }, [token]);\r\n\r\n  // Abre modal con detalle de un paciente para una plantilla dada\r\n  const openPatientDetail = async (patient, templateId) => {\r\n    setModalData({ visible:true, loading:true, error:null, patient, instance:null });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/api/routines/instances/${patient._id}`,\r\n        { headers }\r\n      );\r\n      const list = Array.isArray(data) ? data : (data.instances || []);\r\n      const inst = list.find(i => i.template._id === templateId);\r\n      if (!inst) throw new Error('No existe asignación para este paciente.');\r\n      setModalData(mod => ({ ...mod, instance:inst, loading:false }));\r\n    } catch (err) {\r\n      console.error(err);\r\n      setModalData(mod => ({\r\n        ...mod,\r\n        loading:false,\r\n        error: err.response?.data?.msg || err.message\r\n      }));\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalData({ visible:false, loading:false, error:null, patient:null, instance:null });\r\n  };\r\n\r\n  if (loading) return <div className=\"tpl-container\">Cargando plantillas…</div>;\r\n  if (error)   return <div className=\"tpl-container\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"routine-templates-page therapist-templates-page\">\r\n      <div className=\"tpl-container\">\r\n        <div className=\"tpl-header\">\r\n          <h1>Mis Plantillas</h1>\r\n          <button className=\"btn-new\" onClick={() => navigate('/therapist/templates/new')}>\r\n            📄 Nueva plantilla\r\n          </button>\r\n        </div>\r\n\r\n        {templates.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            🤔 Aún no se han creado plantillas\r\n          </div>\r\n        ) : (\r\n          templates.map(tpl => (\r\n            <div\r\n              key={tpl._id}\r\n              className=\"tpl-card\"\r\n              draggable\r\n              onDragStart={e => onDragStart(e, tpl, 'template')}\r\n            >\r\n              <FaEdit\r\n                className=\"icon-edit\"\r\n                onClick={() => navigate(`/therapist/templates/${tpl._id}/edit`)}\r\n              />\r\n              <h2>{tpl.name}</h2>\r\n              <p className=\"tpl-desc\">{tpl.description}</p>\r\n              <div className=\"tpl-meta\">\r\n                {tpl.activities.length} actividades\r\n              </div>\r\n\r\n              <h3 style={{ marginTop: '2rem' }}>Pacientes</h3>\r\n              <div className=\"tpl-grid patient-grid\">\r\n                {patients.map(p => (\r\n                  <div\r\n                    key={p._id}\r\n                    className=\"patient-card\"\r\n                    onDragOver={allowDrop}\r\n                    onDrop={e => handleDrop(e, `assign-${p._id}`)}\r\n                    onClick={() => openPatientDetail(p, tpl._id)}\r\n                  >\r\n                    <img\r\n                      src={p.avatar}\r\n                      alt={p.name}\r\n                      className=\"patient-avatar\"\r\n                    />\r\n                    <div className=\"patient-info\">\r\n                      <strong>{p.name}</strong>\r\n                      <span className=\"patient-email\">{p.email}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n\r\n        {/* Modal de detalle */}\r\n        {modalData.visible && (\r\n          <div className=\"modal-backdrop\" onClick={closeModal}>\r\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n              <button className=\"modal-close\" onClick={closeModal}>×</button>\r\n\r\n              {modalData.loading && <p>Cargando detalle…</p>}\r\n              {modalData.error   && <p className=\"error-msg\">{modalData.error}</p>}\r\n\r\n              {modalData.instance && (() => {\r\n                const inst    = modalData.instance;\r\n                const tpl     = inst.template;\r\n                const total   = tpl.activities.length;\r\n                const done    = inst.completedActivities.length;\r\n                const pct     = Math.round((done / total) * 100);\r\n\r\n                return (\r\n                  <>\r\n                    <h2>\r\n                      {modalData.patient.name} — {tpl.name}\r\n                    </h2>\r\n\r\n                    <div className=\"progress-bar\" style={{ margin: '0.5rem 0' }}>\r\n                      <div className=\"progress-filled\" style={{ width: `${pct}%` }} />\r\n                    </div>\r\n                    <p className=\"progress-text\">\r\n                      {done} de {total} actividades completadas ({pct}%)\r\n                    </p>\r\n\r\n                    <ul className=\"tpl-activities-list\">\r\n                      {tpl.activities.map((act, i) => {\r\n                        const doneAct = inst.completedActivities.includes(i);\r\n                        return (\r\n                          <li key={i} className=\"activity-item\">\r\n                            <span className=\"activity-toggle\">\r\n                              {doneAct ? '✔️' : '◻️'}\r\n                            </span>\r\n                            <span className={doneAct ? 'completed' : ''}>\r\n                              {act.name}\r\n                            </span>\r\n                            <small className=\"activity-meta\">\r\n                              {act.minutes} min | Nivel {act.challenge}\r\n                            </small>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}