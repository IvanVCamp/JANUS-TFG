{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\MiPlaneta.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/miPlaneta.css';\n\n// Lista de elementos disponibles para crear el planeta\n// Se usan imágenes (o URLs de iconos) en lugar de emojis; aquí se usan nombres de archivo (asegúrate de tenerlos en /assets)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: 'estadio',\n  title: 'Estadio',\n  image: '/assets/estadio.png',\n  defaultSize: 'medium'\n}, {\n  id: 'parque',\n  title: 'Parque',\n  image: '/assets/parque.png',\n  defaultSize: 'medium'\n}, {\n  id: 'colegio',\n  title: 'Colegio',\n  image: '/assets/colegio.png',\n  defaultSize: 'medium'\n}, {\n  id: 'biblioteca',\n  title: 'Biblioteca',\n  image: '/assets/biblioteca.png',\n  defaultSize: 'medium'\n}, {\n  id: 'hospital',\n  title: 'Hospital',\n  image: '/assets/hospital.png',\n  defaultSize: 'medium'\n}, {\n  id: 'centro_comercial',\n  title: 'Centro Comercial',\n  image: '/assets/centro_comercial.png',\n  defaultSize: 'medium'\n}, {\n  id: 'teatro',\n  title: 'Teatro',\n  image: '/assets/teatro.png',\n  defaultSize: 'medium'\n}\n// Puedes agregar más elementos según tu criterio\n];\n\n// Genera una grilla básica para el planeta, simulando distintas regiones\nconst generatePlanetRegions = () => {\n  // Por simplicidad, usaremos una lista de \"regiones\" que se mostrarán en una grilla flexible\n  // La idea es que el contenedor del planeta tenga un zoom (escala) ajustable.\n  // Aquí cada \"región\" es simplemente una celda en la grilla.\n  const regions = [];\n  // Suponemos 6 regiones (2 filas x 3 columnas)\n  for (let i = 0; i < 6; i++) {\n    regions.push({\n      id: `region-${i}`,\n      items: []\n    });\n  }\n  return regions;\n};\nfunction MiPlaneta() {\n  _s();\n  const navigate = useNavigate();\n  const [poolElements] = useState(initialElements);\n  const [regions, setRegions] = useState(generatePlanetRegions());\n  const [zoom, setZoom] = useState(1); // 1 = 100%\n\n  // Si no hay token, redirige a login\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) navigate('/');\n  }, [navigate]);\n\n  // Para este ejemplo, vamos a permitir que el usuario arrastre elementos al contenedor \"planeta\"\n  // Para simplificar, usaremos un único droppable \"planet\" en vez de múltiples regiones.\n  // Luego, la grilla interna de regiones se simula con CSS (display: flex; flex-wrap: wrap)\n  // Cada elemento depositado se guarda con: elementId, title, image, region (por ejemplo, la región en la que se colocó), and size.\n  // En este ejemplo, haremos que al soltar un elemento se añada al final de la lista del contenedor planet.\n  // Si se desea un comportamiento más complejo (por ejemplo, arrastrar libremente sobre coordenadas), habría que usar otra librería.\n  const [planetItems, setPlanetItems] = useState([]); // array de objetos: { instanceId, elementId, title, image, size }\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    // Si se arrastra desde el pool y se suelta en \"planet\"\n    if (source.droppableId === 'pool' && destination.droppableId === 'planet') {\n      const originalId = draggableId.replace('pool-', '');\n      const element = poolElements.find(el => el.id === originalId);\n      if (!element) return;\n      const newItem = {\n        ...element,\n        instanceId: `${element.id}-${Date.now()}`,\n        size: element.defaultSize // valor inicial \"medium\"\n      };\n      // Añadir al final de planetItems\n      setPlanetItems(prev => [...prev, newItem]);\n      return;\n    }\n    // Si se reordena dentro del planeta (planet)\n    if (source.droppableId === 'planet' && destination.droppableId === 'planet') {\n      const newItems = Array.from(planetItems);\n      const [removed] = newItems.splice(source.index, 1);\n      newItems.splice(destination.index, 0, removed);\n      setPlanetItems(newItems);\n    }\n  };\n\n  // Cambiar el tamaño de un elemento. Los valores pueden ser: \"small\", \"medium\", \"large\"\n  const handleSizeChange = (instanceId, newSize) => {\n    setPlanetItems(prev => prev.map(item => item.instanceId === instanceId ? {\n      ...item,\n      size: newSize\n    } : item));\n  };\n\n  // Manejar el zoom (aumentar o disminuir la escala)\n  const handleZoomChange = e => {\n    setZoom(parseFloat(e.target.value));\n  };\n  const handleSavePlanet = async () => {\n    const token = localStorage.getItem('token');\n    // Preparamos el payload: un array de items con sus datos\n    const payload = {\n      items: planetItems.map(item => ({\n        elementId: item.id,\n        title: item.title,\n        image: item.image,\n        size: item.size\n        // Si se quisiera guardar la posición o región, se incluiría aquí.\n      }))\n    };\n    try {\n      await axios.post('http://localhost:5000/api/planet', payload, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      alert('¡Tu planeta ha sido guardado!');\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(err);\n      alert('Error al guardar tu planeta.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mi-planeta-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mp-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mp-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => navigate('/dashboard'),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mi Planeta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Este es TU PLANETA, ll\\xE9nalo con las cosas que m\\xE1s te gustan hacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cada opci\\xF3n tiene tres tama\\xF1os diferentes. Elige el tama\\xF1o que mejor represente cu\\xE1nto te gusta: m\\xE1s grande si te encanta, mediano si te gusta, y peque\\xF1o si te gusta menos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-zoom-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"zoom\",\n        children: \"Zoom:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"zoom\",\n        min: \"0.5\",\n        max: \"1.5\",\n        step: \"0.1\",\n        value: zoom,\n        onChange: handleZoomChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mp-content\",\n        style: {\n          transform: `scale(${zoom})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mp-pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Elementos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"pool\",\n            isDropDisabled: true,\n            renderClone: (provided, snapshot, rubric) => {\n              const el = poolElements[rubric.source.index];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mp-element-card\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: el.image,\n                  alt: el.title,\n                  className: \"mp-element-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mp-element-title\",\n                  children: el.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this);\n            },\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [poolElements.map((el, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: `pool-${el.id}`,\n                index: index,\n                children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mp-element-card\",\n                  ref: providedDraggable.innerRef,\n                  ...providedDraggable.draggableProps,\n                  ...providedDraggable.dragHandleProps,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: el.image,\n                    alt: el.title,\n                    className: \"mp-element-image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mp-element-title\",\n                    children: el.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 25\n                }, this)\n              }, `pool-${el.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mp-planet\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Arrastra tus elementos aqu\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"planet\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mp-planet-droppable\",\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [planetItems.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: item.instanceId,\n                index: index,\n                children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `mp-planet-item ${item.size}`,\n                  ref: providedDraggable.innerRef,\n                  ...providedDraggable.draggableProps,\n                  ...providedDraggable.dragHandleProps,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.image,\n                    alt: item.title,\n                    className: \"mp-planet-item-image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mp-planet-item-title\",\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mp-size-controls\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSizeChange(item.instanceId, 'small'),\n                      children: \"Peque\\xF1o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSizeChange(item.instanceId, 'medium'),\n                      children: \"Mediano\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSizeChange(item.instanceId, 'large'),\n                      children: \"Grande\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this)\n              }, item.instanceId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mp-save-btn\",\n        onClick: handleSavePlanet,\n        children: \"Guardar mi planeta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mp-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2025 \\xA9 Iv\\xE1n Vela Campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(MiPlaneta, \"u7wcKFfOST6QAT6s6i81oYcbgds=\", false, function () {\n  return [useNavigate];\n});\n_c = MiPlaneta;\nexport default MiPlaneta;\nvar _c;\n$RefreshReg$(_c, \"MiPlaneta\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","useNavigate","axios","jsxDEV","_jsxDEV","initialElements","id","title","image","defaultSize","generatePlanetRegions","regions","i","push","items","MiPlaneta","_s","navigate","poolElements","setRegions","zoom","setZoom","token","localStorage","getItem","planetItems","setPlanetItems","onDragEnd","result","source","destination","draggableId","droppableId","originalId","replace","element","find","el","newItem","instanceId","Date","now","size","prev","newItems","Array","from","removed","splice","index","handleSizeChange","newSize","map","item","handleZoomChange","e","parseFloat","target","value","handleSavePlanet","payload","elementId","post","headers","alert","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","min","max","step","onChange","style","transform","isDropDisabled","renderClone","provided","snapshot","rubric","ref","innerRef","draggableProps","dragHandleProps","src","alt","droppableProps","providedDraggable","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/MiPlaneta.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/miPlaneta.css';\r\n\r\n// Lista de elementos disponibles para crear el planeta\r\n// Se usan imágenes (o URLs de iconos) en lugar de emojis; aquí se usan nombres de archivo (asegúrate de tenerlos en /assets)\r\nconst initialElements = [\r\n  { id: 'estadio', title: 'Estadio', image: '/assets/estadio.png', defaultSize: 'medium' },\r\n  { id: 'parque', title: 'Parque', image: '/assets/parque.png', defaultSize: 'medium' },\r\n  { id: 'colegio', title: 'Colegio', image: '/assets/colegio.png', defaultSize: 'medium' },\r\n  { id: 'biblioteca', title: 'Biblioteca', image: '/assets/biblioteca.png', defaultSize: 'medium' },\r\n  { id: 'hospital', title: 'Hospital', image: '/assets/hospital.png', defaultSize: 'medium' },\r\n  { id: 'centro_comercial', title: 'Centro Comercial', image: '/assets/centro_comercial.png', defaultSize: 'medium' },\r\n  { id: 'teatro', title: 'Teatro', image: '/assets/teatro.png', defaultSize: 'medium' },\r\n  // Puedes agregar más elementos según tu criterio\r\n];\r\n\r\n// Genera una grilla básica para el planeta, simulando distintas regiones\r\nconst generatePlanetRegions = () => {\r\n  // Por simplicidad, usaremos una lista de \"regiones\" que se mostrarán en una grilla flexible\r\n  // La idea es que el contenedor del planeta tenga un zoom (escala) ajustable.\r\n  // Aquí cada \"región\" es simplemente una celda en la grilla.\r\n  const regions = [];\r\n  // Suponemos 6 regiones (2 filas x 3 columnas)\r\n  for (let i = 0; i < 6; i++) {\r\n    regions.push({ id: `region-${i}`, items: [] });\r\n  }\r\n  return regions;\r\n};\r\n\r\nfunction MiPlaneta() {\r\n  const navigate = useNavigate();\r\n  const [poolElements] = useState(initialElements);\r\n  const [regions, setRegions] = useState(generatePlanetRegions());\r\n  const [zoom, setZoom] = useState(1); // 1 = 100%\r\n\r\n  // Si no hay token, redirige a login\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) navigate('/');\r\n  }, [navigate]);\r\n\r\n  // Para este ejemplo, vamos a permitir que el usuario arrastre elementos al contenedor \"planeta\"\r\n  // Para simplificar, usaremos un único droppable \"planet\" en vez de múltiples regiones.\r\n  // Luego, la grilla interna de regiones se simula con CSS (display: flex; flex-wrap: wrap)\r\n  // Cada elemento depositado se guarda con: elementId, title, image, region (por ejemplo, la región en la que se colocó), and size.\r\n  // En este ejemplo, haremos que al soltar un elemento se añada al final de la lista del contenedor planet.\r\n  // Si se desea un comportamiento más complejo (por ejemplo, arrastrar libremente sobre coordenadas), habría que usar otra librería.\r\n  const [planetItems, setPlanetItems] = useState([]); // array de objetos: { instanceId, elementId, title, image, size }\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination) return;\r\n    // Si se arrastra desde el pool y se suelta en \"planet\"\r\n    if (source.droppableId === 'pool' && destination.droppableId === 'planet') {\r\n      const originalId = draggableId.replace('pool-', '');\r\n      const element = poolElements.find(el => el.id === originalId);\r\n      if (!element) return;\r\n      const newItem = {\r\n        ...element,\r\n        instanceId: `${element.id}-${Date.now()}`,\r\n        size: element.defaultSize // valor inicial \"medium\"\r\n      };\r\n      // Añadir al final de planetItems\r\n      setPlanetItems(prev => [...prev, newItem]);\r\n      return;\r\n    }\r\n    // Si se reordena dentro del planeta (planet)\r\n    if (source.droppableId === 'planet' && destination.droppableId === 'planet') {\r\n      const newItems = Array.from(planetItems);\r\n      const [removed] = newItems.splice(source.index, 1);\r\n      newItems.splice(destination.index, 0, removed);\r\n      setPlanetItems(newItems);\r\n    }\r\n  };\r\n\r\n  // Cambiar el tamaño de un elemento. Los valores pueden ser: \"small\", \"medium\", \"large\"\r\n  const handleSizeChange = (instanceId, newSize) => {\r\n    setPlanetItems(prev =>\r\n      prev.map(item => item.instanceId === instanceId ? { ...item, size: newSize } : item)\r\n    );\r\n  };\r\n\r\n  // Manejar el zoom (aumentar o disminuir la escala)\r\n  const handleZoomChange = (e) => {\r\n    setZoom(parseFloat(e.target.value));\r\n  };\r\n\r\n  const handleSavePlanet = async () => {\r\n    const token = localStorage.getItem('token');\r\n    // Preparamos el payload: un array de items con sus datos\r\n    const payload = {\r\n      items: planetItems.map(item => ({\r\n        elementId: item.id,\r\n        title: item.title,\r\n        image: item.image,\r\n        size: item.size\r\n        // Si se quisiera guardar la posición o región, se incluiría aquí.\r\n      }))\r\n    };\r\n    try {\r\n      await axios.post('http://localhost:5000/api/planet', payload, {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      alert('¡Tu planeta ha sido guardado!');\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Error al guardar tu planeta.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mi-planeta-container\">\r\n      <header className=\"mp-header\">\r\n        <div className=\"mp-header-left\">\r\n          <button className=\"back-btn\" onClick={() => navigate('/dashboard')}>←</button>\r\n          <h1>Mi Planeta</h1>\r\n        </div>\r\n      </header>\r\n      <div className=\"mp-instructions\">\r\n        <p>Este es TU PLANETA, llénalo con las cosas que más te gustan hacer</p>\r\n        <p>\r\n          Cada opción tiene tres tamaños diferentes. Elige el tamaño que mejor represente\r\n          cuánto te gusta: más grande si te encanta, mediano si te gusta, y pequeño si te gusta menos.\r\n        </p>\r\n      </div>\r\n      <div className=\"mp-zoom-control\">\r\n        <label htmlFor=\"zoom\">Zoom:</label>\r\n        <input\r\n          type=\"range\"\r\n          id=\"zoom\"\r\n          min=\"0.5\"\r\n          max=\"1.5\"\r\n          step=\"0.1\"\r\n          value={zoom}\r\n          onChange={handleZoomChange}\r\n        />\r\n      </div>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"mp-content\" style={{ transform: `scale(${zoom})` }}>\r\n          {/* Pool de elementos */}\r\n          <div className=\"mp-pool\">\r\n            <h2>Elementos</h2>\r\n            <Droppable\r\n              droppableId=\"pool\"\r\n              isDropDisabled={true}\r\n              renderClone={(provided, snapshot, rubric) => {\r\n                const el = poolElements[rubric.source.index];\r\n                return (\r\n                  <div\r\n                    className=\"mp-element-card\"\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                  >\r\n                    <img src={el.image} alt={el.title} className=\"mp-element-image\" />\r\n                    <span className=\"mp-element-title\">{el.title}</span>\r\n                  </div>\r\n                );\r\n              }}\r\n            >\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {poolElements.map((el, index) => (\r\n                    <Draggable key={`pool-${el.id}`} draggableId={`pool-${el.id}`} index={index}>\r\n                      {(providedDraggable) => (\r\n                        <div\r\n                          className=\"mp-element-card\"\r\n                          ref={providedDraggable.innerRef}\r\n                          {...providedDraggable.draggableProps}\r\n                          {...providedDraggable.dragHandleProps}\r\n                        >\r\n                          <img src={el.image} alt={el.title} className=\"mp-element-image\" />\r\n                          <span className=\"mp-element-title\">{el.title}</span>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          {/* Área del planeta */}\r\n          <div className=\"mp-planet\">\r\n            <h2>Arrastra tus elementos aquí</h2>\r\n            <Droppable droppableId=\"planet\">\r\n              {(provided) => (\r\n                <div className=\"mp-planet-droppable\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {planetItems.map((item, index) => (\r\n                    <Draggable key={item.instanceId} draggableId={item.instanceId} index={index}>\r\n                      {(providedDraggable) => (\r\n                        <div\r\n                          className={`mp-planet-item ${item.size}`}\r\n                          ref={providedDraggable.innerRef}\r\n                          {...providedDraggable.draggableProps}\r\n                          {...providedDraggable.dragHandleProps}\r\n                        >\r\n                          <img src={item.image} alt={item.title} className=\"mp-planet-item-image\" />\r\n                          <span className=\"mp-planet-item-title\">{item.title}</span>\r\n                          <div className=\"mp-size-controls\">\r\n                            <button onClick={() => handleSizeChange(item.instanceId, 'small')}>Pequeño</button>\r\n                            <button onClick={() => handleSizeChange(item.instanceId, 'medium')}>Mediano</button>\r\n                            <button onClick={() => handleSizeChange(item.instanceId, 'large')}>Grande</button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n      <div className=\"mp-actions\">\r\n        <button className=\"mp-save-btn\" onClick={handleSavePlanet}>Guardar mi planeta</button>\r\n      </div>\r\n      <footer className=\"mp-footer\">\r\n        <p>2025 © Iván Vela Campos</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MiPlaneta;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,mBAAmB;AACzE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;;AAEhC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG,CACtB;EAAEC,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE,qBAAqB;EAAEC,WAAW,EAAE;AAAS,CAAC,EACxF;EAAEH,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,WAAW,EAAE;AAAS,CAAC,EACrF;EAAEH,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE,qBAAqB;EAAEC,WAAW,EAAE;AAAS,CAAC,EACxF;EAAEH,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE,YAAY;EAAEC,KAAK,EAAE,wBAAwB;EAAEC,WAAW,EAAE;AAAS,CAAC,EACjG;EAAEH,EAAE,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,WAAW,EAAE;AAAS,CAAC,EAC3F;EAAEH,EAAE,EAAE,kBAAkB;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,KAAK,EAAE,8BAA8B;EAAEC,WAAW,EAAE;AAAS,CAAC,EACnH;EAAEH,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,WAAW,EAAE;AAAS;AACpF;AAAA,CACD;;AAED;AACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAClC;EACA;EACA;EACA,MAAMC,OAAO,GAAG,EAAE;EAClB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BD,OAAO,CAACE,IAAI,CAAC;MAAEP,EAAE,EAAE,UAAUM,CAAC,EAAE;MAAEE,KAAK,EAAE;IAAG,CAAC,CAAC;EAChD;EACA,OAAOH,OAAO;AAChB,CAAC;AAED,SAASI,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,YAAY,CAAC,GAAGtB,QAAQ,CAACS,eAAe,CAAC;EAChD,MAAM,CAACM,OAAO,EAAEQ,UAAU,CAAC,GAAGvB,QAAQ,CAACc,qBAAqB,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMyB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAEL,QAAQ,CAAC,GAAG,CAAC;EAC3B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAM+B,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,MAAM;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAGH,MAAM;IACnD,IAAI,CAACE,WAAW,EAAE;IAClB;IACA,IAAID,MAAM,CAACG,WAAW,KAAK,MAAM,IAAIF,WAAW,CAACE,WAAW,KAAK,QAAQ,EAAE;MACzE,MAAMC,UAAU,GAAGF,WAAW,CAACG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MACnD,MAAMC,OAAO,GAAGjB,YAAY,CAACkB,IAAI,CAACC,EAAE,IAAIA,EAAE,CAAC/B,EAAE,KAAK2B,UAAU,CAAC;MAC7D,IAAI,CAACE,OAAO,EAAE;MACd,MAAMG,OAAO,GAAG;QACd,GAAGH,OAAO;QACVI,UAAU,EAAE,GAAGJ,OAAO,CAAC7B,EAAE,IAAIkC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACzCC,IAAI,EAAEP,OAAO,CAAC1B,WAAW,CAAC;MAC5B,CAAC;MACD;MACAiB,cAAc,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,OAAO,CAAC,CAAC;MAC1C;IACF;IACA;IACA,IAAIT,MAAM,CAACG,WAAW,KAAK,QAAQ,IAAIF,WAAW,CAACE,WAAW,KAAK,QAAQ,EAAE;MAC3E,MAAMY,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACrB,WAAW,CAAC;MACxC,MAAM,CAACsB,OAAO,CAAC,GAAGH,QAAQ,CAACI,MAAM,CAACnB,MAAM,CAACoB,KAAK,EAAE,CAAC,CAAC;MAClDL,QAAQ,CAACI,MAAM,CAAClB,WAAW,CAACmB,KAAK,EAAE,CAAC,EAAEF,OAAO,CAAC;MAC9CrB,cAAc,CAACkB,QAAQ,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAGA,CAACX,UAAU,EAAEY,OAAO,KAAK;IAChDzB,cAAc,CAACiB,IAAI,IACjBA,IAAI,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACd,UAAU,KAAKA,UAAU,GAAG;MAAE,GAAGc,IAAI;MAAEX,IAAI,EAAES;IAAQ,CAAC,GAAGE,IAAI,CACrF,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BlC,OAAO,CAACmC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMrC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C;IACA,MAAMoC,OAAO,GAAG;MACd9C,KAAK,EAAEW,WAAW,CAAC2B,GAAG,CAACC,IAAI,KAAK;QAC9BQ,SAAS,EAAER,IAAI,CAAC/C,EAAE;QAClBC,KAAK,EAAE8C,IAAI,CAAC9C,KAAK;QACjBC,KAAK,EAAE6C,IAAI,CAAC7C,KAAK;QACjBkC,IAAI,EAAEW,IAAI,CAACX;QACX;MACF,CAAC,CAAC;IACJ,CAAC;IACD,IAAI;MACF,MAAMxC,KAAK,CAAC4D,IAAI,CAAC,kCAAkC,EAAEF,OAAO,EAAE;QAC5DG,OAAO,EAAE;UAAE,cAAc,EAAEzC;QAAM;MACnC,CAAC,CAAC;MACF0C,KAAK,CAAC,+BAA+B,CAAC;MACtC/C,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOgD,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBD,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACE5D,OAAA;IAAKgE,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCjE,OAAA;MAAQgE,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC3BjE,OAAA;QAAKgE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjE,OAAA;UAAQgE,SAAS,EAAC,UAAU;UAACE,OAAO,EAAEA,CAAA,KAAMrD,QAAQ,CAAC,YAAY,CAAE;UAAAoD,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9EtE,OAAA;UAAAiE,QAAA,EAAI;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACTtE,OAAA;MAAKgE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BjE,OAAA;QAAAiE,QAAA,EAAG;MAAiE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxEtE,OAAA;QAAAiE,QAAA,EAAG;MAGH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtE,OAAA;MAAKgE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BjE,OAAA;QAAOuE,OAAO,EAAC,MAAM;QAAAN,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCtE,OAAA;QACEwE,IAAI,EAAC,OAAO;QACZtE,EAAE,EAAC,MAAM;QACTuE,GAAG,EAAC,KAAK;QACTC,GAAG,EAAC,KAAK;QACTC,IAAI,EAAC,KAAK;QACVrB,KAAK,EAAEtC,IAAK;QACZ4D,QAAQ,EAAE1B;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtE,OAAA,CAACN,eAAe;MAAC6B,SAAS,EAAEA,SAAU;MAAA0C,QAAA,eACpCjE,OAAA;QAAKgE,SAAS,EAAC,YAAY;QAACa,KAAK,EAAE;UAAEC,SAAS,EAAE,SAAS9D,IAAI;QAAI,CAAE;QAAAiD,QAAA,gBAEjEjE,OAAA;UAAKgE,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBjE,OAAA;YAAAiE,QAAA,EAAI;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBtE,OAAA,CAACL,SAAS;YACRiC,WAAW,EAAC,MAAM;YAClBmD,cAAc,EAAE,IAAK;YACrBC,WAAW,EAAEA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,KAAK;cAC3C,MAAMlD,EAAE,GAAGnB,YAAY,CAACqE,MAAM,CAAC1D,MAAM,CAACoB,KAAK,CAAC;cAC5C,oBACE7C,OAAA;gBACEgE,SAAS,EAAC,iBAAiB;gBAC3BoB,GAAG,EAAEH,QAAQ,CAACI,QAAS;gBAAA,GACnBJ,QAAQ,CAACK,cAAc;gBAAA,GACvBL,QAAQ,CAACM,eAAe;gBAAAtB,QAAA,gBAE5BjE,OAAA;kBAAKwF,GAAG,EAAEvD,EAAE,CAAC7B,KAAM;kBAACqF,GAAG,EAAExD,EAAE,CAAC9B,KAAM;kBAAC6D,SAAS,EAAC;gBAAkB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAClEtE,OAAA;kBAAMgE,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAEhC,EAAE,CAAC9B;gBAAK;kBAAAgE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAEV,CAAE;YAAAL,QAAA,EAEAgB,QAAQ,iBACRjF,OAAA;cAAKoF,GAAG,EAAEH,QAAQ,CAACI,QAAS;cAAA,GAAKJ,QAAQ,CAACS,cAAc;cAAAzB,QAAA,GACrDnD,YAAY,CAACkC,GAAG,CAAC,CAACf,EAAE,EAAEY,KAAK,kBAC1B7C,OAAA,CAACJ,SAAS;gBAAuB+B,WAAW,EAAE,QAAQM,EAAE,CAAC/B,EAAE,EAAG;gBAAC2C,KAAK,EAAEA,KAAM;gBAAAoB,QAAA,EACxE0B,iBAAiB,iBACjB3F,OAAA;kBACEgE,SAAS,EAAC,iBAAiB;kBAC3BoB,GAAG,EAAEO,iBAAiB,CAACN,QAAS;kBAAA,GAC5BM,iBAAiB,CAACL,cAAc;kBAAA,GAChCK,iBAAiB,CAACJ,eAAe;kBAAAtB,QAAA,gBAErCjE,OAAA;oBAAKwF,GAAG,EAAEvD,EAAE,CAAC7B,KAAM;oBAACqF,GAAG,EAAExD,EAAE,CAAC9B,KAAM;oBAAC6D,SAAS,EAAC;kBAAkB;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAClEtE,OAAA;oBAAMgE,SAAS,EAAC,kBAAkB;oBAAAC,QAAA,EAAEhC,EAAE,CAAC9B;kBAAK;oBAAAgE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjD;cACN,GAXa,QAAQrC,EAAE,CAAC/B,EAAE,EAAE;gBAAAiE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYpB,CACZ,CAAC,EACDW,QAAQ,CAACW,WAAW;YAAA;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAGNtE,OAAA;UAAKgE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBjE,OAAA;YAAAiE,QAAA,EAAI;UAA2B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpCtE,OAAA,CAACL,SAAS;YAACiC,WAAW,EAAC,QAAQ;YAAAqC,QAAA,EAC3BgB,QAAQ,iBACRjF,OAAA;cAAKgE,SAAS,EAAC,qBAAqB;cAACoB,GAAG,EAAEH,QAAQ,CAACI,QAAS;cAAA,GAAKJ,QAAQ,CAACS,cAAc;cAAAzB,QAAA,GACrF5C,WAAW,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,kBAC3B7C,OAAA,CAACJ,SAAS;gBAAuB+B,WAAW,EAAEsB,IAAI,CAACd,UAAW;gBAACU,KAAK,EAAEA,KAAM;gBAAAoB,QAAA,EACxE0B,iBAAiB,iBACjB3F,OAAA;kBACEgE,SAAS,EAAE,kBAAkBf,IAAI,CAACX,IAAI,EAAG;kBACzC8C,GAAG,EAAEO,iBAAiB,CAACN,QAAS;kBAAA,GAC5BM,iBAAiB,CAACL,cAAc;kBAAA,GAChCK,iBAAiB,CAACJ,eAAe;kBAAAtB,QAAA,gBAErCjE,OAAA;oBAAKwF,GAAG,EAAEvC,IAAI,CAAC7C,KAAM;oBAACqF,GAAG,EAAExC,IAAI,CAAC9C,KAAM;oBAAC6D,SAAS,EAAC;kBAAsB;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAC1EtE,OAAA;oBAAMgE,SAAS,EAAC,sBAAsB;oBAAAC,QAAA,EAAEhB,IAAI,CAAC9C;kBAAK;oBAAAgE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAC1DtE,OAAA;oBAAKgE,SAAS,EAAC,kBAAkB;oBAAAC,QAAA,gBAC/BjE,OAAA;sBAAQkE,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACG,IAAI,CAACd,UAAU,EAAE,OAAO,CAAE;sBAAA8B,QAAA,EAAC;oBAAO;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACnFtE,OAAA;sBAAQkE,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACG,IAAI,CAACd,UAAU,EAAE,QAAQ,CAAE;sBAAA8B,QAAA,EAAC;oBAAO;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACpFtE,OAAA;sBAAQkE,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACG,IAAI,CAACd,UAAU,EAAE,OAAO,CAAE;sBAAA8B,QAAA,EAAC;oBAAM;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/E,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cACN,GAhBarB,IAAI,CAACd,UAAU;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAiBpB,CACZ,CAAC,EACDW,QAAQ,CAACW,WAAW;YAAA;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAClBtE,OAAA;MAAKgE,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBjE,OAAA;QAAQgE,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEX,gBAAiB;QAAAU,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eACNtE,OAAA;MAAQgE,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC3BjE,OAAA;QAAAiE,QAAA,EAAG;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1D,EAAA,CApMQD,SAAS;EAAA,QACCd,WAAW;AAAA;AAAAgG,EAAA,GADrBlF,SAAS;AAsMlB,eAAeA,SAAS;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}