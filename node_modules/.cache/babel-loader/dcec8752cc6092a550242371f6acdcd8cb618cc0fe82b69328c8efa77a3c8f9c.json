{"ast":null,"code":"import axios from'axios';const API_URL='/api/auth';const authService={login:async credentials=>{// 1. Hacemos login\nconst response=await axios.post(`${API_URL}/login`,credentials);// 2. Si viene usuario (o token + usuario), lo guardamos\nif(response.data.user){localStorage.setItem('user',JSON.stringify(response.data.user));}return response;},register:userData=>axios.post(`${API_URL}/register`,userData),forgotPassword:email=>axios.post(`${API_URL}/forgot-password`,{email}),resetPassword:data=>axios.put(`${API_URL}/reset-password`,data),// 3. Nuevo método para recuperar el usuario actual\ngetCurrentUser:()=>{return JSON.parse(localStorage.getItem('user'));},// 4. Opcional: cerrar sesión\nlogout:()=>{localStorage.removeItem('user');}};export default authService;","map":{"version":3,"names":["axios","API_URL","authService","login","credentials","response","post","data","user","localStorage","setItem","JSON","stringify","register","userData","forgotPassword","email","resetPassword","put","getCurrentUser","parse","getItem","logout","removeItem"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/auth';\r\n\r\nconst authService = {\r\n  login: async (credentials) => {\r\n    // 1. Hacemos login\r\n    const response = await axios.post(`${API_URL}/login`, credentials);\r\n    // 2. Si viene usuario (o token + usuario), lo guardamos\r\n    if (response.data.user) {\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    }\r\n    return response;\r\n  },\r\n\r\n  register: (userData) => \r\n    axios.post(`${API_URL}/register`, userData),\r\n\r\n  forgotPassword: (email) => \r\n    axios.post(`${API_URL}/forgot-password`, { email }),\r\n\r\n  resetPassword: (data) => \r\n    axios.put(`${API_URL}/reset-password`, data),\r\n\r\n  // 3. Nuevo método para recuperar el usuario actual\r\n  getCurrentUser: () => {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  },\r\n\r\n  // 4. Opcional: cerrar sesión\r\n  logout: () => {\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,WAAW,CAE3B,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5B;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,CAAEG,WAAW,CAAC,CAClE;AACA,GAAIC,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAE,CACtBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAClE,CACA,MAAO,CAAAH,QAAQ,CACjB,CAAC,CAEDQ,QAAQ,CAAGC,QAAQ,EACjBd,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,CAAEa,QAAQ,CAAC,CAE7CC,cAAc,CAAGC,KAAK,EACpBhB,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,kBAAkB,CAAE,CAAEe,KAAM,CAAC,CAAC,CAErDC,aAAa,CAAGV,IAAI,EAClBP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,iBAAiB,CAAEM,IAAI,CAAC,CAE9C;AACAY,cAAc,CAAEA,CAAA,GAAM,CACpB,MAAO,CAAAR,IAAI,CAACS,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC,CAAC,CACjD,CAAC,CAED;AACAC,MAAM,CAAEA,CAAA,GAAM,CACZb,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC,CACjC,CACF,CAAC,CAED,cAAe,CAAArB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}