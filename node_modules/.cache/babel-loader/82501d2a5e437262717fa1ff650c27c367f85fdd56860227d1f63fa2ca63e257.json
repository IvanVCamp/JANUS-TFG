{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid,LineChart,Line,ResponsiveContainer}from'recharts';import'../styles/therapistRoutines.css';// Mapeo simple de activityId → categoría\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const categoryMap={futbol:'Ocio',dibujos:'Ocio',comics:'Ocio',tarea:'Obligaciones',videojuegos:'Ocio',helado:'Ocio',parque:'Ocio',banio:'Autocuidado',dormir:'Autocuidado',musica:'Ocio',bailar:'Ocio',amigos:'Ocio',bicicleta:'Ocio',dibujar:'Ocio',mascotas:'Ocio',experimentos:'Obligaciones',cantar:'Ocio',lego:'Ocio',nadar:'Autocuidado',computadora:'Ocio'};const COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'];function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selectedIdx,setSelectedIdx]=useState(0);const[metrics,setMetrics]=useState(null);// 1) Fetchar todos los resultados de la Máquina del Tiempo\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(resp=>{const data=resp.data;setResults(data);// Rango por defecto: últimos 7 días\nconst now=new Date();const weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// 2) Filtrar por rango de fechas\nuseEffect(()=>{if(!from||!to)return;const fDate=new Date(from);const tDate=new Date(to);tDate.setHours(23,59,59,999);setFiltered(results.filter(r=>{const d=new Date(r.createdAt);return d>=fDate&&d<=tDate;}));setSelectedIdx(0);},[results,from,to]);// 3) Computar métricas cuando cambia el resultado seleccionado\nuseEffect(()=>{if(!filtered.length){setMetrics(null);return;}const res=filtered[selectedIdx];setMetrics(computeMetrics(res,filtered));},[filtered,selectedIdx]);// Función que calcula todas las métricas\nfunction computeMetrics(result,allResults){const slots=result.timeSlots||[];const activities=slots.flatMap(slot=>(slot.activities||[]).map(act=>({...act,slot:slot.slot,category:categoryMap[act.activityId]||'Otros'})));const totalMin=activities.reduce((sum,a)=>sum+a.duration,0);// A) Distribución % por categoría\nconst sumByCat={};activities.forEach(a=>{sumByCat[a.category]=(sumByCat[a.category]||0)+a.duration;});const distribution=Object.entries(sumByCat).map(_ref=>{let[name,val]=_ref;return{name,value:+(val/totalMin*100).toFixed(1)};});// B) Horas promedio diarias por categoría (sobre el periodo filtrado)\nconst daysSet=new Set(filtered.map(r=>new Date(r.createdAt).toDateString()));const dayCount=daysSet.size||1;const avgDaily=Object.entries(sumByCat).map(_ref2=>{let[name,val]=_ref2;return{name,hours:+(val/60/dayCount).toFixed(2)};});// C) Tendencia: % por categoría en cada fecha\nconst trend=allResults.map(r=>{const slots2=r.timeSlots||[];const acts2=slots2.flatMap(sl=>sl.activities.map(act=>({...act,category:categoryMap[act.activityId]||'Otros'})));const tot2=acts2.reduce((s,a)=>s+a.duration,0)||1;const sums={};acts2.forEach(a=>sums[a.category]=(sums[a.category]||0)+a.duration);return{date:new Date(r.createdAt).toLocaleDateString(),...Object.fromEntries(Object.entries(sums).map(_ref3=>{let[cat,mins]=_ref3;return[cat,+(mins/tot2*100).toFixed(1)];}))};});// D) Diversidad de actividades\nconst diversity=new Set(activities.map(a=>a.activityId)).size;// E) Consistencia: % de slots con ≥1 actividad en el día seleccionado\nconst filledSlots=slots.filter(s=>s.activities&&s.activities.length>0).length;const consistency=+(filledSlots/24*100).toFixed(1);// F) Índice global de equilibrio: 1 - (Suma |%cat - 1/N|)/2\nconst N=distribution.length;const uniform=100/N;const idx=1-distribution.reduce((acc,c)=>acc+Math.abs(c.value-uniform),0)/200;const balanceIndex=+idx.toFixed(2);// G) Bloques prolongados >120min: detectar en actividades contiguas de misma categoría\n// (simplificamos: si en el mismo slot + siguiente suman >120)\nconst prolonged=[];for(let i=0;i<slots.length-1;i++){const curr=slots[i].activities||[];const next=slots[i+1].activities||[];curr.forEach(a=>{next.filter(b=>categoryMap[b.activityId]===categoryMap[a.activityId]).forEach(b=>{if(a.duration+b.duration>120){prolonged.push({date:new Date(result.createdAt).toLocaleDateString(),category:a.category,duration:a.duration+b.duration,slots:`${slots[i].slot} & ${slots[i+1].slot}`});}});});}return{distribution,avgDaily,trend,diversity,consistency,balanceIndex,prolonged};}return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Rutinas del Paciente\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"D\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selectedIdx,onChange:e=>setSelectedIdx(+e.target.value),children:filtered.map((r,i)=>/*#__PURE__*/_jsx(\"option\",{value:i,children:new Date(r.createdAt).toLocaleDateString()},r.createdAt))})]})]}),metrics&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"\\xCDndice de Equilibrio: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.balanceIndex})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((entry,i)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[i%COLORS.length]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Horas Promedio Diarias\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.avgDaily,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"hours\",fill:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tendencia (% por Categor\\xEDa)\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:metrics.trend,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),Object.keys(categoryMap).reduce((acc,key)=>{const cat=categoryMap[key];return acc.includes(cat)?acc:[...acc,cat];},[]).map((cat,i)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:cat,stroke:COLORS[i%COLORS.length]},cat)),/*#__PURE__*/_jsx(Legend,{})]})})]})]}),metrics.prolonged.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bloques Prolongados > 2\\xA0h\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"patient-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Fecha\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Categor\\xEDa\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Duraci\\xF3n (min)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Slots\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:metrics.prolonged.map((b,i)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:b.date}),/*#__PURE__*/_jsx(\"td\",{children:b.category}),/*#__PURE__*/_jsx(\"td\",{children:b.duration}),/*#__PURE__*/_jsx(\"td\",{children:b.slots})]},i))})]})]})]})]});}export default PatientRoutines;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","LineChart","Line","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","COLORS","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selectedIdx","setSelectedIdx","metrics","setMetrics","token","localStorage","getItem","get","headers","then","resp","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","fDate","tDate","setHours","filter","r","d","createdAt","length","res","computeMetrics","result","allResults","slots","timeSlots","activities","flatMap","slot","map","act","category","activityId","totalMin","reduce","sum","a","duration","sumByCat","forEach","distribution","Object","entries","_ref","name","val","value","toFixed","daysSet","Set","toDateString","dayCount","size","avgDaily","_ref2","hours","trend","slots2","acts2","sl","tot2","s","sums","date","toLocaleDateString","fromEntries","_ref3","cat","mins","diversity","filledSlots","consistency","N","uniform","idx","acc","c","Math","abs","balanceIndex","prolonged","i","curr","next","b","push","className","children","type","onChange","e","target","width","height","dataKey","nameKey","cx","cy","outerRadius","label","entry","fill","margin","top","right","left","bottom","strokeDasharray","keys","key","includes","stroke"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip, Legend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  LineChart, Line,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Mapeo simple de activityId → categoría\r\nconst categoryMap = {\r\n  futbol: 'Ocio', dibujos: 'Ocio', comics: 'Ocio',\r\n  tarea: 'Obligaciones', videojuegos: 'Ocio', helado: 'Ocio',\r\n  parque: 'Ocio', banio: 'Autocuidado', dormir: 'Autocuidado',\r\n  musica: 'Ocio', bailar: 'Ocio', amigos: 'Ocio',\r\n  bicicleta: 'Ocio', dibujar: 'Ocio', mascotas: 'Ocio',\r\n  experimentos: 'Obligaciones', cantar: 'Ocio', lego: 'Ocio',\r\n  nadar: 'Autocuidado', computadora: 'Ocio'\r\n};\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#0088FE'];\r\n\r\nfunction PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selectedIdx, setSelectedIdx] = useState(0);\r\n  const [metrics, setMetrics] = useState(null);\r\n\r\n  // 1) Fetchar todos los resultados de la Máquina del Tiempo\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    })\r\n    .then(resp => {\r\n      const data = resp.data;\r\n      setResults(data);\r\n      // Rango por defecto: últimos 7 días\r\n      const now = new Date();\r\n      const weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    })\r\n    .catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // 2) Filtrar por rango de fechas\r\n  useEffect(() => {\r\n    if (!from || !to) return;\r\n    const fDate = new Date(from);\r\n    const tDate = new Date(to);\r\n    tDate.setHours(23,59,59,999);\r\n    setFiltered(\r\n      results.filter(r => {\r\n        const d = new Date(r.createdAt);\r\n        return d >= fDate && d <= tDate;\r\n      })\r\n    );\r\n    setSelectedIdx(0);\r\n  }, [results, from, to]);\r\n\r\n  // 3) Computar métricas cuando cambia el resultado seleccionado\r\n  useEffect(() => {\r\n    if (!filtered.length) {\r\n      setMetrics(null);\r\n      return;\r\n    }\r\n    const res = filtered[selectedIdx];\r\n    setMetrics(computeMetrics(res, filtered));\r\n  }, [filtered, selectedIdx]);\r\n\r\n  // Función que calcula todas las métricas\r\n  function computeMetrics(result, allResults) {\r\n    const slots = result.timeSlots || [];\r\n    const activities = slots.flatMap(slot =>\r\n      (slot.activities||[]).map(act => ({\r\n        ...act,\r\n        slot: slot.slot,\r\n        category: categoryMap[act.activityId] || 'Otros'\r\n      }))\r\n    );\r\n\r\n    const totalMin = activities.reduce((sum,a)=>sum+a.duration,0);\r\n\r\n    // A) Distribución % por categoría\r\n    const sumByCat = {};\r\n    activities.forEach(a => {\r\n      sumByCat[a.category] = (sumByCat[a.category]||0) + a.duration;\r\n    });\r\n    const distribution = Object.entries(sumByCat).map(([name, val]) => ({\r\n      name,\r\n      value: +((val/totalMin)*100).toFixed(1)\r\n    }));\r\n\r\n    // B) Horas promedio diarias por categoría (sobre el periodo filtrado)\r\n    const daysSet = new Set(filtered.map(r => new Date(r.createdAt).toDateString()));\r\n    const dayCount = daysSet.size || 1;\r\n    const avgDaily = Object.entries(sumByCat).map(([name, val]) => ({\r\n      name,\r\n      hours: +(val/60/dayCount).toFixed(2)\r\n    }));\r\n\r\n    // C) Tendencia: % por categoría en cada fecha\r\n    const trend = allResults.map(r => {\r\n      const slots2 = r.timeSlots||[];\r\n      const acts2 = slots2.flatMap(sl=>sl.activities.map(act=>({\r\n        ...act,\r\n        category: categoryMap[act.activityId]||'Otros'\r\n      })));\r\n      const tot2 = acts2.reduce((s,a)=>s+a.duration,0) || 1;\r\n      const sums = {};\r\n      acts2.forEach(a=> sums[a.category]=(sums[a.category]||0)+a.duration );\r\n      return {\r\n        date: new Date(r.createdAt).toLocaleDateString(),\r\n        ...Object.fromEntries(\r\n          Object.entries(sums).map(([cat,mins])=>[cat, +((mins/tot2)*100).toFixed(1)])\r\n        )\r\n      };\r\n    });\r\n\r\n    // D) Diversidad de actividades\r\n    const diversity = new Set(activities.map(a=>a.activityId)).size;\r\n\r\n    // E) Consistencia: % de slots con ≥1 actividad en el día seleccionado\r\n    const filledSlots = slots.filter(s=>s.activities && s.activities.length>0).length;\r\n    const consistency = +((filledSlots/24)*100).toFixed(1);\r\n\r\n    // F) Índice global de equilibrio: 1 - (Suma |%cat - 1/N|)/2\r\n    const N = distribution.length;\r\n    const uniform = 100/N;\r\n    const idx = 1 - (distribution.reduce((acc,c)=>(acc+Math.abs(c.value-uniform)),0)/200);\r\n    const balanceIndex = +idx.toFixed(2);\r\n\r\n    // G) Bloques prolongados >120min: detectar en actividades contiguas de misma categoría\r\n    // (simplificamos: si en el mismo slot + siguiente suman >120)\r\n    const prolonged = [];\r\n    for (let i=0; i<slots.length-1; i++) {\r\n      const curr = slots[i].activities||[];\r\n      const next = slots[i+1].activities||[];\r\n      curr.forEach(a=>{\r\n        next\r\n          .filter(b=>categoryMap[b.activityId]===categoryMap[a.activityId])\r\n          .forEach(b=>{\r\n            if (a.duration + b.duration > 120) {\r\n              prolonged.push({\r\n                date: new Date(result.createdAt).toLocaleDateString(),\r\n                category: a.category,\r\n                duration: a.duration + b.duration,\r\n                slots: `${slots[i].slot} & ${slots[i+1].slot}`\r\n              });\r\n            }\r\n          });\r\n      });\r\n    }\r\n\r\n    return { distribution, avgDaily, trend, diversity, consistency, balanceIndex, prolonged };\r\n  }\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Rutinas del Paciente</h2>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <label>\r\n          Desde:\r\n          <input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Hasta:\r\n          <input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          Día:\r\n          <select\r\n            value={selectedIdx}\r\n            onChange={e=>setSelectedIdx(+e.target.value)}\r\n          >\r\n            {filtered.map((r,i)=>(\r\n              <option key={r.createdAt} value={i}>\r\n                {new Date(r.createdAt).toLocaleDateString()}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {metrics && (\r\n        <>\r\n          <div className=\"metrics-grid\">\r\n            <div className=\"metric-card\">Diversidad: <strong>{metrics.diversity}</strong></div>\r\n            <div className=\"metric-card\">Consistencia: <strong>{metrics.consistency}%</strong></div>\r\n            <div className=\"metric-card\">Índice de Equilibrio: <strong>{metrics.balanceIndex}</strong></div>\r\n          </div>\r\n\r\n          <div className=\"charts-grid\">\r\n            <div className=\"chart-block\">\r\n              <h3>Distribución % por Categoría</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={metrics.distribution}\r\n                    dataKey=\"value\"\r\n                    nameKey=\"name\"\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={80}\r\n                    label\r\n                  >\r\n                    {metrics.distribution.map((entry, i) => (\r\n                      <Cell key={i} fill={COLORS[i % COLORS.length]} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                  <Legend />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block\">\r\n              <h3>Horas Promedio Diarias</h3>\r\n              <ResponsiveContainer width=\"100%\" height={250}>\r\n                <BarChart\r\n                  data={metrics.avgDaily}\r\n                  margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Bar dataKey=\"hours\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            <div className=\"chart-block full-width\">\r\n              <h3>Tendencia (% por Categoría)</h3>\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <LineChart data={metrics.trend} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  {Object.keys(categoryMap).reduce((acc, key) => {\r\n                    const cat = categoryMap[key];\r\n                    return acc.includes(cat) ? acc : [...acc, cat];\r\n                  }, []).map((cat, i) => (\r\n                    <Line\r\n                      key={cat}\r\n                      type=\"monotone\"\r\n                      dataKey={cat}\r\n                      stroke={COLORS[i % COLORS.length]}\r\n                    />\r\n                  ))}\r\n                  <Legend />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n\r\n          {metrics.prolonged.length > 0 && (\r\n            <div className=\"chart-block full-width\">\r\n              <h3>Bloques Prolongados &gt; 2 h</h3>\r\n              <table className=\"patient-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Fecha</th>\r\n                    <th>Categoría</th>\r\n                    <th>Duración (min)</th>\r\n                    <th>Slots</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {metrics.prolonged.map((b, i) => (\r\n                    <tr key={i}>\r\n                      <td>{b.date}</td>\r\n                      <td>{b.category}</td>\r\n                      <td>{b.duration}</td>\r\n                      <td>{b.slots}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRoutines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}