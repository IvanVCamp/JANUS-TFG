{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TFG\\\\prototipo-TFG\\\\Janus-TFG\\\\src\\\\components\\\\TimeMachine.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid'; // Genera IDs únicos\nimport '../styles/timeMachine.css';\n\n// Lista de actividades \"plantilla\" (pool)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialActivities = [{\n  id: 'futbol',\n  title: 'Jugar al fútbol',\n  icon: '⚽'\n}, {\n  id: 'dibujos',\n  title: 'Ver dibujos animados',\n  icon: '📺'\n}, {\n  id: 'comics',\n  title: 'Leer cómics',\n  icon: '📚'\n}, {\n  id: 'tarea',\n  title: 'Hacer tarea',\n  icon: '📝'\n}, {\n  id: 'videojuegos',\n  title: 'Jugar videojuegos',\n  icon: '🎮'\n}, {\n  id: 'helado',\n  title: 'Comer helado',\n  icon: '🍦'\n}, {\n  id: 'parque',\n  title: 'Ir al parque',\n  icon: '🏞️'\n}, {\n  id: 'banio',\n  title: 'Bañarse',\n  icon: '🛁'\n}, {\n  id: 'dormir',\n  title: 'Dormir',\n  icon: '😴'\n}, {\n  id: 'musica',\n  title: 'Escuchar música',\n  icon: '🎵'\n}, {\n  id: 'bailar',\n  title: 'Bailar',\n  icon: '💃'\n}, {\n  id: 'amigos',\n  title: 'Jugar con amigos',\n  icon: '👫'\n}, {\n  id: 'bici',\n  title: 'Montar en bicicleta',\n  icon: '🚲'\n}, {\n  id: 'dibujar',\n  title: 'Dibujar',\n  icon: '🎨'\n}, {\n  id: 'mascotas',\n  title: 'Jugar con mascotas',\n  icon: '🐶'\n}, {\n  id: 'experimentos',\n  title: 'Hacer experimentos',\n  icon: '🔬'\n}, {\n  id: 'cantar',\n  title: 'Cantar',\n  icon: '🎤'\n}, {\n  id: 'lego',\n  title: 'Construir con LEGO',\n  icon: '🧱'\n}, {\n  id: 'nadar',\n  title: 'Nadar',\n  icon: '🏊'\n}, {\n  id: 'pc',\n  title: 'Jugar en la computadora',\n  icon: '💻'\n}];\n\n// Genera 24 slots horarios (00:00 a 23:00)\nconst generateTimeSlots = () => {\n  const slots = [];\n  for (let i = 0; i < 24; i++) {\n    const label = `${String(i).padStart(2, '0')}:00`;\n    slots.push({\n      id: label,\n      activities: []\n    });\n  }\n  return slots;\n};\nfunction TimeMachine() {\n  _s();\n  const [dayType, setDayType] = useState('Miércoles');\n  const [pool, setPool] = useState(initialActivities); // Actividades disponibles (plantilla)\n  const [timeSlots, setTimeSlots] = useState(generateTimeSlots());\n  const [instructionsVisible, setInstructionsVisible] = useState(true);\n  const [saving, setSaving] = useState(false);\n\n  // Manejador de arrastre\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return; // Soltó fuera de un droppable\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return; // No hay cambios\n    }\n\n    // CASO 1: Arrastrar desde el pool a un slot\n    if (source.droppableId === 'pool' && destination.droppableId !== 'pool') {\n      // Tomamos la actividad \"plantilla\" (pero NO la quitamos del pool si queremos usarla varias veces)\n      const activity = pool[source.index];\n\n      // Creamos una \"instancia\" nueva con un ID único\n      const instance = {\n        instanceId: uuid(),\n        // Nuevo ID único\n        templateId: activity.id,\n        // Referencia a la plantilla\n        title: activity.title,\n        icon: activity.icon,\n        duration: 60 // Duración por defecto\n      };\n\n      // Insertar la instancia en el slot destino\n      const newSlots = Array.from(timeSlots);\n      const destSlotIndex = newSlots.findIndex(s => s.id === destination.droppableId);\n      const destActivities = Array.from(newSlots[destSlotIndex].activities);\n      destActivities.splice(destination.index, 0, instance);\n      newSlots[destSlotIndex].activities = destActivities;\n      setTimeSlots(newSlots);\n\n      // Si quieres que desaparezca del pool (solo se use una vez), descomenta:\n      // const newPool = Array.from(pool);\n      // newPool.splice(source.index, 1);\n      // setPool(newPool);\n\n      return;\n    }\n\n    // CASO 2: Mover dentro de un mismo slot o entre slots\n    if (source.droppableId !== 'pool' && destination.droppableId !== 'pool') {\n      const newSlots = Array.from(timeSlots);\n\n      // El slot origen\n      const sourceSlotIndex = newSlots.findIndex(s => s.id === source.droppableId);\n      const sourceActivities = Array.from(newSlots[sourceSlotIndex].activities);\n      const [movedItem] = sourceActivities.splice(source.index, 1);\n      newSlots[sourceSlotIndex].activities = sourceActivities;\n\n      // El slot destino\n      const destSlotIndex = newSlots.findIndex(s => s.id === destination.droppableId);\n      const destActivities = Array.from(newSlots[destSlotIndex].activities);\n      destActivities.splice(destination.index, 0, movedItem);\n      newSlots[destSlotIndex].activities = destActivities;\n      setTimeSlots(newSlots);\n    }\n\n    // CASO 3: Arrastrar de un slot de vuelta al pool (si quisieras permitirlo):\n    // if (source.droppableId !== 'pool' && destination.droppableId === 'pool') { ... }\n  };\n\n  // Ajustar la duración de una actividad en un slot\n  const handleDurationChange = (slotId, index, newDuration) => {\n    const newSlots = Array.from(timeSlots);\n    const slotIndex = newSlots.findIndex(s => s.id === slotId);\n    newSlots[slotIndex].activities[index].duration = newDuration;\n    setTimeSlots(newSlots);\n  };\n\n  // Guardar en backend\n  const handleSave = async () => {\n    setSaving(true);\n    // Preparar datos para el POST\n    const resultData = {\n      day: dayType,\n      timeSlots: timeSlots.filter(slot => slot.activities.length > 0).map(slot => ({\n        slot: slot.id,\n        activities: slot.activities\n      }))\n    };\n    try {\n      await axios.post('/api/time-machine', resultData, {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      alert('Resultado guardado exitosamente');\n    } catch (err) {\n      console.error('Error guardando resultado:', err);\n      alert('Error al guardar. Inténtalo de nuevo.');\n    }\n    setSaving(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-machine-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"tm-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"La M\\xE1quina del Tiempo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dayType,\n        onChange: e => setDayType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Mi\\xE9rcoles\",\n          children: \"Mi\\xE9rcoles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"S\\xE1bado\",\n          children: \"S\\xE1bado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), instructionsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tm-instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA1Esta es tu m\\xE1quina del tiempo! Arrastra las actividades que normalmente haces un \", dayType, \". Ajusta el tiempo deslizando la barra para cada actividad.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInstructionsVisible(false),\n        children: \"Cerrar instrucciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tm-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tm-pool\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Actividades disponibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"pool\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [pool.map((activity, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: activity.id,\n                index: index,\n                children: providedDraggable => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tm-activity-card\",\n                  ref: providedDraggable.innerRef,\n                  ...providedDraggable.draggableProps,\n                  ...providedDraggable.dragHandleProps,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tm-activity-icon\",\n                    children: activity.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tm-activity-title\",\n                    children: activity.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this)\n              }, activity.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tm-board\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Organiza tu d\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tm-timeline\",\n            children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: slot.id,\n              children: providedSlot => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tm-slot\",\n                ref: providedSlot.innerRef,\n                ...providedSlot.droppableProps,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tm-slot-label\",\n                  children: slot.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tm-slot-activities\",\n                  children: [slot.activities.map((act, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    // ID único por instancia\n                    draggableId: act.instanceId // Igual\n                    ,\n                    index: index,\n                    children: providedActivity => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tm-slot-activity\",\n                      ref: providedActivity.innerRef,\n                      ...providedActivity.draggableProps,\n                      ...providedActivity.dragHandleProps,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tm-slot-activity-header\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tm-activity-icon\",\n                          children: act.icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tm-activity-title\",\n                          children: act.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tm-duration-control\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"range\",\n                          min: \"30\",\n                          max: \"120\",\n                          step: \"15\",\n                          value: act.duration,\n                          onChange: e => handleDurationChange(slot.id, index, parseInt(e.target.value, 10))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [act.duration, \" min\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 31\n                    }, this)\n                  }, act.instanceId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 27\n                  }, this)), providedSlot.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)\n            }, slot.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tm-save-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        disabled: saving,\n        children: saving ? 'Guardando...' : 'Guardar mi día'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeMachine, \"p9aWnw0YDkEXKq4CNVp5vXr/5Jg=\");\n_c = TimeMachine;\nexport default TimeMachine;\nvar _c;\n$RefreshReg$(_c, \"TimeMachine\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","axios","v4","uuid","jsxDEV","_jsxDEV","initialActivities","id","title","icon","generateTimeSlots","slots","i","label","String","padStart","push","activities","TimeMachine","_s","dayType","setDayType","pool","setPool","timeSlots","setTimeSlots","instructionsVisible","setInstructionsVisible","saving","setSaving","onDragEnd","result","source","destination","droppableId","index","activity","instance","instanceId","templateId","duration","newSlots","Array","from","destSlotIndex","findIndex","s","destActivities","splice","sourceSlotIndex","sourceActivities","movedItem","handleDurationChange","slotId","newDuration","slotIndex","handleSave","resultData","day","filter","slot","length","map","post","headers","localStorage","getItem","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","provided","ref","innerRef","droppableProps","draggableId","providedDraggable","draggableProps","dragHandleProps","placeholder","providedSlot","act","providedActivity","type","min","max","step","parseInt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/TimeMachine.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport { v4 as uuid } from 'uuid';        // Genera IDs únicos\r\nimport '../styles/timeMachine.css';\r\n\r\n// Lista de actividades \"plantilla\" (pool)\r\nconst initialActivities = [\r\n  { id: 'futbol', title: 'Jugar al fútbol', icon: '⚽' },\r\n  { id: 'dibujos', title: 'Ver dibujos animados', icon: '📺' },\r\n  { id: 'comics', title: 'Leer cómics', icon: '📚' },\r\n  { id: 'tarea', title: 'Hacer tarea', icon: '📝' },\r\n  { id: 'videojuegos', title: 'Jugar videojuegos', icon: '🎮' },\r\n  { id: 'helado', title: 'Comer helado', icon: '🍦' },\r\n  { id: 'parque', title: 'Ir al parque', icon: '🏞️' },\r\n  { id: 'banio', title: 'Bañarse', icon: '🛁' },\r\n  { id: 'dormir', title: 'Dormir', icon: '😴' },\r\n  { id: 'musica', title: 'Escuchar música', icon: '🎵' },\r\n  { id: 'bailar', title: 'Bailar', icon: '💃' },\r\n  { id: 'amigos', title: 'Jugar con amigos', icon: '👫' },\r\n  { id: 'bici', title: 'Montar en bicicleta', icon: '🚲' },\r\n  { id: 'dibujar', title: 'Dibujar', icon: '🎨' },\r\n  { id: 'mascotas', title: 'Jugar con mascotas', icon: '🐶' },\r\n  { id: 'experimentos', title: 'Hacer experimentos', icon: '🔬' },\r\n  { id: 'cantar', title: 'Cantar', icon: '🎤' },\r\n  { id: 'lego', title: 'Construir con LEGO', icon: '🧱' },\r\n  { id: 'nadar', title: 'Nadar', icon: '🏊' },\r\n  { id: 'pc', title: 'Jugar en la computadora', icon: '💻' }\r\n];\r\n\r\n// Genera 24 slots horarios (00:00 a 23:00)\r\nconst generateTimeSlots = () => {\r\n  const slots = [];\r\n  for (let i = 0; i < 24; i++) {\r\n    const label = `${String(i).padStart(2, '0')}:00`;\r\n    slots.push({ id: label, activities: [] });\r\n  }\r\n  return slots;\r\n};\r\n\r\nfunction TimeMachine() {\r\n  const [dayType, setDayType] = useState('Miércoles');\r\n  const [pool, setPool] = useState(initialActivities);    // Actividades disponibles (plantilla)\r\n  const [timeSlots, setTimeSlots] = useState(generateTimeSlots());\r\n  const [instructionsVisible, setInstructionsVisible] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  // Manejador de arrastre\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;   // Soltó fuera de un droppable\r\n    if (\r\n      source.droppableId === destination.droppableId &&\r\n      source.index === destination.index\r\n    ) {\r\n      return;                   // No hay cambios\r\n    }\r\n\r\n    // CASO 1: Arrastrar desde el pool a un slot\r\n    if (source.droppableId === 'pool' && destination.droppableId !== 'pool') {\r\n      // Tomamos la actividad \"plantilla\" (pero NO la quitamos del pool si queremos usarla varias veces)\r\n      const activity = pool[source.index];\r\n\r\n      // Creamos una \"instancia\" nueva con un ID único\r\n      const instance = {\r\n        instanceId: uuid(),           // Nuevo ID único\r\n        templateId: activity.id,      // Referencia a la plantilla\r\n        title: activity.title,\r\n        icon: activity.icon,\r\n        duration: 60                  // Duración por defecto\r\n      };\r\n\r\n      // Insertar la instancia en el slot destino\r\n      const newSlots = Array.from(timeSlots);\r\n      const destSlotIndex = newSlots.findIndex(s => s.id === destination.droppableId);\r\n      const destActivities = Array.from(newSlots[destSlotIndex].activities);\r\n\r\n      destActivities.splice(destination.index, 0, instance);\r\n      newSlots[destSlotIndex].activities = destActivities;\r\n      setTimeSlots(newSlots);\r\n\r\n      // Si quieres que desaparezca del pool (solo se use una vez), descomenta:\r\n      // const newPool = Array.from(pool);\r\n      // newPool.splice(source.index, 1);\r\n      // setPool(newPool);\r\n\r\n      return;\r\n    }\r\n\r\n    // CASO 2: Mover dentro de un mismo slot o entre slots\r\n    if (source.droppableId !== 'pool' && destination.droppableId !== 'pool') {\r\n      const newSlots = Array.from(timeSlots);\r\n\r\n      // El slot origen\r\n      const sourceSlotIndex = newSlots.findIndex(s => s.id === source.droppableId);\r\n      const sourceActivities = Array.from(newSlots[sourceSlotIndex].activities);\r\n      const [movedItem] = sourceActivities.splice(source.index, 1);\r\n      newSlots[sourceSlotIndex].activities = sourceActivities;\r\n\r\n      // El slot destino\r\n      const destSlotIndex = newSlots.findIndex(s => s.id === destination.droppableId);\r\n      const destActivities = Array.from(newSlots[destSlotIndex].activities);\r\n      destActivities.splice(destination.index, 0, movedItem);\r\n      newSlots[destSlotIndex].activities = destActivities;\r\n\r\n      setTimeSlots(newSlots);\r\n    }\r\n\r\n    // CASO 3: Arrastrar de un slot de vuelta al pool (si quisieras permitirlo):\r\n    // if (source.droppableId !== 'pool' && destination.droppableId === 'pool') { ... }\r\n  };\r\n\r\n  // Ajustar la duración de una actividad en un slot\r\n  const handleDurationChange = (slotId, index, newDuration) => {\r\n    const newSlots = Array.from(timeSlots);\r\n    const slotIndex = newSlots.findIndex(s => s.id === slotId);\r\n    newSlots[slotIndex].activities[index].duration = newDuration;\r\n    setTimeSlots(newSlots);\r\n  };\r\n\r\n  // Guardar en backend\r\n  const handleSave = async () => {\r\n    setSaving(true);\r\n    // Preparar datos para el POST\r\n    const resultData = {\r\n      day: dayType,\r\n      timeSlots: timeSlots\r\n        .filter(slot => slot.activities.length > 0)\r\n        .map(slot => ({\r\n          slot: slot.id,\r\n          activities: slot.activities\r\n        }))\r\n    };\r\n\r\n    try {\r\n      await axios.post('/api/time-machine', resultData, {\r\n        headers: { 'x-auth-token': localStorage.getItem('token') }\r\n      });\r\n      alert('Resultado guardado exitosamente');\r\n    } catch (err) {\r\n      console.error('Error guardando resultado:', err);\r\n      alert('Error al guardar. Inténtalo de nuevo.');\r\n    }\r\n    setSaving(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-machine-container\">\r\n      <header className=\"tm-header\">\r\n        <h1>La Máquina del Tiempo</h1>\r\n        <select value={dayType} onChange={(e) => setDayType(e.target.value)}>\r\n          <option value=\"Miércoles\">Miércoles</option>\r\n          <option value=\"Sábado\">Sábado</option>\r\n        </select>\r\n      </header>\r\n\r\n      {instructionsVisible && (\r\n        <div className=\"tm-instructions\">\r\n          <p>\r\n            ¡Esta es tu máquina del tiempo! Arrastra las actividades que normalmente haces \r\n            un {dayType}. Ajusta el tiempo deslizando la barra para cada actividad.\r\n          </p>\r\n          <button onClick={() => setInstructionsVisible(false)}>Cerrar instrucciones</button>\r\n        </div>\r\n      )}\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"tm-content\">\r\n          {/* Pool de actividades */}\r\n          <div className=\"tm-pool\">\r\n            <h2>Actividades disponibles</h2>\r\n            <Droppable droppableId=\"pool\">\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {pool.map((activity, index) => (\r\n                    <Draggable key={activity.id} draggableId={activity.id} index={index}>\r\n                      {(providedDraggable) => (\r\n                        <div\r\n                          className=\"tm-activity-card\"\r\n                          ref={providedDraggable.innerRef}\r\n                          {...providedDraggable.draggableProps}\r\n                          {...providedDraggable.dragHandleProps}\r\n                        >\r\n                          <span className=\"tm-activity-icon\">{activity.icon}</span>\r\n                          <span className=\"tm-activity-title\">{activity.title}</span>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          {/* Tablero con slots */}\r\n          <div className=\"tm-board\">\r\n            <h2>Organiza tu día</h2>\r\n            <div className=\"tm-timeline\">\r\n              {timeSlots.map((slot) => (\r\n                <Droppable droppableId={slot.id} key={slot.id}>\r\n                  {(providedSlot) => (\r\n                    <div\r\n                      className=\"tm-slot\"\r\n                      ref={providedSlot.innerRef}\r\n                      {...providedSlot.droppableProps}\r\n                    >\r\n                      <div className=\"tm-slot-label\">{slot.id}</div>\r\n                      <div className=\"tm-slot-activities\">\r\n                        {slot.activities.map((act, index) => (\r\n                          <Draggable\r\n                            key={act.instanceId}               // ID único por instancia\r\n                            draggableId={act.instanceId}        // Igual\r\n                            index={index}\r\n                          >\r\n                            {(providedActivity) => (\r\n                              <div\r\n                                className=\"tm-slot-activity\"\r\n                                ref={providedActivity.innerRef}\r\n                                {...providedActivity.draggableProps}\r\n                                {...providedActivity.dragHandleProps}\r\n                              >\r\n                                <div className=\"tm-slot-activity-header\">\r\n                                  <span className=\"tm-activity-icon\">{act.icon}</span>\r\n                                  <span className=\"tm-activity-title\">{act.title}</span>\r\n                                </div>\r\n                                <div className=\"tm-duration-control\">\r\n                                  <input\r\n                                    type=\"range\"\r\n                                    min=\"30\"\r\n                                    max=\"120\"\r\n                                    step=\"15\"\r\n                                    value={act.duration}\r\n                                    onChange={(e) =>\r\n                                      handleDurationChange(slot.id, index, parseInt(e.target.value, 10))\r\n                                    }\r\n                                  />\r\n                                  <span>{act.duration} min</span>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Draggable>\r\n                        ))}\r\n                        {providedSlot.placeholder}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n\r\n      {/* Botón de guardado */}\r\n      <div className=\"tm-save-container\">\r\n        <button onClick={handleSave} disabled={saving}>\r\n          {saving ? 'Guardando...' : 'Guardar mi día'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeMachine;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM,CAAC,CAAQ;AAC1C,OAAO,2BAA2B;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAG,CACxB;EAAEC,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAI,CAAC,EACrD;EAAEF,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC5D;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAK,CAAC,EAClD;EAAEF,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjD;EAAEF,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE,mBAAmB;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7D;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAK,CAAC,EACnD;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAM,CAAC,EACpD;EAAEF,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7C;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7C;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACtD;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7C;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACvD;EAAEF,EAAE,EAAE,MAAM;EAAEC,KAAK,EAAE,qBAAqB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxD;EAAEF,EAAE,EAAE,SAAS;EAAEC,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC/C;EAAEF,EAAE,EAAE,UAAU;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC3D;EAAEF,EAAE,EAAE,cAAc;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC/D;EAAEF,EAAE,EAAE,QAAQ;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7C;EAAEF,EAAE,EAAE,MAAM;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACvD;EAAEF,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC3C;EAAEF,EAAE,EAAE,IAAI;EAAEC,KAAK,EAAE,yBAAyB;EAAEC,IAAI,EAAE;AAAK,CAAC,CAC3D;;AAED;AACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,KAAK,GAAG,GAAGC,MAAM,CAACF,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK;IAChDJ,KAAK,CAACK,IAAI,CAAC;MAAET,EAAE,EAAEM,KAAK;MAAEI,UAAU,EAAE;IAAG,CAAC,CAAC;EAC3C;EACA,OAAON,KAAK;AACd,CAAC;AAED,SAASO,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,WAAW,CAAC;EACnD,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAACS,iBAAiB,CAAC,CAAC,CAAI;EACxD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAACa,iBAAiB,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACgB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAAC+B,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMiC,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IACtC,IAAI,CAACE,WAAW,EAAE,OAAO,CAAG;IAC5B,IACED,MAAM,CAACE,WAAW,KAAKD,WAAW,CAACC,WAAW,IAC9CF,MAAM,CAACG,KAAK,KAAKF,WAAW,CAACE,KAAK,EAClC;MACA,OAAO,CAAmB;IAC5B;;IAEA;IACA,IAAIH,MAAM,CAACE,WAAW,KAAK,MAAM,IAAID,WAAW,CAACC,WAAW,KAAK,MAAM,EAAE;MACvE;MACA,MAAME,QAAQ,GAAGd,IAAI,CAACU,MAAM,CAACG,KAAK,CAAC;;MAEnC;MACA,MAAME,QAAQ,GAAG;QACfC,UAAU,EAAEnC,IAAI,CAAC,CAAC;QAAY;QAC9BoC,UAAU,EAAEH,QAAQ,CAAC7B,EAAE;QAAO;QAC9BC,KAAK,EAAE4B,QAAQ,CAAC5B,KAAK;QACrBC,IAAI,EAAE2B,QAAQ,CAAC3B,IAAI;QACnB+B,QAAQ,EAAE,EAAE,CAAkB;MAChC,CAAC;;MAED;MACA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACnB,SAAS,CAAC;MACtC,MAAMoB,aAAa,GAAGH,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACvC,EAAE,KAAK0B,WAAW,CAACC,WAAW,CAAC;MAC/E,MAAMa,cAAc,GAAGL,KAAK,CAACC,IAAI,CAACF,QAAQ,CAACG,aAAa,CAAC,CAAC3B,UAAU,CAAC;MAErE8B,cAAc,CAACC,MAAM,CAACf,WAAW,CAACE,KAAK,EAAE,CAAC,EAAEE,QAAQ,CAAC;MACrDI,QAAQ,CAACG,aAAa,CAAC,CAAC3B,UAAU,GAAG8B,cAAc;MACnDtB,YAAY,CAACgB,QAAQ,CAAC;;MAEtB;MACA;MACA;MACA;;MAEA;IACF;;IAEA;IACA,IAAIT,MAAM,CAACE,WAAW,KAAK,MAAM,IAAID,WAAW,CAACC,WAAW,KAAK,MAAM,EAAE;MACvE,MAAMO,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACnB,SAAS,CAAC;;MAEtC;MACA,MAAMyB,eAAe,GAAGR,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACvC,EAAE,KAAKyB,MAAM,CAACE,WAAW,CAAC;MAC5E,MAAMgB,gBAAgB,GAAGR,KAAK,CAACC,IAAI,CAACF,QAAQ,CAACQ,eAAe,CAAC,CAAChC,UAAU,CAAC;MACzE,MAAM,CAACkC,SAAS,CAAC,GAAGD,gBAAgB,CAACF,MAAM,CAAChB,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;MAC5DM,QAAQ,CAACQ,eAAe,CAAC,CAAChC,UAAU,GAAGiC,gBAAgB;;MAEvD;MACA,MAAMN,aAAa,GAAGH,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACvC,EAAE,KAAK0B,WAAW,CAACC,WAAW,CAAC;MAC/E,MAAMa,cAAc,GAAGL,KAAK,CAACC,IAAI,CAACF,QAAQ,CAACG,aAAa,CAAC,CAAC3B,UAAU,CAAC;MACrE8B,cAAc,CAACC,MAAM,CAACf,WAAW,CAACE,KAAK,EAAE,CAAC,EAAEgB,SAAS,CAAC;MACtDV,QAAQ,CAACG,aAAa,CAAC,CAAC3B,UAAU,GAAG8B,cAAc;MAEnDtB,YAAY,CAACgB,QAAQ,CAAC;IACxB;;IAEA;IACA;EACF,CAAC;;EAED;EACA,MAAMW,oBAAoB,GAAGA,CAACC,MAAM,EAAElB,KAAK,EAAEmB,WAAW,KAAK;IAC3D,MAAMb,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACnB,SAAS,CAAC;IACtC,MAAM+B,SAAS,GAAGd,QAAQ,CAACI,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACvC,EAAE,KAAK8C,MAAM,CAAC;IAC1DZ,QAAQ,CAACc,SAAS,CAAC,CAACtC,UAAU,CAACkB,KAAK,CAAC,CAACK,QAAQ,GAAGc,WAAW;IAC5D7B,YAAY,CAACgB,QAAQ,CAAC;EACxB,CAAC;;EAED;EACA,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B3B,SAAS,CAAC,IAAI,CAAC;IACf;IACA,MAAM4B,UAAU,GAAG;MACjBC,GAAG,EAAEtC,OAAO;MACZI,SAAS,EAAEA,SAAS,CACjBmC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC3C,UAAU,CAAC4C,MAAM,GAAG,CAAC,CAAC,CAC1CC,GAAG,CAACF,IAAI,KAAK;QACZA,IAAI,EAAEA,IAAI,CAACrD,EAAE;QACbU,UAAU,EAAE2C,IAAI,CAAC3C;MACnB,CAAC,CAAC;IACN,CAAC;IAED,IAAI;MACF,MAAMhB,KAAK,CAAC8D,IAAI,CAAC,mBAAmB,EAAEN,UAAU,EAAE;QAChDO,OAAO,EAAE;UAAE,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;QAAE;MAC3D,CAAC,CAAC;MACFC,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAChDD,KAAK,CAAC,uCAAuC,CAAC;IAChD;IACAtC,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACExB,OAAA;IAAKkE,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCnE,OAAA;MAAQkE,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC3BnE,OAAA;QAAAmE,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BvE,OAAA;QAAQwE,KAAK,EAAEzD,OAAQ;QAAC0D,QAAQ,EAAGC,CAAC,IAAK1D,UAAU,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAClEnE,OAAA;UAAQwE,KAAK,EAAC,cAAW;UAAAL,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5CvE,OAAA;UAAQwE,KAAK,EAAC,WAAQ;UAAAL,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAERlD,mBAAmB,iBAClBrB,OAAA;MAAKkE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnE,OAAA;QAAAmE,QAAA,GAAG,0FAEE,EAACpD,OAAO,EAAC,6DACd;MAAA;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJvE,OAAA;QAAQ4E,OAAO,EAAEA,CAAA,KAAMtD,sBAAsB,CAAC,KAAK,CAAE;QAAA6C,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CACN,eAEDvE,OAAA,CAACP,eAAe;MAACgC,SAAS,EAAEA,SAAU;MAAA0C,QAAA,eACpCnE,OAAA;QAAKkE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAEzBnE,OAAA;UAAKkE,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBnE,OAAA;YAAAmE,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChCvE,OAAA,CAACN,SAAS;YAACmC,WAAW,EAAC,MAAM;YAAAsC,QAAA,EACzBU,QAAQ,iBACR7E,OAAA;cAAK8E,GAAG,EAAED,QAAQ,CAACE,QAAS;cAAA,GAAKF,QAAQ,CAACG,cAAc;cAAAb,QAAA,GACrDlD,IAAI,CAACwC,GAAG,CAAC,CAAC1B,QAAQ,EAAED,KAAK,kBACxB9B,OAAA,CAACL,SAAS;gBAAmBsF,WAAW,EAAElD,QAAQ,CAAC7B,EAAG;gBAAC4B,KAAK,EAAEA,KAAM;gBAAAqC,QAAA,EAChEe,iBAAiB,iBACjBlF,OAAA;kBACEkE,SAAS,EAAC,kBAAkB;kBAC5BY,GAAG,EAAEI,iBAAiB,CAACH,QAAS;kBAAA,GAC5BG,iBAAiB,CAACC,cAAc;kBAAA,GAChCD,iBAAiB,CAACE,eAAe;kBAAAjB,QAAA,gBAErCnE,OAAA;oBAAMkE,SAAS,EAAC,kBAAkB;oBAAAC,QAAA,EAAEpC,QAAQ,CAAC3B;kBAAI;oBAAAgE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACzDvE,OAAA;oBAAMkE,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,EAAEpC,QAAQ,CAAC5B;kBAAK;oBAAAiE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxD;cACN,GAXaxC,QAAQ,CAAC7B,EAAE;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYhB,CACZ,CAAC,EACDM,QAAQ,CAACQ,WAAW;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAGNvE,OAAA;UAAKkE,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBnE,OAAA;YAAAmE,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBvE,OAAA;YAAKkE,SAAS,EAAC,aAAa;YAAAC,QAAA,EACzBhD,SAAS,CAACsC,GAAG,CAAEF,IAAI,iBAClBvD,OAAA,CAACN,SAAS;cAACmC,WAAW,EAAE0B,IAAI,CAACrD,EAAG;cAAAiE,QAAA,EAC5BmB,YAAY,iBACZtF,OAAA;gBACEkE,SAAS,EAAC,SAAS;gBACnBY,GAAG,EAAEQ,YAAY,CAACP,QAAS;gBAAA,GACvBO,YAAY,CAACN,cAAc;gBAAAb,QAAA,gBAE/BnE,OAAA;kBAAKkE,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAEZ,IAAI,CAACrD;gBAAE;kBAAAkE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC9CvE,OAAA;kBAAKkE,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,GAChCZ,IAAI,CAAC3C,UAAU,CAAC6C,GAAG,CAAC,CAAC8B,GAAG,EAAEzD,KAAK,kBAC9B9B,OAAA,CAACL,SAAS;oBAC2B;oBACnCsF,WAAW,EAAEM,GAAG,CAACtD,UAAW,CAAQ;oBAAA;oBACpCH,KAAK,EAAEA,KAAM;oBAAAqC,QAAA,EAEXqB,gBAAgB,iBAChBxF,OAAA;sBACEkE,SAAS,EAAC,kBAAkB;sBAC5BY,GAAG,EAAEU,gBAAgB,CAACT,QAAS;sBAAA,GAC3BS,gBAAgB,CAACL,cAAc;sBAAA,GAC/BK,gBAAgB,CAACJ,eAAe;sBAAAjB,QAAA,gBAEpCnE,OAAA;wBAAKkE,SAAS,EAAC,yBAAyB;wBAAAC,QAAA,gBACtCnE,OAAA;0BAAMkE,SAAS,EAAC,kBAAkB;0BAAAC,QAAA,EAAEoB,GAAG,CAACnF;wBAAI;0BAAAgE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,eACpDvE,OAAA;0BAAMkE,SAAS,EAAC,mBAAmB;0BAAAC,QAAA,EAAEoB,GAAG,CAACpF;wBAAK;0BAAAiE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACnD,CAAC,eACNvE,OAAA;wBAAKkE,SAAS,EAAC,qBAAqB;wBAAAC,QAAA,gBAClCnE,OAAA;0BACEyF,IAAI,EAAC,OAAO;0BACZC,GAAG,EAAC,IAAI;0BACRC,GAAG,EAAC,KAAK;0BACTC,IAAI,EAAC,IAAI;0BACTpB,KAAK,EAAEe,GAAG,CAACpD,QAAS;0BACpBsC,QAAQ,EAAGC,CAAC,IACV3B,oBAAoB,CAACQ,IAAI,CAACrD,EAAE,EAAE4B,KAAK,EAAE+D,QAAQ,CAACnB,CAAC,CAACC,MAAM,CAACH,KAAK,EAAE,EAAE,CAAC;wBAClE;0BAAAJ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACF,CAAC,eACFvE,OAAA;0BAAAmE,QAAA,GAAOoB,GAAG,CAACpD,QAAQ,EAAC,MAAI;wBAAA;0BAAAiC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC5B,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH;kBACN,GA7BIgB,GAAG,CAACtD,UAAU;oBAAAmC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OA8BV,CACZ,CAAC,EACDe,YAAY,CAACD,WAAW;gBAAA;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YACN,GA9CmChB,IAAI,CAACrD,EAAE;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA+ClC,CACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAGlBvE,OAAA;MAAKkE,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCnE,OAAA;QAAQ4E,OAAO,EAAEzB,UAAW;QAAC2C,QAAQ,EAAEvE,MAAO;QAAA4C,QAAA,EAC3C5C,MAAM,GAAG,cAAc,GAAG;MAAgB;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzD,EAAA,CA9NQD,WAAW;AAAAkF,EAAA,GAAXlF,WAAW;AAgOpB,eAAeA,WAAW;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}