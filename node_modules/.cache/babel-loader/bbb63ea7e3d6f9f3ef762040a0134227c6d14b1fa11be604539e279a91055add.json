{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{ResponsiveContainer,PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid}from'recharts';import'../styles/therapistRoutines.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientInterests(){const{patientId}=useParams();const[mapData,setMapData]=useState(null);const[metrics,setMetrics]=useState(null);// Map de elemento ➔ dominio OT\nconst domainMap={estadio:'Actividad Física',parque:'Ocio',colegio:'Productividad',biblioteca:'Productividad',hospital:'Autocuidado'};// Colores para gráficos\nconst DOMAIN_COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042'];const SIZE_COLORS=['#ff8042','#ffc658','#82ca9d'];useEffect(()=>{const fetchMap=async()=>{const token=localStorage.getItem('token');const{data}=await axios.get(`/api/planet-map?patientId=${patientId}`,{headers:{'x-auth-token':token}});setMapData(data);};fetchMap();},[patientId]);useEffect(()=>{if(!(mapData!==null&&mapData!==void 0&&mapData.elements))return;const elems=mapData.elements;const total=elems.length;const domains=[...new Set(Object.values(domainMap))];// 1) Conteo y suma de tamaños por dominio\nconst countByDom={},sumSizeByDom={};domains.forEach(d=>{countByDom[d]=0;sumSizeByDom[d]=0;});elems.forEach(el=>{const dom=domainMap[el.elementId]||'Otro';countByDom[dom]=(countByDom[dom]||0)+1;sumSizeByDom[dom]=(sumSizeByDom[dom]||0)+el.size;});// 2) % Distribución por dominio\nconst distribution=domains.map(d=>({name:d,value:+(countByDom[d]/total*100).toFixed(1)}));// 3) Tamaño promedio por dominio\nconst avgSizeByDom=domains.map(d=>({name:d,avg:countByDom[d]>0?+(sumSizeByDom[d]/countByDom[d]).toFixed(2):0}));// 4) Desviación estándar de distribución (%)\nconst meanPct=100/domains.length;const variance=distribution.reduce((acc,_ref)=>{let{value}=_ref;return acc+Math.pow(value-meanPct,2);},0)/domains.length;const stdDevDist=+Math.sqrt(variance).toFixed(1);// 5) Dominios subutilizados (0 elementos)\nconst underused=distribution.filter(d=>d.value===0).length;// 6) Engagement global de Autocuidado, Productividad, Ocio, Actividad Física\nconst engagement={};distribution.forEach(d=>{engagement[d.name]=d.value;});// 7) Distribución de niveles de preferencia (tamaño)\nconst lowCount=elems.filter(e=>e.size===1).length;const medCount=elems.filter(e=>e.size===2).length;const highCount=elems.filter(e=>e.size===3).length;const sizeDist=[{name:'Baja (1)',value:lowCount},{name:'Media (2)',value:medCount},{name:'Alta (3)',value:highCount}];const highPct=+(highCount/total*100).toFixed(1);// 8) Índice de Equilibrio Ocupacional\n// Inverso de la mitad de la suma de desviaciones absolutas\nconst diffSum=distribution.reduce((acc,d)=>acc+Math.abs(d.value-meanPct),0);const occBalance=+(100-diffSum/2).toFixed(1);// 9) Top 3 elementos por tamaño\nconst top3=[...elems].sort((a,b)=>b.size-a.size).slice(0,3).map(el=>({title:el.title,size:el.size}));setMetrics({total,stdDevDist,underused,engagement,distribution,avgSizeByDom,sizeDist,highPct,occBalance,top3});},[mapData]);if(!mapData){return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/interests\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Intereses \\u2013 Planet Map\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Cargando datos\\u2026\"})]});}if(!metrics){return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/interests\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Intereses \\u2013 Planet Map\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Generando estad\\xEDsticas\\u2026\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/interests\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Planet Map\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Total de Elementos: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.total})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Desv. Pref. (%): \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.stdDevDist})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Dominios Sin Uso: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.underused})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Alta Preferencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.highPct,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Engagement por Dominio\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:Object.entries(metrics.engagement).map(_ref2=>{let[name,value]=_ref2;return{name,value};}),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{unit:\"%\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#82ca9d\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Dominio\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:DOMAIN_COLORS[i%DOMAIN_COLORS.length]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"bottom\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tama\\xF1o Promedio por Dominio\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.avgSizeByDom,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"avg\",fill:\"#ffc658\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n de Preferencias\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.sizeDist,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.sizeDist.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:SIZE_COLORS[i%SIZE_COLORS.length]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"bottom\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top 3 Elementos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.top3,layout:\"vertical\",margin:{top:10,right:30,left:50,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"title\",type:\"category\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"size\",fill:\"#8884d8\"})]})})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","ResponsiveContainer","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","jsx","_jsx","jsxs","_jsxs","PatientInterests","patientId","mapData","setMapData","metrics","setMetrics","domainMap","estadio","parque","colegio","biblioteca","hospital","DOMAIN_COLORS","SIZE_COLORS","fetchMap","token","localStorage","getItem","data","get","headers","elements","elems","total","length","domains","Set","Object","values","countByDom","sumSizeByDom","forEach","d","el","dom","elementId","size","distribution","map","name","value","toFixed","avgSizeByDom","avg","meanPct","variance","reduce","acc","_ref","Math","pow","stdDevDist","sqrt","underused","filter","engagement","lowCount","e","medCount","highCount","sizeDist","highPct","diffSum","abs","occBalance","top3","sort","a","b","slice","title","className","children","to","width","height","entries","_ref2","strokeDasharray","dataKey","unit","fill","nameKey","cx","cy","outerRadius","label","_","i","verticalAlign","margin","top","right","left","bottom","layout","type"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientInterests.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n    ResponsiveContainer,\r\n    PieChart, Pie, Cell, Tooltip, Legend,\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\nexport default function PatientInterests() {\r\n    const { patientId } = useParams();\r\n    const [mapData, setMapData] = useState(null);\r\n    const [metrics, setMetrics] = useState(null);\r\n  \r\n    // Map de elemento ➔ dominio OT\r\n    const domainMap = {\r\n      estadio:    'Actividad Física',\r\n      parque:     'Ocio',\r\n      colegio:    'Productividad',\r\n      biblioteca: 'Productividad',\r\n      hospital:   'Autocuidado'\r\n    };\r\n  \r\n    // Colores para gráficos\r\n    const DOMAIN_COLORS = ['#8884d8','#82ca9d','#ffc658','#ff8042'];\r\n    const SIZE_COLORS   = ['#ff8042','#ffc658','#82ca9d'];\r\n  \r\n    useEffect(() => {\r\n      const fetchMap = async () => {\r\n        const token = localStorage.getItem('token');\r\n        const { data } = await axios.get(`/api/planet-map?patientId=${patientId}`, {\r\n          headers: { 'x-auth-token': token }\r\n        });\r\n        setMapData(data);\r\n      };\r\n      fetchMap();\r\n    }, [patientId]);\r\n  \r\n    useEffect(() => {\r\n      if (!mapData?.elements) return;\r\n      const elems     = mapData.elements;\r\n      const total     = elems.length;\r\n      const domains   = [...new Set(Object.values(domainMap))];\r\n  \r\n      // 1) Conteo y suma de tamaños por dominio\r\n      const countByDom = {}, sumSizeByDom = {};\r\n      domains.forEach(d => { countByDom[d] = 0; sumSizeByDom[d] = 0; });\r\n      elems.forEach(el => {\r\n        const dom = domainMap[el.elementId] || 'Otro';\r\n        countByDom[dom]  = (countByDom[dom] || 0) + 1;\r\n        sumSizeByDom[dom]= (sumSizeByDom[dom] || 0) + el.size;\r\n      });\r\n  \r\n      // 2) % Distribución por dominio\r\n      const distribution = domains.map((d) => ({\r\n        name:  d,\r\n        value: +((countByDom[d]/total)*100).toFixed(1)\r\n      }));\r\n  \r\n      // 3) Tamaño promedio por dominio\r\n      const avgSizeByDom = domains.map(d => ({\r\n        name: d,\r\n        avg: countByDom[d] > 0\r\n          ? +(sumSizeByDom[d]/countByDom[d]).toFixed(2)\r\n          : 0\r\n      }));\r\n  \r\n      // 4) Desviación estándar de distribución (%)\r\n      const meanPct = 100/domains.length;\r\n      const variance = distribution.reduce((acc, {value}) =>\r\n        acc + Math.pow(value-meanPct, 2), 0\r\n      ) / domains.length;\r\n      const stdDevDist = +Math.sqrt(variance).toFixed(1);\r\n  \r\n      // 5) Dominios subutilizados (0 elementos)\r\n      const underused = distribution.filter(d => d.value === 0).length;\r\n  \r\n      // 6) Engagement global de Autocuidado, Productividad, Ocio, Actividad Física\r\n      const engagement = {};\r\n      distribution.forEach(d => { engagement[d.name] = d.value; });\r\n  \r\n      // 7) Distribución de niveles de preferencia (tamaño)\r\n      const lowCount  = elems.filter(e => e.size===1).length;\r\n      const medCount  = elems.filter(e => e.size===2).length;\r\n      const highCount = elems.filter(e => e.size===3).length;\r\n      const sizeDist = [\r\n        { name:'Baja (1)',  value: lowCount  },\r\n        { name:'Media (2)', value: medCount  },\r\n        { name:'Alta (3)',  value: highCount }\r\n      ];\r\n      const highPct = +((highCount/total)*100).toFixed(1);\r\n  \r\n      // 8) Índice de Equilibrio Ocupacional\r\n      // Inverso de la mitad de la suma de desviaciones absolutas\r\n      const diffSum = distribution.reduce((acc,d) =>\r\n        acc + Math.abs(d.value - meanPct), 0\r\n      );\r\n      const occBalance = +((100 - diffSum/2)).toFixed(1);\r\n  \r\n      // 9) Top 3 elementos por tamaño\r\n      const top3 = [...elems]\r\n        .sort((a,b)=>b.size-a.size)\r\n        .slice(0,3)\r\n        .map(el=>({ title: el.title, size: el.size }));\r\n  \r\n      setMetrics({\r\n        total,\r\n        stdDevDist,\r\n        underused,\r\n        engagement,\r\n        distribution,\r\n        avgSizeByDom,\r\n        sizeDist,\r\n        highPct,\r\n        occBalance,\r\n        top3,\r\n      });\r\n    }, [mapData]);\r\n  \r\n    if (!mapData) {\r\n      return (\r\n        <div className=\"routines-container\">\r\n          <header className=\"routines-header\">\r\n            <Link to=\"/therapist/interests\">← Volver</Link>\r\n            <h2>Intereses – Planet Map</h2>\r\n          </header>\r\n          <p>Cargando datos…</p>\r\n        </div>\r\n      );\r\n    }\r\n    if (!metrics) {\r\n      return (\r\n        <div className=\"routines-container\">\r\n          <header className=\"routines-header\">\r\n            <Link to=\"/therapist/interests\">← Volver</Link>\r\n            <h2>Intereses – Planet Map</h2>\r\n          </header>\r\n          <p>Generando estadísticas…</p>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div className=\"routines-container\">\r\n        <header className=\"routines-header\">\r\n          <Link to=\"/therapist/interests\">← Volver</Link>\r\n          <h2>Estadísticas de Planet Map</h2>\r\n        </header>\r\n  \r\n        {/* Métricas clave */}\r\n        <div className=\"metrics-grid\">\r\n          <div className=\"metric-card\">\r\n            Total de Elementos: <strong>{metrics.total}</strong>\r\n          </div>\r\n          <div className=\"metric-card\">\r\n            Desv. Pref. (%): <strong>{metrics.stdDevDist}</strong>\r\n          </div>\r\n          <div className=\"metric-card\">\r\n            Dominios Sin Uso: <strong>{metrics.underused}</strong>\r\n          </div>\r\n          <div className=\"metric-card\">\r\n            Alta Preferencia: <strong>{metrics.highPct}%</strong>\r\n          </div>\r\n        </div>\r\n  \r\n        {/* Engagement por dominio */}\r\n        <div className=\"charts-grid\">\r\n          <div className=\"chart-block\">\r\n            <h3>Engagement por Dominio</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart data={Object.entries(metrics.engagement).map(([name,value])=>({name,value}))}>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis unit=\"%\" />\r\n                <Tooltip/>\r\n                <Bar dataKey=\"value\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n  \r\n          <div className=\"chart-block\">\r\n            <h3>Distribución % por Dominio</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={metrics.distribution}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\" cy=\"50%\"\r\n                  outerRadius={80}\r\n                  label\r\n                >\r\n                  {metrics.distribution.map((_,i)=>(\r\n                    <Cell key={i} fill={DOMAIN_COLORS[i%DOMAIN_COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip/><Legend verticalAlign=\"bottom\"/>\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n  \r\n          <div className=\"chart-block\">\r\n            <h3>Tamaño Promedio por Dominio</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <BarChart data={metrics.avgSizeByDom} margin={{top:20,right:30,left:0,bottom:0}}>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Bar dataKey=\"avg\" fill=\"#ffc658\"/>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n  \r\n          <div className=\"chart-block\">\r\n            <h3>Distribución de Preferencias</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={metrics.sizeDist}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\" cy=\"50%\"\r\n                  outerRadius={80}\r\n                  label\r\n                >\r\n                  {metrics.sizeDist.map((_,i)=>(\r\n                    <Cell key={i} fill={SIZE_COLORS[i%SIZE_COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip/><Legend verticalAlign=\"bottom\"/>\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n  \r\n          <div className=\"chart-block full-width\">\r\n            <h3>Top 3 Elementos</h3>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart\r\n                data={metrics.top3}\r\n                layout=\"vertical\"\r\n                margin={{top:10,right:30,left:50,bottom:5}}\r\n              >\r\n                <XAxis type=\"number\"/>\r\n                <YAxis dataKey=\"title\" type=\"category\"/>\r\n                <Tooltip/>\r\n                <Bar dataKey=\"size\" fill=\"#8884d8\"/>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}