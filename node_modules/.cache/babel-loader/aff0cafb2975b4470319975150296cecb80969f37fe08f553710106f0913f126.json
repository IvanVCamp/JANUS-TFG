{"ast":null,"code":"// PatientRoutines.js\nimport React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar,LineChart,Line,ResponsiveContainer}from'recharts';import'../styles/therapistRoutines.css';// Mapeo de actividad a categoría\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const categoryMap={futbol:'Ocio',dibujos:'Ocio',comics:'Ocio',tarea:'Obligaciones',videojuegos:'Ocio',helado:'Ocio',parque:'Ocio',banio:'Autocuidado',dormir:'Autocuidado',musica:'Ocio',bailar:'Ocio',amigos:'Ocio',bicicleta:'Ocio',dibujar:'Ocio',mascotas:'Ocio',experimentos:'Obligaciones',cantar:'Ocio',lego:'Ocio',nadar:'Autocuidado',computadora:'Ocio'};// Mapeo de categoría a grupo para radar y gauge\nconst groupMap={Autocuidado:'Autocuidado',Obligaciones:'Obligaciones',Ocio:'Ocio'};// Colores para gráficos\nconst COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042','#0088FE'];function PatientRoutines(){const{patientId}=useParams();const[results,setResults]=useState([]);const[filtered,setFiltered]=useState([]);const[from,setFrom]=useState('');const[to,setTo]=useState('');const[selected,setSelected]=useState(null);const[metrics,setMetrics]=useState(null);// Fetchar resultados de juego\nuseEffect(()=>{const token=localStorage.getItem('token');axios.get(`/api/game?patientId=${patientId}`,{headers:{'x-auth-token':token}}).then(resp=>{setResults(resp.data);// filtro por defecto: últimos 7 días\nconst now=new Date(),weekAgo=new Date(now);weekAgo.setDate(now.getDate()-6);setFrom(weekAgo.toISOString().slice(0,10));setTo(now.toISOString().slice(0,10));}).catch(console.error);},[patientId]);// Aplicar filtro de fechas\nuseEffect(()=>{if(!from||!to)return;const fDate=new Date(from),tDate=new Date(to);tDate.setHours(23,59,59,999);setFiltered(results.filter(r=>{const d=new Date(r.createdAt);return d>=fDate&&d<=tDate;}));},[results,from,to]);// Seleccionar primer resultado filtrado\nuseEffect(()=>{setSelected(filtered.length?filtered[0].createdAt:null);},[filtered]);// Calcular métricas cuando cambia el seleccionado\nuseEffect(()=>{if(!selected)return;const res=filtered.find(r=>r.createdAt===selected);setMetrics(res?computeMetrics(res,filtered):null);},[selected,filtered]);// Función para computar métricas\nfunction computeMetrics(result,allResults){const slots=result.timeSlots||[];const activities=slots.flatMap(slot=>(slot.activities||[]).map(act=>({...act,slot:slot.slot})));const totalMin=activities.reduce((sum,a)=>sum+a.duration,0);// Distribución % por categoría\nconst catSum={};activities.forEach(a=>{const c=categoryMap[a.activityId]||'Otros';catSum[c]=(catSum[c]||0)+a.duration;});const distribution=Object.entries(catSum).map(_ref=>{let[name,val]=_ref;return{name,value:+(val/totalMin*100).toFixed(1)};});// Horas absolutas por categoría\nconst hours=Object.entries(catSum).map(_ref2=>{let[name,val]=_ref2;return{name,hours:+(val/60).toFixed(2)};});// Diversidad de actividades\nconst diversity=new Set(activities.map(a=>a.activityId)).size;// Consistencia diaria (% slots ocupados)\nconst covered=slots.filter(s=>{var _s$activities;return((_s$activities=s.activities)===null||_s$activities===void 0?void 0:_s$activities.length)>0;}).length;const consistency=+(covered/24*100).toFixed(1);// Balance de grupos\nconst grpSum={Autocuidado:0,Obligaciones:0,Ocio:0};activities.forEach(a=>{const cat=categoryMap[a.activityId]||'Ocio';const grp=groupMap[cat]||'Ocio';grpSum[grp]+=a.duration;});const groupBalance=Object.entries(grpSum).map(_ref3=>{let[subject,val]=_ref3;return{subject,value:+(val/totalMin*100).toFixed(1)};});// Tendencia semanal (% por grupo)\nconst trend=allResults.map(r=>{const acts=(r.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>({...act,slot:sl.slot})));const tot=acts.reduce((s,a)=>s+a.duration,0);const sums={Autocuidado:0,Obligaciones:0,Ocio:0};acts.forEach(a=>{const c=categoryMap[a.activityId]||'Ocio';sums[groupMap[c]]+=a.duration;});return{date:new Date(r.createdAt).toLocaleDateString(),Autocuidado:+(sums.Autocuidado/tot*100).toFixed(1),Obligaciones:+(sums.Obligaciones/tot*100).toFixed(1),Ocio:+(sums.Ocio/tot*100).toFixed(1)};});// Índice de equilibrio global\nconst N=distribution.length;const uniform=100/N;const idx=1-distribution.reduce((acc,cat)=>acc+Math.abs(cat.value-uniform),0)/2/100;const balanceIndex=+idx.toFixed(2);// Patrón de continuidad: secuencia de grupos\nconst codeMap={Autocuidado:1,Obligaciones:2,Ocio:3};const seqData=[];slots.sort((a,b)=>a.slot.localeCompare(b.slot)).forEach(sl=>{sl.activities.forEach(act=>{const grp=groupMap[categoryMap[act.activityId]||'Ocio'];seqData.push(codeMap[grp]||0);});});const transitions=seqData.reduce((t,v,i,arr)=>i>0&&v!==arr[i-1]?t+1:t,0);const segments=transitions+(seqData.length>0?1:0);const continuityIndex=seqData.length>1?+(1-transitions/(seqData.length-1)).toFixed(2):1;const categorySequenceData=seqData.map((code,i)=>({index:i,categoryCode:code}));// Correspondencia Mié vs Sáb: promedio de % por grupo\nconst calcAvg=day=>{const dayRes=allResults.filter(r=>r.day===day);if(!dayRes.length)return null;const avg={Autocuidado:0,Obligaciones:0,Ocio:0};dayRes.forEach(r=>{const acts=(r.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>({...act,slot:sl.slot})));const tot=acts.reduce((s,a)=>s+a.duration,0);acts.forEach(a=>{avg[groupMap[categoryMap[a.activityId]||'Ocio']]+=a.duration/tot*100;});});Object.keys(avg).forEach(k=>avg[k]=+(avg[k]/dayRes.length).toFixed(1));return avg;};const wedAvg=calcAvg('Miércoles')||{Autocuidado:0,Obligaciones:0,Ocio:0};const satAvg=calcAvg('Sábado')||{Autocuidado:0,Obligaciones:0,Ocio:0};const wedSatComparison=Object.keys(wedAvg).map(g=>({group:g,Miércoles:wedAvg[g],Sábado:satAvg[g]}));// Correlación Pearson\nconst X=Object.values(wedAvg),Y=Object.values(satAvg);const meanX=X.reduce((a,b)=>a+b)/X.length,meanY=Y.reduce((a,b)=>a+b)/Y.length;const cov=X.reduce((s,x,i)=>s+(x-meanX)*(Y[i]-meanY),0);const varX=X.reduce((s,x)=>s+(x-meanX)**2,0),varY=Y.reduce((s,y)=>s+(y-meanY)**2,0);const correlation=varX&&varY?+(cov/Math.sqrt(varX*varY)).toFixed(2):0;const wedSatCorrelation=+(correlation*100).toFixed(1);return{distribution,hours,diversity,consistency,groupBalance,trend,balanceIndex,segments,transitions,continuityIndex,categorySequenceData,wedSatComparison,wedSatCorrelation};}return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/routines\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Rutinas\"})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"filter-section\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Desde: \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:from,onChange:e=>setFrom(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hasta: \",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:to,onChange:e=>setTo(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Seleccionar d\\xEDa:\",/*#__PURE__*/_jsx(\"select\",{value:selected||'',onChange:e=>setSelected(e.target.value),children:filtered.map(r=>{const d=new Date(r.createdAt).toLocaleDateString();return/*#__PURE__*/_jsx(\"option\",{value:r.createdAt,children:d},r.createdAt);})})]})]}),metrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Diversidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.diversity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Consistencia: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.consistency,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"\\xCDndice Equilibrio: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.balanceIndex})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Continuidad: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.continuityIndex})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Transiciones: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.transitions})]})]}),metrics&&/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Patr\\xF3n de Continuidad\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:metrics.categorySequenceData,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"index\",name:\"Secuencia\"}),/*#__PURE__*/_jsx(YAxis,{domain:[1,3],ticks:[1,2,3],tickFormatter:v=>v===1?'Auto':v===2?'Obli':'Ocio'}),/*#__PURE__*/_jsx(Tooltip,{formatter:v=>[v,'Grupo']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"categoryCode\",stroke:\"#ff8042\",dot:false})]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Segmentos: \",metrics.segments,\" | Transiciones: \",metrics.transitions]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Correspondencia Mi\\xE9 vs S\\xE1b (% por Grupo)\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.wedSatComparison,margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"group\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"Mi\\xE9rcoles\",fill:\"#8884d8\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"S\\xE1bado\",fill:\"#82ca9d\"})]})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Correlaci\\xF3n: \",metrics.wedSatCorrelation,\"%\"]})]})]})]});}export default PatientRoutines;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","LineChart","Line","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","categoryMap","futbol","dibujos","comics","tarea","videojuegos","helado","parque","banio","dormir","musica","bailar","amigos","bicicleta","dibujar","mascotas","experimentos","cantar","lego","nadar","computadora","groupMap","Autocuidado","Obligaciones","Ocio","COLORS","PatientRoutines","patientId","results","setResults","filtered","setFiltered","from","setFrom","to","setTo","selected","setSelected","metrics","setMetrics","token","localStorage","getItem","get","headers","then","resp","data","now","Date","weekAgo","setDate","getDate","toISOString","slice","catch","console","error","fDate","tDate","setHours","filter","r","d","createdAt","length","res","find","computeMetrics","result","allResults","slots","timeSlots","activities","flatMap","slot","map","act","totalMin","reduce","sum","a","duration","catSum","forEach","c","activityId","distribution","Object","entries","_ref","name","val","value","toFixed","hours","_ref2","diversity","Set","size","covered","s","_s$activities","consistency","grpSum","cat","grp","groupBalance","_ref3","subject","trend","acts","sl","tot","sums","date","toLocaleDateString","N","uniform","idx","acc","Math","abs","balanceIndex","codeMap","seqData","sort","b","localeCompare","push","transitions","t","v","i","arr","segments","continuityIndex","categorySequenceData","code","index","categoryCode","calcAvg","day","dayRes","avg","keys","k","wedAvg","satAvg","wedSatComparison","g","group","Miércoles","Sábado","X","values","Y","meanX","meanY","cov","x","varX","varY","y","correlation","sqrt","wedSatCorrelation","className","children","type","onChange","e","target","width","height","dataKey","domain","ticks","tickFormatter","formatter","stroke","dot","margin","top","right","left","bottom","strokeDasharray","fill"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientRoutines.js"],"sourcesContent":["// PatientRoutines.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  PieChart, Pie, Cell, Tooltip, Legend,\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar,\r\n  LineChart, Line,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\n// Mapeo de actividad a categoría\r\nconst categoryMap = {\r\n  futbol:     'Ocio', dibujos:   'Ocio', comics:    'Ocio',\r\n  tarea:      'Obligaciones', videojuegos: 'Ocio', helado:    'Ocio',\r\n  parque:     'Ocio', banio:     'Autocuidado', dormir:    'Autocuidado',\r\n  musica:     'Ocio', bailar:    'Ocio', amigos:    'Ocio',\r\n  bicicleta:  'Ocio', dibujar:   'Ocio', mascotas:  'Ocio',\r\n  experimentos: 'Obligaciones', cantar:    'Ocio', lego:      'Ocio',\r\n  nadar:      'Autocuidado', computadora:'Ocio'\r\n};\r\n// Mapeo de categoría a grupo para radar y gauge\r\nconst groupMap = {\r\n  Autocuidado:   'Autocuidado',\r\n  Obligaciones:  'Obligaciones',\r\n  Ocio:          'Ocio'\r\n};\r\n// Colores para gráficos\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#0088FE'];\r\n\r\nfunction PatientRoutines() {\r\n  const { patientId } = useParams();\r\n  const [results, setResults] = useState([]);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [from, setFrom] = useState('');\r\n  const [to, setTo] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [metrics, setMetrics] = useState(null);\r\n  \r\n  // Fetchar resultados de juego\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    axios.get(`/api/game?patientId=${patientId}`, {\r\n      headers: { 'x-auth-token': token }\r\n    }).then(resp => {\r\n      setResults(resp.data);\r\n      // filtro por defecto: últimos 7 días\r\n      const now = new Date(), weekAgo = new Date(now);\r\n      weekAgo.setDate(now.getDate() - 6);\r\n      setFrom(weekAgo.toISOString().slice(0,10));\r\n      setTo(now.toISOString().slice(0,10));\r\n    }).catch(console.error);\r\n  }, [patientId]);\r\n\r\n  // Aplicar filtro de fechas\r\n  useEffect(() => {\r\n    if (!from||!to) return;\r\n    const fDate = new Date(from), tDate = new Date(to);\r\n    tDate.setHours(23,59,59,999);\r\n    setFiltered(results.filter(r=>{\r\n      const d = new Date(r.createdAt);\r\n      return d>=fDate&&d<=tDate;\r\n    }));\r\n  }, [results, from, to]);\r\n\r\n  // Seleccionar primer resultado filtrado\r\n  useEffect(() => {\r\n    setSelected(filtered.length ? filtered[0].createdAt : null);\r\n  }, [filtered]);\r\n\r\n  // Calcular métricas cuando cambia el seleccionado\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    const res = filtered.find(r=>r.createdAt===selected);\r\n    setMetrics(res ? computeMetrics(res, filtered) : null);\r\n  }, [selected, filtered]);\r\n\r\n  // Función para computar métricas\r\n  function computeMetrics(result, allResults) {\r\n    const slots = result.timeSlots || [];\r\n    const activities = slots.flatMap(slot =>\r\n      (slot.activities||[]).map(act=>({ ...act, slot: slot.slot }))\r\n    );\r\n    const totalMin = activities.reduce((sum,a)=>sum+a.duration,0);\r\n    \r\n    // Distribución % por categoría\r\n    const catSum = {};\r\n    activities.forEach(a=>{\r\n      const c = categoryMap[a.activityId]||'Otros';\r\n      catSum[c] = (catSum[c]||0) + a.duration;\r\n    });\r\n    const distribution = Object.entries(catSum).map(([name,val])=>({ name, value: +((val/totalMin)*100).toFixed(1) }));\r\n    \r\n    // Horas absolutas por categoría\r\n    const hours = Object.entries(catSum).map(([name,val])=>({ name, hours: +(val/60).toFixed(2) }));\r\n    \r\n    // Diversidad de actividades\r\n    const diversity = new Set(activities.map(a=>a.activityId)).size;\r\n    \r\n    // Consistencia diaria (% slots ocupados)\r\n    const covered = slots.filter(s=>s.activities?.length>0).length;\r\n    const consistency = +((covered/24)*100).toFixed(1);\r\n    \r\n    // Balance de grupos\r\n    const grpSum = { Autocuidado:0, Obligaciones:0, Ocio:0 };\r\n    activities.forEach(a=>{\r\n      const cat = categoryMap[a.activityId]||'Ocio';\r\n      const grp = groupMap[cat]||'Ocio';\r\n      grpSum[grp] += a.duration;\r\n    });\r\n    const groupBalance = Object.entries(grpSum).map(([subject,val])=>({ subject, value: +((val/totalMin)*100).toFixed(1) }));\r\n    \r\n    // Tendencia semanal (% por grupo)\r\n    const trend = allResults.map(r=>{\r\n      const acts = (r.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>({...act, slot:sl.slot})));\r\n      const tot = acts.reduce((s,a)=>s+a.duration,0);\r\n      const sums = { Autocuidado:0, Obligaciones:0, Ocio:0 };\r\n      acts.forEach(a=>{\r\n        const c=categoryMap[a.activityId]||'Ocio';\r\n        sums[groupMap[c]]+=a.duration;\r\n      });\r\n      return {\r\n        date: new Date(r.createdAt).toLocaleDateString(),\r\n        Autocuidado: +( (sums.Autocuidado/tot)*100 ).toFixed(1),\r\n        Obligaciones:+( (sums.Obligaciones/tot)*100 ).toFixed(1),\r\n        Ocio:       +( (sums.Ocio/tot)*100 ).toFixed(1)\r\n      };\r\n    });\r\n    \r\n    // Índice de equilibrio global\r\n    const N = distribution.length;\r\n    const uniform = 100/N;\r\n    const idx = 1 - (distribution.reduce((acc,cat)=>(acc+Math.abs(cat.value-uniform)),0)/2)/100;\r\n    const balanceIndex = +idx.toFixed(2);\r\n\r\n    // Patrón de continuidad: secuencia de grupos\r\n    const codeMap = { Autocuidado:1, Obligaciones:2, Ocio:3 };\r\n    const seqData = [];\r\n    slots.sort((a,b)=>a.slot.localeCompare(b.slot)).forEach(sl=>{\r\n      sl.activities.forEach(act=>{\r\n        const grp = groupMap[ categoryMap[act.activityId]||'Ocio' ];\r\n        seqData.push(codeMap[grp] || 0);\r\n      });\r\n    });\r\n    const transitions = seqData.reduce((t,v,i,arr)=> i>0 && v!==arr[i-1]? t+1 : t, 0);\r\n    const segments = transitions + (seqData.length>0?1:0);\r\n    const continuityIndex = seqData.length>1? +(1 - transitions/(seqData.length-1)).toFixed(2) : 1;\r\n    const categorySequenceData = seqData.map((code,i)=>({ index:i, categoryCode:code }));\r\n\r\n    // Correspondencia Mié vs Sáb: promedio de % por grupo\r\n    const calcAvg = day=>{\r\n      const dayRes = allResults.filter(r=>r.day===day);\r\n      if (!dayRes.length) return null;\r\n      const avg = { Autocuidado:0, Obligaciones:0, Ocio:0 };\r\n      dayRes.forEach(r=>{\r\n        const acts = (r.timeSlots||[]).flatMap(sl=>sl.activities.map(act=>({...act, slot:sl.slot})));\r\n        const tot = acts.reduce((s,a)=>s+a.duration,0);\r\n        acts.forEach(a=>{\r\n          avg[groupMap[ categoryMap[a.activityId]||'Ocio' ]] += (a.duration/tot)*100;\r\n        });\r\n      });\r\n      Object.keys(avg).forEach(k=> avg[k] = +(avg[k]/dayRes.length).toFixed(1));\r\n      return avg;\r\n    };\r\n    const wedAvg = calcAvg('Miércoles') || {Autocuidado:0,Obligaciones:0,Ocio:0};\r\n    const satAvg = calcAvg('Sábado')   || {Autocuidado:0,Obligaciones:0,Ocio:0};\r\n    const wedSatComparison = Object.keys(wedAvg).map(g=>({ group:g, Miércoles: wedAvg[g], Sábado: satAvg[g] }));\r\n    // Correlación Pearson\r\n    const X = Object.values(wedAvg), Y = Object.values(satAvg);\r\n    const meanX = X.reduce((a,b)=>a+b)/X.length, meanY = Y.reduce((a,b)=>a+b)/Y.length;\r\n    const cov = X.reduce((s,x,i)=>s + (x-meanX)*(Y[i]-meanY),0);\r\n    const varX = X.reduce((s,x)=>s + (x-meanX)**2,0), varY = Y.reduce((s,y)=>s + (y-meanY)**2,0);\r\n    const correlation = varX&&varY? +(cov/Math.sqrt(varX*varY)).toFixed(2) : 0;\r\n    const wedSatCorrelation = +(correlation*100).toFixed(1);\r\n\r\n    return {\r\n      distribution, hours, diversity, consistency, groupBalance,\r\n      trend, balanceIndex,\r\n      segments, transitions, continuityIndex, categorySequenceData,\r\n      wedSatComparison, wedSatCorrelation\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/routines\">← Volver</Link>\r\n        <h2>Estadísticas de Rutinas</h2>\r\n      </header>\r\n\r\n      <section className=\"filter-section\">\r\n        <label>Desde: <input type=\"date\" value={from} onChange={e=>setFrom(e.target.value)} /></label>\r\n        <label>Hasta: <input type=\"date\" value={to} onChange={e=>setTo(e.target.value)} /></label>\r\n        <label>Seleccionar día:\r\n          <select value={selected||''} onChange={e=>setSelected(e.target.value)}>\r\n            {filtered.map(r=>{\r\n              const d = new Date(r.createdAt).toLocaleDateString();\r\n              return <option key={r.createdAt} value={r.createdAt}>{d}</option>;\r\n            })}\r\n          </select>\r\n        </label>\r\n      </section>\r\n\r\n      {metrics && (\r\n        <div className=\"metrics-grid\">\r\n          <div className=\"metric-card\">Diversidad: <strong>{metrics.diversity}</strong></div>\r\n          <div className=\"metric-card\">Consistencia: <strong>{metrics.consistency}%</strong></div>\r\n          <div className=\"metric-card\">Índice Equilibrio: <strong>{metrics.balanceIndex}</strong></div>\r\n          <div className=\"metric-card\">Continuidad: <strong>{metrics.continuityIndex}</strong></div>\r\n          <div className=\"metric-card\">Transiciones: <strong>{metrics.transitions}</strong></div>\r\n        </div>\r\n      )}\r\n      {metrics && (\r\n        <div className=\"charts-grid\">\r\n          {/* Gráficos existentes... */}\r\n          {/* Patrón de Continuidad */}\r\n          <div className=\"chart-block\">\r\n            <h3>Patrón de Continuidad</h3>\r\n            <ResponsiveContainer width=\"100%\" height={250}>\r\n              <LineChart data={metrics.categorySequenceData}>\r\n                <XAxis dataKey=\"index\" name=\"Secuencia\" />\r\n                <YAxis domain={[1,3]} ticks={[1,2,3]} tickFormatter={v=>v===1?'Auto':v===2?'Obli':'Ocio'} />\r\n                <Tooltip formatter={v=>[v,'Grupo']} />\r\n                <Line type=\"monotone\" dataKey=\"categoryCode\" stroke=\"#ff8042\" dot={false} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <p>Segmentos: {metrics.segments} | Transiciones: {metrics.transitions}</p>\r\n          </div>\r\n\r\n          {/* Comparativa Mié vs Sáb */}\r\n          <div className=\"chart-block full-width\">\r\n            <h3>Correspondencia Mié vs Sáb (% por Grupo)</h3>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <BarChart data={metrics.wedSatComparison} margin={{ top:20, right:30, left:0, bottom:0 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"group\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Bar dataKey=\"Miércoles\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"Sábado\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n            <p>Correlación: {metrics.wedSatCorrelation}%</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientRoutines;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}