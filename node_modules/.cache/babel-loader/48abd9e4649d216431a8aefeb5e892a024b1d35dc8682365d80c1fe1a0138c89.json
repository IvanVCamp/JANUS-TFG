{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,Link}from'react-router-dom';import axios from'axios';import{ResponsiveContainer,PieChart,Pie,Cell,Tooltip,Legend,BarChart,Bar,XAxis,YAxis,CartesianGrid}from'recharts';import'../styles/therapistRoutines.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function PatientInterests(){const{patientId}=useParams();const[mapData,setMapData]=useState(null);const[metrics,setMetrics]=useState(null);// Mapeo de elemento ➔ categoría terapéutica\nconst categoryMap={estadio:'Deporte',parque:'Recreación',colegio:'Educación',biblioteca:'Educación',hospital:'Salud'};const CAT_COLORS=['#8884d8','#82ca9d','#ffc658','#ff8042'];const SIZE_COLORS=['#ff8042','#ffc658','#82ca9d'];// baja, media, alta\nuseEffect(()=>{const fetchMap=async()=>{const token=localStorage.getItem('token');const{data}=await axios.get(`/api/planet-map?patientId=${patientId}`,{headers:{'x-auth-token':token}});setMapData(data);};fetchMap();},[patientId]);useEffect(()=>{if(!(mapData!==null&&mapData!==void 0&&mapData.elements))return;const elems=mapData.elements;const total=elems.length;// Conteo por categoría\nconst countByCat={};Object.values(categoryMap).forEach(c=>countByCat[c]=0);elems.forEach(el=>{const cat=categoryMap[el.elementId]||'Otro';countByCat[cat]=(countByCat[cat]||0)+1;});// Tamaño promedio por categoría\nconst sizeSum={};Object.keys(countByCat).forEach(cat=>sizeSum[cat]=0);elems.forEach(el=>{const cat=categoryMap[el.elementId]||'Otro';sizeSum[cat]+=el.size;});const avgSize={};Object.entries(sizeSum).forEach(_ref=>{let[cat,sum]=_ref;avgSize[cat]=countByCat[cat]>0?+(sum/countByCat[cat]).toFixed(2):0;});// Distribución % por categoría\nconst distribution=Object.entries(countByCat).map(_ref2=>{let[name,cnt]=_ref2;return{name,value:+(cnt/total*100).toFixed(1)};});// Top 3 elementos por tamaño\nconst top3=[...elems].sort((a,b)=>b.size-a.size).slice(0,3).map(el=>({title:el.title,size:el.size}));// Diversidad de tipos\nconst uniqueTypes=new Set(elems.map(e=>e.elementId)).size;// Distribución de tamaños global\nconst lowCount=elems.filter(e=>e.size===1).length;const medCount=elems.filter(e=>e.size===2).length;const highCount=elems.filter(e=>e.size===3).length;const sizeDist=[{name:'Baja (1)',value:lowCount},{name:'Media (2)',value:medCount},{name:'Alta (3)',value:highCount}];const highPct=+(highCount/total*100).toFixed(1);// Índice de equilibrio ocupacional:\n// Ideal sería distribución uniforme: 100 / categorías\nconst N=distribution.length;const uniform=100/N;const diffSum=distribution.reduce((acc,d)=>acc+Math.abs(d.value-uniform),0);// diffSum/2 es la mitad de suma de diferencias\nconst occBalance=+(100-diffSum/2).toFixed(1);setMetrics({total,uniqueTypes,distribution,avgSize,top3,sizeDist,highPct,occBalance});},[mapData]);if(!mapData){return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/interests\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Intereses \\u2013 Planet Map\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Cargando datos\\u2026\"})]});}if(!metrics){return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/interests\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Intereses \\u2013 Planet Map\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Generando estad\\xEDsticas\\u2026\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"routines-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"routines-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/therapist/interests\",children:\"\\u2190 Volver\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Estad\\xEDsticas de Planet Map\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Total de Elementos: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.total})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Tipos \\xDAnicos: \",/*#__PURE__*/_jsx(\"strong\",{children:metrics.uniqueTypes})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Alta Preferencia (%): \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.highPct,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[\"Equilibrio Ocupacional: \",/*#__PURE__*/_jsxs(\"strong\",{children:[metrics.occBalance,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n % por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.distribution,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.distribution.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:CAT_COLORS[i%CAT_COLORS.length]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"bottom\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tama\\xF1o Promedio por Categor\\xEDa\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:Object.entries(metrics.avgSize).map(_ref3=>{let[name,avg]=_ref3;return{name,avg};}),margin:{top:20,right:30,left:0,bottom:0},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"avg\",fill:\"#82ca9d\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Distribuci\\xF3n por Nivel de Preferencia\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:metrics.sizeDist,dataKey:\"value\",nameKey:\"name\",cx:\"50%\",cy:\"50%\",outerRadius:80,label:true,children:metrics.sizeDist.map((_,i)=>/*#__PURE__*/_jsx(Cell,{fill:SIZE_COLORS[i%SIZE_COLORS.length]},i))}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"bottom\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-block full-width\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top 3 Elementos por Preferencia\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metrics.top3,layout:\"vertical\",margin:{top:10,right:30,left:50,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"title\",type:\"category\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"size\",fill:\"#ffc658\"})]})})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","axios","ResponsiveContainer","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","jsx","_jsx","jsxs","_jsxs","PatientInterests","patientId","mapData","setMapData","metrics","setMetrics","categoryMap","estadio","parque","colegio","biblioteca","hospital","CAT_COLORS","SIZE_COLORS","fetchMap","token","localStorage","getItem","data","get","headers","elements","elems","total","length","countByCat","Object","values","forEach","c","el","cat","elementId","sizeSum","keys","size","avgSize","entries","_ref","sum","toFixed","distribution","map","_ref2","name","cnt","value","top3","sort","a","b","slice","title","uniqueTypes","Set","e","lowCount","filter","medCount","highCount","sizeDist","highPct","N","uniform","diffSum","reduce","acc","d","Math","abs","occBalance","className","children","to","width","height","dataKey","nameKey","cx","cy","outerRadius","label","_","i","fill","verticalAlign","_ref3","avg","margin","top","right","left","bottom","strokeDasharray","layout","type"],"sources":["C:/Users/User/Desktop/TFG/prototipo-TFG/Janus-TFG/src/components/PatientInterests.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n    ResponsiveContainer,\r\n    PieChart, Pie, Cell, Tooltip, Legend,\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid\r\n} from 'recharts';\r\nimport '../styles/therapistRoutines.css';\r\n\r\nexport default function PatientInterests() {\r\n    const { patientId } = useParams();\r\n  const [mapData, setMapData]     = useState(null);\r\n  const [metrics, setMetrics]     = useState(null);\r\n\r\n  // Mapeo de elemento ➔ categoría terapéutica\r\n  const categoryMap = {\r\n    estadio:    'Deporte',\r\n    parque:     'Recreación',\r\n    colegio:    'Educación',\r\n    biblioteca: 'Educación',\r\n    hospital:   'Salud'\r\n  };\r\n\r\n  const CAT_COLORS  = ['#8884d8','#82ca9d','#ffc658','#ff8042'];\r\n  const SIZE_COLORS = ['#ff8042','#ffc658','#82ca9d']; // baja, media, alta\r\n\r\n  useEffect(() => {\r\n    const fetchMap = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const { data } = await axios.get(`/api/planet-map?patientId=${patientId}`, {\r\n        headers: { 'x-auth-token': token }\r\n      });\r\n      setMapData(data);\r\n    };\r\n    fetchMap();\r\n  }, [patientId]);\r\n\r\n  useEffect(() => {\r\n    if (!mapData?.elements) return;\r\n    const elems = mapData.elements;\r\n    const total = elems.length;\r\n\r\n    // Conteo por categoría\r\n    const countByCat = {};\r\n    Object.values(categoryMap).forEach(c => countByCat[c] = 0);\r\n    elems.forEach(el => {\r\n      const cat = categoryMap[el.elementId] || 'Otro';\r\n      countByCat[cat] = (countByCat[cat] || 0) + 1;\r\n    });\r\n\r\n    // Tamaño promedio por categoría\r\n    const sizeSum = {};\r\n    Object.keys(countByCat).forEach(cat => sizeSum[cat] = 0);\r\n    elems.forEach(el => {\r\n      const cat = categoryMap[el.elementId] || 'Otro';\r\n      sizeSum[cat] += el.size;\r\n    });\r\n    const avgSize = {};\r\n    Object.entries(sizeSum).forEach(([cat, sum]) => {\r\n      avgSize[cat] = countByCat[cat] > 0\r\n        ? +(sum / countByCat[cat]).toFixed(2)\r\n        : 0;\r\n    });\r\n\r\n    // Distribución % por categoría\r\n    const distribution = Object.entries(countByCat).map(([name, cnt]) => ({\r\n      name,\r\n      value: +((cnt / total) * 100).toFixed(1)\r\n    }));\r\n\r\n    // Top 3 elementos por tamaño\r\n    const top3 = [...elems]\r\n      .sort((a, b) => b.size - a.size)\r\n      .slice(0, 3)\r\n      .map(el => ({ title: el.title, size: el.size }));\r\n\r\n    // Diversidad de tipos\r\n    const uniqueTypes = new Set(elems.map(e => e.elementId)).size;\r\n\r\n    // Distribución de tamaños global\r\n    const lowCount  = elems.filter(e => e.size === 1).length;\r\n    const medCount  = elems.filter(e => e.size === 2).length;\r\n    const highCount = elems.filter(e => e.size === 3).length;\r\n    const sizeDist = [\r\n      { name: 'Baja (1)',  value: lowCount  },\r\n      { name: 'Media (2)', value: medCount  },\r\n      { name: 'Alta (3)',  value: highCount }\r\n    ];\r\n    const highPct = +((highCount / total) * 100).toFixed(1);\r\n\r\n    // Índice de equilibrio ocupacional:\r\n    // Ideal sería distribución uniforme: 100 / categorías\r\n    const N = distribution.length;\r\n    const uniform = 100 / N;\r\n    const diffSum = distribution.reduce((acc, d) =>\r\n      acc + Math.abs(d.value - uniform), 0\r\n    );\r\n    // diffSum/2 es la mitad de suma de diferencias\r\n    const occBalance = +(100 - diffSum / 2).toFixed(1);\r\n\r\n    setMetrics({\r\n      total,\r\n      uniqueTypes,\r\n      distribution,\r\n      avgSize,\r\n      top3,\r\n      sizeDist,\r\n      highPct,\r\n      occBalance\r\n    });\r\n  }, [mapData]);\r\n\r\n  if (!mapData) {\r\n    return (\r\n      <div className=\"routines-container\">\r\n        <header className=\"routines-header\">\r\n          <Link to=\"/therapist/interests\">← Volver</Link>\r\n          <h2>Intereses – Planet Map</h2>\r\n        </header>\r\n        <p>Cargando datos…</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!metrics) {\r\n    return (\r\n      <div className=\"routines-container\">\r\n        <header className=\"routines-header\">\r\n          <Link to=\"/therapist/interests\">← Volver</Link>\r\n          <h2>Intereses – Planet Map</h2>\r\n        </header>\r\n        <p>Generando estadísticas…</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"routines-container\">\r\n      <header className=\"routines-header\">\r\n        <Link to=\"/therapist/interests\">← Volver</Link>\r\n        <h2>Estadísticas de Planet Map</h2>\r\n      </header>\r\n\r\n      {/* Métricas clave */}\r\n      <div className=\"metrics-grid\">\r\n        <div className=\"metric-card\">\r\n          Total de Elementos: <strong>{metrics.total}</strong>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          Tipos Únicos: <strong>{metrics.uniqueTypes}</strong>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          Alta Preferencia (%): <strong>{metrics.highPct}%</strong>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          Equilibrio Ocupacional: <strong>{metrics.occBalance}%</strong>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Gráficos */}\r\n      <div className=\"charts-grid\">\r\n        {/* Distribución % por categoría */}\r\n        <div className=\"chart-block\">\r\n          <h3>Distribución % por Categoría</h3>\r\n          <ResponsiveContainer width=\"100%\" height={250}>\r\n            <PieChart>\r\n              <Pie\r\n                data={metrics.distribution}\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\" cy=\"50%\"\r\n                outerRadius={80}\r\n                label\r\n              >\r\n                {metrics.distribution.map((_, i) =>\r\n                  <Cell key={i} fill={CAT_COLORS[i % CAT_COLORS.length]} />\r\n                )}\r\n              </Pie>\r\n              <Tooltip /><Legend verticalAlign=\"bottom\" />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Tamaño promedio por categoría */}\r\n        <div className=\"chart-block\">\r\n          <h3>Tamaño Promedio por Categoría</h3>\r\n          <ResponsiveContainer width=\"100%\" height={250}>\r\n            <BarChart\r\n              data={Object.entries(metrics.avgSize).map(([name, avg]) => ({ name, avg }))}\r\n              margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"avg\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Distribución de Niveles de Preferencia */}\r\n        <div className=\"chart-block\">\r\n          <h3>Distribución por Nivel de Preferencia</h3>\r\n          <ResponsiveContainer width=\"100%\" height={250}>\r\n            <PieChart>\r\n              <Pie\r\n                data={metrics.sizeDist}\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\" cy=\"50%\"\r\n                outerRadius={80}\r\n                label\r\n              >\r\n                {metrics.sizeDist.map((_, i) =>\r\n                  <Cell key={i} fill={SIZE_COLORS[i % SIZE_COLORS.length]} />\r\n                )}\r\n              </Pie>\r\n              <Tooltip /><Legend verticalAlign=\"bottom\" />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Top 3 elementos */}\r\n        <div className=\"chart-block full-width\">\r\n          <h3>Top 3 Elementos por Preferencia</h3>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart\r\n              data={metrics.top3}\r\n              layout=\"vertical\"\r\n              margin={{ top: 10, right: 30, left: 50, bottom: 5 }}\r\n            >\r\n              <XAxis type=\"number\" />\r\n              <YAxis dataKey=\"title\" type=\"category\" />\r\n              <Tooltip />\r\n              <Bar dataKey=\"size\" fill=\"#ffc658\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}